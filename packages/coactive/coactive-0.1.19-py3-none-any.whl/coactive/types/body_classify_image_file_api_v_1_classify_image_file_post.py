# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class BodyClassifyImageFileApiV1ClassifyImageFilePost(pydantic.BaseModel):
    image: str = pydantic.Field(description="Image file")
    concept_ids: typing.Optional[typing.List[str]] = pydantic.Field(
        description="Concepts ids to use for classification. All concepts must belong to the same dataset."
    )
    threshold: typing.Optional[float] = pydantic.Field(description="Threshold above which classification is positive")
    dataset_id: typing.Optional[str] = pydantic.Field(
        description="The dataset id to get all concepts to use for classification"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
