Metadata-Version: 2.1
Name: labManager-admin-server
Version: 1.0.0
Summary: System for managing multi-station multi-tenant lab setups - admin server.
Project-URL: Source Code, https://github.com/dcnieho/labManager/tree/master/labManager-admin-server
Author-email: Diederick Niehorster <diederick_c.niehorster@humlab.lu.se>
License-Expression: MIT
License-File: LICENSE
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: System :: Software Distribution
Classifier: Topic :: System :: Systems Administration
Classifier: Topic :: Utilities
Requires-Python: >=3.10
Requires-Dist: authlib
Requires-Dist: fastapi
Requires-Dist: httpx
Requires-Dist: labmanager-common==1.0.0
Requires-Dist: ldap3!=2.5.0,!=2.5.2,!=2.6,>=2.5
Requires-Dist: python-dotenv
Requires-Dist: uvicorn[standard]
Description-Content-Type: text/markdown

[![PyPI Latest Release](https://img.shields.io/pypi/v/labManager-admin-server.svg?label=pypi%20labManager-admin-server)](https://pypi.org/project/labManager-admin-server/)
[![PyPI Latest Release](https://img.shields.io/pypi/v/labManager-client.svg?label=pypi%20labManager-client)](https://pypi.org/project/labManager-client/)
[![PyPI Latest Release](https://img.shields.io/pypi/v/labManager-common.svg?label=pypi%20labManager-common)](https://pypi.org/project/labManager-common/)
[![PyPI Latest Release](https://img.shields.io/pypi/v/labManager-master.svg?label=pypi%20labManager-master)](https://pypi.org/project/labManager-master/)

[![image](https://img.shields.io/pypi/pyversions/labManager-master.svg)](https://pypi.org/project/labManager-master/)

# labManager v1.0.0
Master/client software for managing multi-station multi-tenant lab setups.

## Standalone deployment
One simple way to make a standalone install of the app is to download [WinPython](https://winpython.github.io/), e.g. the latest 3.10.x version.
I think this is recommended instead of using a system-wide or or user installation of Python, so that user of the computer will not interfere with the distribution
running the management tools.

Do as follows:
1. Download the dot version, not the full package, e.g. `Winpython64-3.10.11.1dot`.
2. Run the downloaded exe, which unzips the WinPython files.
3. Take the python folder from the unzipped files (e.g. `python-3.10.11.amd64`), you do not need the rest. This is your python distribution. Put it where you want on the disk.
4. Install the wanted labManager packages into it using, e.g., `.\python.exe -m pip install labManager-client`.
5. Finally use the `python.exe` in the folder to execute your script, such as one of the [example scripts](example_scripts).