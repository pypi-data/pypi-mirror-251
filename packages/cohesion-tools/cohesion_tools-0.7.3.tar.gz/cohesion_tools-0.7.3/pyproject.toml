[project]
name = "cohesion-tools"
requires-python = ">=3.8"

[tool.poetry]
# These fields should be unified with `project` section.
# See https://github.com/python-poetry/poetry/issues/3332
name = "cohesion-tools"
version = "0.7.3"
description = ""
license = "MIT"
authors = ["nobu-g <ueda-n127@hotmail.co.jp>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8"
rhoknp = ">=1.5.1"
pandas = [
    { version = "~2.0.3", python = "3.8", optional = true },
    { version = "^2.0", python = ">=3.9", optional = true },
]

[tool.poetry.group.dev.dependencies]
ipython = [
    { version = "~8.12.1", python = "3.8" },
    { version = "^8.13", python = ">=3.9" },
]
ipdb = "^0.13.13"
pytest = "^7.4"
setuptools = "^69.0"  # https://stackoverflow.com/questions/75307814/error-python-packaging-tool-setuptools-not-found

[tool.poetry.extras]
eval = ["pandas"]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.mypy]
python_version = 3.8

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py38"  # The minimum Python version to target
src = ["src"]
ignore = [
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "E501",  # Line too long
    "RUF001",  # String contains ambiguous `ノ` (KATAKANA LETTER NO). Did you mean `/` (SOLIDUS)?
    "RUF002",  # Docstring contains ambiguous `，` (FULLWIDTH COMMA). Did you mean `,` (COMMA)?
    "COM812",  # Trailing comma missing
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
]
select = ["F", "E", "W", "I", "B", "PL", "PD", "NPY", "RUF", "UP", "TID", "COM", "PT", "ARG", "PYI", "ANN"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
