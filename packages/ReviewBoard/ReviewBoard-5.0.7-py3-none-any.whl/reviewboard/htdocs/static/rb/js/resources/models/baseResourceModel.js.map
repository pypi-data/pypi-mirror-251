{"version":3,"file":"baseResourceModel.js","names":["RB","BaseResource","Backbone","Model","extend","defaults","extraData","links","loaded","parentObject","rspNamespace","urlIDAttr","listKey","expandedFields","extraQueryArgs","supportsExtraData","attrToJsonMap","serializedAttrs","deserializedAttrs","serializers","deserializers","initialize","_setupExtraData","url","get","self","href","key","_","result","link","baseURL","isNew","ready","options","context","undefined","isFunction","success","error","complete","console","warn","promiseToCallbacks","newOptions","bind","fetch","data","ensureCreated","save","Error","Promise","resolve","reject","prototype","call","model","xhr","BackboneError","trigger","_saveObject","saveOptions","attrs","toJSON","files","readers","form","payloadFileKeys","window","File","forEach","file","push","length","reader","FileReader","onloadend","every","r","readyState","DONE","_saveWithFiles","readAsArrayBuffer","fileReaders","boundary","Date","getTime","blob","zip","name","type","value","Object","entries","includes","Blob","processData","contentType","destroy","_destroyObject","_finishDestroy","wait","set","id","parse","rsp","assert","stat","extra_data","parseResourceData","attrName","deserializer","jsonField","serializerState","serializer","sync","method","isEmpty","isArray","pick","map","attr","syncOptions","expand","join","storeAPIError","errorPayload","has","validate","strings","isObject","INVALID_EXTRADATA_TYPE","isNull","isNumber","isNaN","isBoolean","isString","INVALID_EXTRADATA_VALUE_TYPE","replace","UNSET_PARENT_OBJECT","ExtraDataMixin"],"sources":["../../../../../../static/rb/js/resources/models/baseResourceModel.es6.js"],"sourcesContent":["/**\n * The base model for all API-backed resource models.\n *\n * This provides a common set of attributes and functionality for working\n * with Review Board's REST API. That includes fetching data for a known\n * resource, creating resources, saving, deleting, and navigating children\n * resources by way of a payload's list of links.\n *\n * Other resource models are expected to extend this. In particular, they\n * should generally be extending toJSON() and parse().\n */\nRB.BaseResource = Backbone.Model.extend({\n    /**\n     * Return default values for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The attribute defaults.\n     */\n    defaults() {\n        return {\n            extraData: {},\n            links: null,\n            loaded: false,\n            parentObject: null\n        };\n    },\n\n    /** The key for the namespace for the object's payload in a response. */\n    rspNamespace: '',\n\n    /** The attribute used for the ID in the URL. */\n    urlIDAttr: 'id',\n\n    listKey() {\n        return this.rspNamespace + 's';\n    },\n\n    /** The list of fields to expand in resource payloads. */\n    expandedFields: [],\n\n    /**\n     * Extra query arguments for GET requests.\n     *\n     * This may also be a function that returns the extra query arguments.\n     *\n     * These values can be overridden by the caller when making a request.\n     * They function as defaults for the queries.\n     */\n    extraQueryArgs: {},\n\n    /** Whether or not extra data can be associated on the resource. */\n    supportsExtraData: false,\n\n    /**\n     * A map of attribute names to resulting JSON field names.\n     *\n     * This is used to auto-generate a JSON payload from attribute names\n     * in toJSON().\n     *\n     * It's also needed if using attribute names in any save({attrs: [...]})\n     * calls.\n     */\n    attrToJsonMap: {},\n\n    /** A list of attributes to serialize in toJSON(). */\n    serializedAttrs: [],\n\n    /** A list of attributes to deserialize in parseResourceData(). */\n    deserializedAttrs: [],\n\n    /** Special serializer functions called in toJSON(). */\n    serializers: {},\n\n    /** Special deserializer functions called in parseResourceData(). */\n    deserializers: {},\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        if (this.supportsExtraData) {\n            this._setupExtraData();\n        }\n    },\n\n    /**\n     * Return the URL for this resource's instance.\n     *\n     * If this resource is loaded and has a URL to itself, that URL will\n     * be returned. If not yet loaded, it'll try to get it from its parent\n     * object, if any.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when fetching the resource. If the URL cannot be\n     *     determined, this will return null.\n     */\n    url() {\n        let links = this.get('links');\n\n        if (links) {\n            return links.self.href;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            links = parentObject.get('links');\n\n            if (links) {\n                const key = _.result(this, 'listKey');\n                const link = links[key];\n\n                if (link) {\n                    const baseURL = link.href;\n\n                    return this.isNew()\n                           ? baseURL\n                           : (baseURL + this.get(this.urlIDAttr) + '/');\n                }\n            }\n        }\n\n        return null;\n    },\n\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * An object is ready it has an ID and is loaded, or is a new resource.\n     *\n     * When the object is ready, options.ready() will be called. This may\n     * be called immediately, or after one or more round trips to the server.\n     *\n     * If we fail to load the resource, objects.error() will be called instead.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the fetch operation.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     *\n     * Option Args:\n     *     data (object, optional):\n     *         Data to pass through to the fetch operation.\n     *\n     *     ready (function):\n     *         Callback function for when the object is ready to use.\n     *\n     *     error (function):\n     *         Callback function for when an error occurs.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async ready(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete) ||\n            _.isFunction(options.ready)) {\n            console.warn('RB.BaseResource.ready was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.ready());\n        }\n\n        const success = _.isFunction(options.ready)\n                        ? _.bind(options.ready, context)\n                        : undefined;\n        const error = _.isFunction(options.error)\n                      ? _.bind(options.error, context)\n                      : undefined;\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.get('loaded')) {\n            if (!this.isNew()) {\n                // Fetch data from the server\n                await this.fetch({ data: options.data });\n            } else if (parentObject) {\n                /*\n                 * This is a new object, which means there's nothing to fetch\n                 * from the server, but we still need to ensure that the\n                 * parent is loaded in order for it to have valid links.\n                 */\n                await parentObject.ready();\n            }\n        }\n    },\n\n    /**\n     * Call a function when we know an object exists server-side.\n     *\n     * This works like ready() in that it's used to delay operating on the\n     * resource until we have a server-side representation. Unlike ready(),\n     * it will attempt to create it if it doesn't exist first.\n     *\n     * If we fail to create the object, options.error() will be called\n     * instead.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Object with success and error callbacks.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async ensureCreated(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.ensureCreated was called using ' +\n                         'callbacks. Callers should be updated to use ' +\n                         'promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.ensureCreated());\n        }\n\n        await this.ready();\n\n        if (!this.get('loaded')) {\n            await(this.save());\n        }\n    },\n\n    /**\n     * Fetch the object's data from the server.\n     *\n     * An object must have an ID before it can be fetched. Otherwise,\n     * options.error() will be called.\n     *\n     * If this has a parent resource object, we'll ensure that's ready before\n     * fetching this resource.\n     *\n     * The resource must override the parse() function to determine how\n     * the returned resource data is parsed and what data is stored in\n     * this object.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated the callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to pass through to the base Backbone fetch operation.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    fetch: async function(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.fetch was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.fetch(newOptions));\n        }\n\n        if (this.isNew()) {\n            throw new Error(\n                'fetch cannot be used on a resource without an ID');\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            await parentObject.ready();\n        }\n\n        return new Promise((resolve, reject) => {\n            Backbone.Model.prototype.fetch.call(this, _.extend({\n                success: () => resolve(),\n                error: (model, xhr, options) => reject(\n                    new BackboneError(model, xhr, options)),\n            }, options));\n        });\n    },\n\n    /**\n     * Save the object's data to the server.\n     *\n     * If the object has an ID already, it will be saved to its known\n     * URL using HTTP PUT. If it doesn't have an ID, it will be saved\n     * to its parent list resource using HTTP POST\n     *\n     * If this has a parent resource object, we'll ensure that's created\n     * before saving this resource.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be saved.\n     *\n     * The resource must override the toJSON() function to determine what\n     * data is saved to the server.\n     *\n     * If we successfully save the resource, options.success() will be\n     * called, and the \"saved\" event will be triggered.\n     *\n     * If we fail to save the resource, options.error() will be called.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated the callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the save operation.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async save(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.save was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.save(newOptions));\n        }\n\n        this.trigger('saving', options);\n        await this.ready();\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            await parentObject.ensureCreated();\n        }\n\n        return await this._saveObject(options);\n    },\n\n    /**\n     * Handle the actual saving of the object's state.\n     *\n     * This is called internally by save() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    _saveObject(options) {\n        return new Promise((resolve, reject) => {\n            const url = _.result(this, 'url');\n            if (!url) {\n                reject(new Error(\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be saved'));\n\n                return;\n            }\n\n            const saveOptions = _.defaults({\n                success: (model, xhr) => {\n                    this.trigger('saved', options);\n                    resolve(xhr);\n                },\n                error: (model, xhr, options) => {\n                    this.trigger('saveFailed', options);\n                    reject(new BackboneError(model, xhr, options));\n                }\n            }, options);\n\n            saveOptions.attrs = options.attrs || this.toJSON(options);\n\n            const files = [];\n            const readers = [];\n\n            if (!options.form) {\n                if (this.payloadFileKeys && window.File) {\n                    /* See if there are files in the attributes we're using. */\n                    this.payloadFileKeys.forEach(key => {\n                        const file = saveOptions.attrs[key];\n\n                        if (file) {\n                            files.push(file);\n                        }\n                    });\n                }\n            }\n\n            if (files.length > 0) {\n                files.forEach(file => {\n                    const reader = new FileReader();\n\n                    readers.push(reader);\n                    reader.onloadend = () => {\n                        if (readers.every(r => r.readyState === FileReader.DONE)) {\n                            this._saveWithFiles(files, readers, saveOptions);\n                        }\n                    };\n                    reader.readAsArrayBuffer(file);\n                });\n            } else {\n                Backbone.Model.prototype.save.call(this, {}, saveOptions);\n            }\n        });\n    },\n\n    /**\n     * Save the model with a file upload.\n     *\n     * When doing file uploads, we need to hand-structure a form-data payload\n     * to the server. It will contain the file contents and the attributes\n     * we're saving. We can then call the standard save function with this\n     * payload as our data.\n     *\n     * Args:\n     *     files (Array of object):\n     *         A list of files, with ``name`` and ``type`` keys.\n     *\n     *     fileReaders (Array of FileReader):\n     *         Readers corresponding to each item in ``files``.\n     *\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Option Args:\n     *     boundary (string):\n     *         Optional MIME multipart boundary.\n     *\n     *     attrs (object):\n     *         Additional key/value pairs to include in the payload data.\n     */\n    _saveWithFiles(files, fileReaders, options) {\n        const boundary = options.boundary ||\n                         ('-----multipartformboundary' + new Date().getTime());\n        const blob = [];\n\n        for (let [key, file, reader] of\n             _.zip(this.payloadFileKeys, files, fileReaders)) {\n            if (!file || !reader) {\n                continue;\n            }\n\n            blob.push('--' + boundary + '\\r\\n');\n            blob.push('Content-Disposition: form-data; name=\"' +\n                      key + '\"; filename=\"' + file.name + '\"\\r\\n');\n            blob.push('Content-Type: ' + file.type + '\\r\\n');\n            blob.push('\\r\\n');\n\n            blob.push(reader.result);\n\n            blob.push('\\r\\n');\n        }\n\n        for (let [key, value] of Object.entries(options.attrs)) {\n            if (!this.payloadFileKeys.includes(key) &&\n                value !== undefined &&\n                value !== null) {\n                blob.push('--' + boundary + '\\r\\n');\n                blob.push('Content-Disposition: form-data; name=\"' + key +\n                          '\"\\r\\n');\n                blob.push('\\r\\n');\n                blob.push(value + '\\r\\n');\n            }\n        }\n\n        blob.push('--' + boundary + '--\\r\\n\\r\\n');\n\n        Backbone.Model.prototype.save.call(this, {}, _.extend({\n            data: new Blob(blob),\n            processData: false,\n            contentType: 'multipart/form-data; boundary=' + boundary,\n        }, options));\n    },\n\n    /**\n     * Delete the object's resource on the server.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be deleted.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Object with success and error callbacks.\n     *\n     *     context (object, optional):\n     *         Context to use when calling callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async destroy(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.destroy was called using ' +\n                         'callbacks. Callers should be updated to use ' +\n                         'promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.destroy(newOptions));\n        }\n\n        this.trigger('destroying', options);\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.isNew() && parentObject) {\n            /*\n             * XXX This is temporary to support older-style resource\n             *     objects. We should just use ready() once we're moved\n             *     entirely onto BaseResource.\n             */\n            await parentObject.ready();\n        }\n\n        await this._destroyObject(options);\n    },\n\n    /**\n     * Set up the deletion of the object.\n     *\n     * This is called internally by destroy() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Once we've done some work to ensure the URL is valid and the object\n     * is ready, we'll finish destruction by calling _finishDestroy.\n     *\n     * Args:\n     *     options (object):\n     *         Options object to include with events.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async _destroyObject(options={}) {\n        const url = _.result(this, 'url');\n\n        if (url) {\n            await this.ready();\n            await this._finishDestroy(options);\n        } else {\n            if (this.isNew()) {\n                /*\n                 * If both this resource and its parent are new, it's\n                 * possible that we'll get through here without a url. In\n                 * this case, all the data is still local to the client\n                 * and there's not much to clean up; just call\n                 * Model.destroy and be done with it.\n                 */\n                await this._finishDestroy(options);\n            } else {\n                throw new Error(\n                    'The object must either be loaded from the server ' +\n                    'or have a parent object before it can be deleted'\n                );\n            }\n        }\n    },\n\n    /**\n     * Finish destruction of the object.\n     *\n     * This will call the parent destroy method, then reset the state\n     * of the object on success.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    _finishDestroy(options) {\n        return new Promise((resolve, reject) => {\n            const parentObject = this.get('parentObject');\n\n            Backbone.Model.prototype.destroy.call(this, {\n                wait: true,\n                success: () => {\n                    /*\n                     * Reset the object so it's new again, but with the same\n                     * parentObject.\n                     */\n                    this.set(_.defaults(\n                        {\n                            id: null,\n                            parentObject: parentObject,\n                        },\n                        _.result(this, 'defaults')));\n\n                    this.trigger('destroyed', options);\n\n                    resolve();\n                },\n                error: (model, xhr, options) => reject(\n                    new BackboneError(model, xhr, options)),\n            });\n        });\n    },\n\n    /**\n     * Parse and returns the payload from an API response.\n     *\n     * This will by default only return the object's ID and list of links.\n     * Subclasses should override this to return any additional data that's\n     * needed, but they must include the results of\n     * BaseResource.protoype.parse as well.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parse(rsp) {\n        console.assert(this.rspNamespace,\n                       'rspNamespace must be defined on the resource model');\n\n        if (rsp.stat !== undefined) {\n            /*\n             * This resource payload is inside an envelope from an API\n             * call. It's not model construction data or from a list\n             * resource.\n             */\n            rsp = rsp[this.rspNamespace];\n        }\n\n        return _.defaults({\n            extraData: rsp.extra_data,\n            id: rsp.id,\n            links: rsp.links,\n            loaded: true\n        }, this.parseResourceData(rsp));\n    },\n\n    /*\n     * Parse the resource data from a payload.\n     *\n     * By default, this will make use of attrToJsonMap and any\n     * jsonDeserializers to construct a resulting set of attributes.\n     *\n     * This can be overridden by subclasses.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parseResourceData(rsp) {\n        const attrs = {};\n\n        for (let attrName of this.deserializedAttrs) {\n            const deserializer = this.deserializers[attrName];\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            let value = rsp[jsonField];\n\n            if (deserializer) {\n                value = deserializer.call(this, value);\n            }\n\n            if (value !== undefined) {\n                attrs[attrName] = value;\n            }\n        }\n\n        return attrs;\n    },\n\n    /**\n     * Serialize and return object data for the purpose of saving.\n     *\n     * When saving to the server, the only data that will be sent in the\n     * API PUT/POST call will be the data returned from toJSON().\n     *\n     * This will build the list based on the serializedAttrs, serializers,\n     * and attrToJsonMap properties.\n     *\n     * Subclasses can override this to create custom serialization behavior.\n     *\n     * Returns:\n     *     object:\n     *     The serialized data.\n     */\n    toJSON() {\n        const serializerState = {\n            isNew: this.isNew(),\n            loaded: this.get('loaded')\n        };\n        const data = {};\n\n        for (let attrName of this.serializedAttrs) {\n            const serializer = this.serializers[attrName];\n            let value = this.get(attrName);\n\n            if (serializer) {\n                value = serializer.call(this, value, serializerState);\n            }\n\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            data[jsonField] = value;\n        }\n\n        if (this.supportsExtraData) {\n            _.extend(data, this.extraData.toJSON());\n        }\n\n        return data;\n    },\n\n    /**\n     * Handle all AJAX communication for the model and its subclasses.\n     *\n     * Backbone.js will internally call the model's sync function to\n     * communicate with the server, which usually uses Backbone.sync.\n     *\n     * We wrap this to convert the data to encoded form data (instead\n     * of Backbone's default JSON payload).\n     *\n     * We also parse the error response from Review Board so we can provide\n     * a more meaningful error callback.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (Backbone.Model):\n     *         The model to sync.\n     *\n     *     options (object):\n     *         Options for the operation.\n     *\n     * Option Args:\n     *     data (object):\n     *         Optional payload data to include.\n     *\n     *     form (jQuery):\n     *         Optional form to be submitted.\n     *\n     *     attrs (Array or object):\n     *         Either a list of the model attributes to sync, or a set of\n     *         key/value pairs to use instead of the model attributes.\n     */\n    sync(method, model, options={}) {\n        let data;\n        let contentType;\n\n        if (method === 'read') {\n            data = options.data || {};\n\n            const extraQueryArgs = _.result(this, 'extraQueryArgs', {});\n\n            if (!_.isEmpty(extraQueryArgs)) {\n                data = _.extend({}, extraQueryArgs, data);\n            }\n        } else {\n            if (options.form) {\n                data = null;\n            } else if (options.attrs && !_.isArray(options.attrs)) {\n                data = options.attrs;\n            } else {\n                data = model.toJSON(options);\n\n                if (options.attrs) {\n                    data = _.pick(\n                        data,\n                        options.attrs.map(attr => this.attrToJsonMap[attr]\n                                                  || attr));\n                }\n            }\n\n            contentType = 'application/x-www-form-urlencoded';\n        }\n\n        const syncOptions = _.defaults({}, options, {\n            /* Use form data instead of a JSON payload. */\n            contentType: contentType,\n            data: data,\n            processData: true\n        });\n\n        if (!options.form && this.expandedFields.length > 0) {\n            syncOptions.data.expand = this.expandedFields.join(',');\n        }\n\n        syncOptions.error = xhr => {\n            RB.storeAPIError(xhr);\n\n            const rsp = xhr.errorPayload;\n\n            if (rsp && _.has(rsp, this.rspNamespace)) {\n                /*\n                 * The response contains the current version of the object,\n                 * which we want to preserve, in case it did any partial\n                 * updating of data.\n                 */\n                this.set(this.parse(rsp));\n            }\n\n            if (_.isFunction(options.error)) {\n                options.error(xhr);\n            }\n        };\n\n        return Backbone.sync.call(this, method, model, syncOptions);\n    },\n\n    /**\n     * Perform validation on the attributes of the resource.\n     *\n     * By default, this validates the extraData field, if provided.\n     *\n     * Args:\n     *     attrs (object):\n     *         The attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string or ``undefined``.\n     */\n    validate(attrs) {\n        if (this.supportsExtraData && attrs.extraData !== undefined) {\n            const strings = RB.BaseResource.strings;\n\n            if (!_.isObject(attrs.extraData)) {\n                return strings.INVALID_EXTRADATA_TYPE;\n            }\n\n            for (let [key, value] of Object.entries(attrs.extraData)) {\n                if (!_.isNull(value) &&\n                    (!_.isNumber(value) || _.isNaN(value)) &&\n                    !_.isBoolean(value) &&\n                    !_.isString(value)) {\n                    return strings.INVALID_EXTRADATA_VALUE_TYPE\n                        .replace('{key}', key);\n                }\n            }\n        }\n    }\n}, {\n    strings: {\n        UNSET_PARENT_OBJECT: 'parentObject must be set',\n        INVALID_EXTRADATA_TYPE:\n            'extraData must be an object or undefined',\n        INVALID_EXTRADATA_VALUE_TYPE:\n            'extraData.{key} must be null, a number, boolean, or string'\n    }\n});\n\n\n_.extend(RB.BaseResource.prototype, RB.ExtraDataMixin);\n"],"mappings":"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"}