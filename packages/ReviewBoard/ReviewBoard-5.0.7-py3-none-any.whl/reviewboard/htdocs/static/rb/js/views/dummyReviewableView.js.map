{"version":3,"file":"dummyReviewableView.js","names":["RB","DummyReviewableView","FileAttachmentReviewableView","extend","commentBlockView","AbstractCommentBlockView","captionTableTemplate","_","template","captionItemTemplate","renderContent","$header","$","addClass","prependTo","$el","model","get","$revisionLabel","appendTo","_revisionLabelView","FileAttachmentRevisionLabelView","el","render","listenTo","_onRevisionSelected","$revisionSelector","_revisionSelectorView","FileAttachmentRevisionSelectorView","captionItems","push","caption","interpolate","gettext","revision","append","items","join","text","revisions","base","tip","revisionIDs","revisionTip","redirectURL","revisionBase","window","location","replace"],"sources":["../../../../../static/rb/js/views/dummyReviewableView.es6.js"],"sourcesContent":["/**\n * A Review UI for file types which otherwise do not have one.\n *\n * Normally, file types that do not have a Review UI are not linked to one.\n * However, in the case of a file attachment with multiple revisions, if one of\n * those revisions is a non-reviewable type, the user can still navigate to\n * that page. This Review UI is used as a placeholder in that case--it shows\n * the header (with revision selector) and a message saying that this file type\n * cannot be shown.\n */\nRB.DummyReviewableView = RB.FileAttachmentReviewableView.extend({\n    commentBlockView: RB.AbstractCommentBlockView,\n\n    captionTableTemplate: _.template(\n        '<table><tr><%= items %></tr></table>'\n    ),\n\n    captionItemTemplate: _.template(dedent`\n        <td>\n         <h1 class=\"caption\"><%- caption %></h1>\n        </td>\n    `),\n\n    /**\n     * Render the view.\n     */\n    renderContent() {\n        const $header = $('<div/>')\n            .addClass('review-ui-header')\n            .prependTo(this.$el);\n\n        if (this.model.get('numRevisions') > 1) {\n            const $revisionLabel = $('<div id=\"revision_label\"/>')\n                .appendTo($header);\n\n            this._revisionLabelView = new RB.FileAttachmentRevisionLabelView({\n                el: $revisionLabel,\n                model: this.model,\n            });\n            this._revisionLabelView.render();\n            this.listenTo(this._revisionLabelView, 'revisionSelected',\n                          this._onRevisionSelected);\n\n            const $revisionSelector = $('<div id=\"attachment_revision_selector\" />')\n                .appendTo($header);\n            this._revisionSelectorView = new RB.FileAttachmentRevisionSelectorView({\n                el: $revisionSelector,\n                model: this.model,\n            });\n            this._revisionSelectorView.render();\n            this.listenTo(this._revisionSelectorView, 'revisionSelected',\n                          this._onRevisionSelected);\n\n            const captionItems = [];\n\n            captionItems.push(this.captionItemTemplate({\n                caption: interpolate(\n                    gettext('%(caption)s (revision %(revision)s)'),\n                    {\n                        caption: this.model.get('caption'),\n                        revision: this.model.get('fileRevision'),\n                    },\n                    true)\n            }));\n\n            if (this.model.get('diffAgainstFileAttachmentID') !== null) {\n                captionItems.push(this.captionItemTemplate({\n                    caption: interpolate(\n                        gettext('%(caption)s (revision %(revision)s)'),\n                        {\n                            caption: this.model.get('diffCaption'),\n                            revision: this.model.get('diffRevision'),\n                        },\n                        true)\n                }));\n            }\n\n            $header.append(this.captionTableTemplate({\n                items: captionItems.join('')\n            }));\n        } else {\n            $('<h1 class=\"caption file-attachment-single-revision\">')\n                .text(this.model.get('caption'))\n                .appendTo($header);\n        }\n    },\n\n    /**\n     * Callback for when a new file revision is selected.\n     *\n     * This supports single revisions and diffs. If 'base' is 0, a\n     * single revision is selected, If not, the diff between `base` and\n     * `tip` will be shown.\n     *\n     * Args:\n     *     revisions (array of number):\n     *         An array with two elements, representing the range of revisions\n     *         to display.\n     */\n    _onRevisionSelected(revisions) {\n        const [base, tip] = revisions;\n\n        // Ignore clicks on No Diff Label.\n        if (tip === 0) {\n            return;\n        }\n\n        const revisionIDs = this.model.get('attachmentRevisionIDs');\n        const revisionTip = revisionIDs[tip - 1];\n\n        /*\n         * Eventually these hard redirects will use a router\n         * (see diffViewerPageView.js for example)\n         * this.router.navigate(base + '-' + tip + '/', {trigger: true});\n         */\n        let redirectURL;\n\n        if (base === 0) {\n            redirectURL = `../${revisionTip}/`;\n        } else {\n            const revisionBase = revisionIDs[base - 1];\n            redirectURL = `../${revisionBase}-${revisionTip}/`;\n        }\n\n        window.location.replace(redirectURL);\n    },\n});\n"],"mappings":"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"}