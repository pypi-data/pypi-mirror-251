{"version":3,"file":"basePageView.js","names":["RB","PageView","Backbone","View","extend","windowResizeThrottleMS","initialize","options","$window","$","window","$pageContainer","$pageContent","$mainSidebar","_$pageSidebar","_$mainSidebarPane","hasSidebar","isFullPage","inMobileMode","isPageRendered","drawer","headerView","remove","off","prototype","call","render","$body","document","body","$pageSidebar","_$pageSidebarPanes","children","HeaderView","el","$headerBar","hasClass","renderPage","show","on","_","throttle","_updateSize","listenTo","_onMobileModeChanged","setDrawer","console","assert","_reparentDrawer","resizeElementForFullHeight","$el","$parent","undefined","outerHeight","height","position","top","onResize","onMobileModeChanged","windowHeight","pageContainerHeight","sidebarHeight","offset","isVisible","css","detach","insertBefore","appendTo","trigger"],"sources":["../../../../../../static/rb/js/pages/views/basePageView.es6.js"],"sourcesContent":["/**\n * Base class for the views for pages.\n *\n * This is responsible for setting up and handling the page's UI, including\n * the page header, mobile mode handling, and sidebars. It also provides some\n * utilities for setting up common UI elements.\n *\n * The page will respect the ``-has-sidebar`` and ``-is-content-full-page``\n * CSS classes on the document ``<body>``. These will control the behavior\n * and layout of the page.\n *\n * This is intended for use by page views that are set by\n * :js:class:`RB.PageManager`.\n */\nRB.PageView = Backbone.View.extend({\n    /**\n     * The maximum frequency at which resize events should be handled.\n     *\n     * Subclasses can override this if they need to respond to window\n     * resizes at a faster or slower rate.\n     */\n    windowResizeThrottleMS: 100,\n\n    /**\n     * Initialize the page.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the page.\n     *\n     * Option Args:\n     *     $body (jQuery, optional):\n     *         The body element. This is useful for unit tests.\n     *\n     *     $headerBar (jQuery, optional):\n     *         The header bar element. This is useful for unit tests.\n     *\n     *     $pageContainer (jQuery, optional):\n     *         The page container element. This is useful for unit tests.\n     *\n     *     $pageContent (jQuery, optional):\n     *         The page content element. This is useful for unit tests.\n     *\n     *     $pageSidebar (jQuery, optional):\n     *         The page sidebar element. This is useful for unit tests.\n     */\n    initialize(options={}) {\n        this.options = options;\n\n        this.$window = $(window);\n        this.$pageContainer = null;\n        this.$pageContent = null;\n        this.$mainSidebar = null;\n        this._$pageSidebar = null;\n        this._$mainSidebarPane = null;\n\n        this.hasSidebar = null;\n        this.isFullPage = null;\n        this.inMobileMode = null;\n        this.isPageRendered = false;\n\n        this.drawer = null;\n        this.headerView = null;\n    },\n\n    /**\n     * Remove the page from the DOM and disable event handling.\n     */\n    remove() {\n        if (this.$window) {\n            this.$window.off('resize.rbPageView');\n        }\n\n        if (this.headerView) {\n            this.headerView.remove();\n        }\n\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /**\n     * Render the page.\n     *\n     * Subclasses should not override this. Instead, they should override\n     * :js:func:`RB.PageView.renderPage``.\n     *\n     * Returns:\n     *     RB.PageView:\n     *     This object, for chaining.\n     */\n    render() {\n        const options = this.options;\n        const $body = options.$body || $(document.body);\n\n        this.$pageContainer = options.$pageContainer || $('#page-container');\n        this.$pageContent = options.$pageContent || $('#content');\n        this._$pageSidebar = options.$pageSidebar || $('#page-sidebar');\n        this._$pageSidebarPanes = this._$pageSidebar.children(\n            '.rb-c-page-sidebar__panes');\n        this._$mainSidebarPane = this._$pageSidebarPanes.children(\n            '.rb-c-page-sidebar__pane.-is-shown');\n        this.$mainSidebar = this._$mainSidebarPane.children(\n            '.rb-c-page-sidebar__pane-content');\n\n        this.headerView = new RB.HeaderView({\n            el: options.$headerBar || $('#headerbar'),\n            $body: $body,\n            $pageSidebar: this._$pageSidebar,\n        });\n        this.headerView.render();\n\n        this.hasSidebar = $body.hasClass('-has-sidebar') ||\n                          $body.hasClass('has-sidebar');\n        this.isFullPage = $body.hasClass('-is-content-full-page') ||\n                          $body.hasClass('full-page-content');\n        this.inMobileMode = this.headerView.inMobileMode;\n\n        this.renderPage();\n\n        if (this.isFullPage) {\n            /*\n             * On full-size pages, we hide the content and sidebar initially\n             * (via CSS), so that we can properly position them before they're\n             * first shown. Now that we've done that, make them visible.\n             */\n            this._$mainSidebarPane.show();\n            this.$pageContainer.show();\n        }\n\n        this.$window.on('resize.rbPageView',\n                        _.throttle(() => this._updateSize(),\n                                   this.windowResizeThrottleMS));\n        this.listenTo(this.headerView, 'mobileModeChanged',\n                      this._onMobileModeChanged);\n        this._onMobileModeChanged(this.inMobileMode);\n\n        this.isPageRendered = true;\n\n        return this;\n    },\n\n    /**\n     * Set a drawer that can be shown over the sidebar.\n     *\n     * This is used by a page to set a drawer that should be displayed.\n     * Drawers are shown over the sidebar area in desktop mode, or docked to\n     * the bottom of the screen in mobile mode.\n     *\n     * Only one drawer can be set per page. Drawers also require a page with\n     * sidebars enabled.\n     *\n     * Callers must instantiate the drawer but should not render it or\n     * add it to the DOM.\n     *\n     * Args:\n     *     drawer (RB.Drawer):\n     *         The drawer to set.\n     */\n    setDrawer(drawer) {\n        console.assert(\n            this.drawer === null,\n            'A drawer has already been set up for this page.');\n        console.assert(\n            this.hasSidebar,\n            'Drawers can only be set up on pages with a sidebar.');\n\n        this.drawer = drawer;\n        drawer.render();\n        this._reparentDrawer();\n\n        this.listenTo(drawer, 'visibilityChanged', this._updateSize);\n    },\n\n    /**\n     * Render the page contents.\n     *\n     * This should be implemented by subclasses that need to render any\n     * UI elements.\n     */\n    renderPage() {\n    },\n\n    /**\n     * Resize an element to take the full height of a parent container.\n     *\n     * By default, this will size the element to the height of the main\n     * page container. A specific parent can be specified for more specific\n     * use cases.\n     *\n     * Args:\n     *     $el (jQuery):\n     *         The jQuery-wrapped element to resize.\n     *\n     *     $parent (jQuery, optional):\n     *         The specific jQuery-wrapped parent element to base the size on.\n     */\n    resizeElementForFullHeight($el, $parent) {\n        if ($parent === undefined) {\n            $parent = this.$pageContainer;\n        }\n\n        $el.outerHeight($parent.height() - $el.position().top);\n    },\n\n    /**\n     * Handle page resizes.\n     *\n     * This will be called whenever the page's size (or the window size)\n     * has changed, allowing subclasses to adjust any UI elements as\n     * appropriate.\n     *\n     * In the case of window sizes, calls to this function will be throttled,\n     * called no more frequently than the configured\n     * :js:attr:`windowResizeThrottleMS`.\n     */\n    onResize() {\n    },\n\n    /**\n     * Handle mobile mode changes.\n     *\n     * This will be called whenever the page goes between mobile/desktop\n     * mode, allowing subclasses to adjust any UI elements as appropriate.\n     *\n     * Args:\n     *     inMobileMode (bool):\n     *         Whether the UI is now in mobile mode. This will be the same\n     *         value as :js:attr:`inMobileMode`, and is just provided for\n     *         convenience.\n     */\n    onMobileModeChanged(inMobileMode) {\n    },\n\n    /**\n     * Update the size of the page.\n     *\n     * This will be called in response to window resizes and certain other\n     * events. It will calculate the appropriate size for the sidebar (if\n     * on the page) and the page container (if in full-page content mode),\n     * update any elements as appropriate, and then call\n     * :js:func:`RB.PageView.onResize` so that subclasses can update their\n     * elements.\n     */\n    _updateSize() {\n        const windowHeight = this.$window.height();\n        let pageContainerHeight = null;\n        let sidebarHeight = null;\n\n        if (this.isFullPage) {\n            pageContainerHeight = windowHeight -\n                                  this.$pageContainer.offset().top;\n        }\n\n        if (this.inMobileMode) {\n            if (pageContainerHeight !== null &&\n                this.drawer !== null &&\n                this.drawer.isVisible) {\n                /*\n                 * If we're constraining the page container's height, and\n                 * there's a drawer present, reduce the page container's\n                 * height by the drawer size, so we don't make some content\n                 * inaccessible due to an overlap.\n                 */\n                pageContainerHeight -= this.drawer.$el.outerHeight();\n            }\n        } else {\n            if (pageContainerHeight !== null) {\n                /*\n                 * If we're constraining the page container's height,\n                 * constrain the sidebar's as well.\n                 */\n                sidebarHeight = windowHeight - this._$pageSidebar.offset().top;\n            }\n        }\n\n        if (pageContainerHeight === null) {\n            this.$pageContainer.css('height', '');\n        } else {\n            this.$pageContainer.outerHeight(pageContainerHeight);\n        }\n\n        if (sidebarHeight === null) {\n            this._$pageSidebar.css('height', '');\n        } else {\n            this._$pageSidebar.outerHeight(sidebarHeight);\n        }\n\n        this.onResize();\n    },\n\n    /**\n     * Set the new parent for the drawer.\n     *\n     * In mobile mode, this will place the drawer within the main\n     * ``#container``, right before the sidebar, allowing it to appear docked\n     * along the bottom of the page.\n     *\n     * In desktop mode, this will place the drawer within the sidebar area,\n     * ensuring that it overlaps it properly.\n     */\n    _reparentDrawer() {\n        const $el = this.drawer.$el\n            .detach();\n\n        if (this.inMobileMode) {\n            $el.insertBefore(this._$pageSidebar);\n        } else {\n            $el.appendTo(this._$pageSidebarPanes);\n        }\n    },\n\n    /**\n     * Handle a transition between mobile and desktop mode.\n     *\n     * This will set the :js:attr:`inMobileMode` flag and trigger the\n     * ``inMobileModeChanged`` event, so that pages can listen and update\n     * their layout as appropriate.\n     *\n     * It will also update the size and reparent the drawer.\n     *\n     * Args:\n     *     inMobileMode (boolean):\n     *         Whether the page shell is in mobile mode.\n     */\n    _onMobileModeChanged(inMobileMode) {\n        this.inMobileMode = inMobileMode;\n\n        this._updateSize();\n\n        if (this.drawer !== null) {\n            this._reparentDrawer();\n        }\n\n        this.onMobileModeChanged(this.inMobileMode);\n        this.trigger('inMobileModeChanged', this.inMobileMode);\n    },\n});\n"],"mappings":"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"}