{"version":3,"file":"commentDialogView.js","names":["CommentsListView","Backbone","View","extend","itemTemplate","_","template","initialize","options","setComments","comments","replyType","length","reviewRequestURL","commentIssueManager","interactive","issuesInteractive","odd","$items","$","each","serializedComment","commentID","comment_id","$item","comment","itemClass","replyText","_replyText","viewText","_viewText","issue_opened","commentIssueBar","RB","CommentIssueBarView","reviewID","review_id","commentType","issueStatus","issue_status","render","$el","appendTo","listenTo","id","get","add","empty","append","gettext","CommentDialogView","DIALOG_TOTAL_HEIGHT","DIALOG_NON_EDITABLE_HEIGHT","DIALOG_READ_ONLY_HEIGHT","SLIDE_DISTANCE","COMMENTS_BOX_WIDTH","FORM_BOX_WIDTH","className","events","userSession","UserSession","instance","reviewRequest","model","reviewRequestEditor","animate","hide","html","authenticated","hasDraft","markdownDocsURL","MANUAL_URL","markdownText","_markdownText","otherReviewsText","_otherReviewsText","loginText","interpolate","_loginTextTemplate","draftWarning","_draftWarningTextTemplate","openAnIssueText","_openAnIssueText","enableMarkdownText","_enableMarkdownText","saveButton","_saveText","cancelButton","_cancelText","deleteButton","_deleteText","closeButton","_closeText","readOnly","readOnlyText","showVerify","EnabledFeatures","issueVerification","verifyIssueText","_verifyIssueText","_$commentsPane","_$draftForm","_$body","children","_$header","_$footer","_$title","_$commentOptions","_$issueOptions","bindVisibility","_$markdownOptions","_$issueField","find","bindProperty","elementToModel","inverse","_$issueVerificationField","_$enableMarkdownField","$buttons","$saveButton","$cancelButton","$deleteButton","$closeButton","commentsList","el","_textEditor","TextEditorView","autoSize","minHeight","text","bindRichText","attrName","show","set","getText","bindRichTextCheckbox","bindRichTextVisibility","setText","_handleResize","css","mousedown","evt","stopPropagation","resizable","handles","support","touch","transparent","resize","bind","proxyTouchEvents","draggable","handle","_updateTitle","_onPublishedCommentsChanged","CommentDialogHook","hook","HookViewType","hookView","extension","commentDialog","commentEditor","save","catch","err","alert","message","close","open","openDialog","scrollIntoView","focus","top","parseInt","opacity","beginEdit","call","onClosed","undefined","context","closeDialog","remove","trigger","isFunction","is","move","x","y","positionBeside","positionToSide","_yourCommentDirtyText","_yourCommentText","showComments","setVisible","width","height","commentsWidth","outerWidth","outerHeight","$commentsList","position","$textField","setSize","getExtents","_onCancelClicked","shouldExit","confirm","_shouldExitText","cancel","_onDeleteClicked","deleteComment","_onTextKeyDown","e","which","ui","keyCode","ESCAPE","ENTER","metaKey","ctrlKey","preventDefault","altKey","_instance","create","console","assert","PageManager","getPage","dlg","CommentEditor","publishedComments","publishedCommentsType","container","document","body","beside","scrollLeft","window","scrollTop","on","showCommentDlg"],"sources":["../../../../../static/rb/js/views/commentDialogView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * Displays a list of existing comments within a comment dialog.\n *\n * Each comment in the list is an existing, published comment that a user\n * has made. They will be displayed, along with any issue states and\n * identifying information, and links for viewing the comment on the review\n * or replying to it.\n *\n * This is used internally in CommentDialogView.\n */\nconst CommentsListView = Backbone.View.extend({\n    itemTemplate: _.template(dedent`\n        <li class=\"<%= itemClass %>\">\n         <h2>\n          <%- comment.user.name %>\n          <span class=\"actions\">\n           <a class=\"comment-list-view-action\" href=\"<%= comment.url %>\"><%- viewText %></a>\n           <a class=\"comment-list-reply-action\"\n              href=\"<%= reviewRequestURL %>?reply_id=<%= comment.reply_to_id || comment.comment_id %>&reply_type=<%= replyType %>\"\n              ><%- replyText %></a>\n          </span>\n         </h2>\n         <pre><%- comment.text %></pre>\n        </li>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     *\n     *     issuesInteractive (boolean):\n     *         Whether the user can interact with issues (they have permission\n     *         to change the state).\n     *\n     *     reviewRequestURL (string):\n     *         The URL of the review request.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Set the list of displayed comments.\n     *\n     * Args:\n     *     comments (Array of object):\n     *         The serialized comments.\n     *\n     *     replyType (string):\n     *         The type of comment, for use in creating replies.\n     */\n    setComments(comments, replyType) {\n        if (comments.length === 0) {\n            return;\n        }\n\n        const reviewRequestURL = this.options.reviewRequestURL;\n        const commentIssueManager = this.options.commentIssueManager;\n        const interactive = this.options.issuesInteractive;\n        let odd = true;\n        let $items = $();\n\n        _.each(comments, serializedComment => {\n            const commentID = serializedComment.comment_id;\n            const $item = $(this.itemTemplate({\n                comment: serializedComment,\n                itemClass: odd ? 'odd' : 'even',\n                reviewRequestURL: reviewRequestURL,\n                replyText: CommentsListView._replyText,\n                replyType: replyType,\n                viewText: CommentsListView._viewText,\n            }));\n\n            if (serializedComment.issue_opened) {\n                const commentIssueBar = new RB.CommentIssueBarView({\n                    reviewID: serializedComment.review_id,\n                    commentID: commentID,\n                    commentType: replyType,\n                    issueStatus: serializedComment.issue_status,\n                    interactive: interactive,\n                    commentIssueManager: commentIssueManager,\n                });\n                commentIssueBar.render().$el.appendTo($item);\n\n                /*\n                 * Update the serialized comment's issue status whenever\n                 * the real comment's status is changed so we will\n                 * display it correctly the next time we render it.\n                 */\n                this.listenTo(\n                    commentIssueManager, 'issueStatusUpdated', comment => {\n                        if (comment.id === commentID) {\n                            serializedComment.issue_status =\n                                comment.get('issueStatus');\n                        }\n                    });\n            }\n\n            $items = $items.add($item);\n            odd = !odd;\n        });\n\n        this.$el\n            .empty()\n            .append($items);\n    },\n},\n{\n    _replyText: gettext('Reply'),\n    _viewText: gettext('View'),\n});\n\n\n/**\n * A dialog that allows for creating, editing or deleting draft comments on\n * a diff or file attachment. The dialog can be moved around on the page.\n *\n * Any existing comments for the selected region will be displayed alongside\n * the dialog for reference. However, this dialog is not intended to be\n * used to reply to those comments.\n */\nRB.CommentDialogView = Backbone.View.extend({\n    DIALOG_TOTAL_HEIGHT: 350,\n    DIALOG_NON_EDITABLE_HEIGHT: 120,\n    DIALOG_READ_ONLY_HEIGHT: 104,\n    SLIDE_DISTANCE: 10,\n    COMMENTS_BOX_WIDTH: 280,\n    FORM_BOX_WIDTH: 450,\n\n    className: 'comment-dlg',\n    template: _.template(dedent`\n        <div class=\"other-comments\">\n         <h1 class=\"title\"><%- otherReviewsText %></h1>\n         <ul></ul>\n        </div>\n        <form method=\"post\">\n         <h1 class=\"comment-dlg-header\">\n          <span class=\"title\"></span>\n          <% if (authenticated && !hasDraft) { %>\n           <a class=\"markdown-info\" href=\"<%- markdownDocsURL %>\"\n              target=\"_blank\"><%- markdownText %></a>\n          <% } %>\n         </h1>\n         <% if (!authenticated) { %>\n          <p class=\"login-text\"><%= loginText %></p>\n         <% } else if (readOnly) { %>\n          <p class=\"read-only-text\"><%= readOnlyText %></p>\n         <% } else if (hasDraft) { %>\n          <p class=\"draft-warning\"><%= draftWarning %></p>\n         <% } %>\n         <div class=\"comment-dlg-body\">\n          <div class=\"comment-text-field\"></div>\n          <ul class=\"comment-dlg-options\">\n           <li class=\"comment-issue-options\">\n            <input type=\"checkbox\" id=\"comment_issue\">\n            <label for=\"comment_issue\" accesskey=\"i\"><%= openAnIssueText %></label>\n            <% if (showVerify) { %>\n             <input type=\"checkbox\" id=\"comment_issue_verify\">\n             <label for=\"comment_issue_verify\"><%= verifyIssueText %></label>\n            <% } %>\n           </li>\n           <li class=\"comment-markdown-options\">\n            <input type=\"checkbox\" id=\"enable_markdown\">\n            <label for=\"enable_markdown\" accesskey=\"m\"><%= enableMarkdownText %></label>\n           </li>\n          </ul>\n         </div>\n         <div class=\"comment-dlg-footer\">\n          <div class=\"buttons\">\n           <input type=\"button\" class=\"save\" value=\"<%- saveButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"cancel\" value=\"<%- cancelButton %>\">\n           <input type=\"button\" class=\"delete\" value=\"<%- deleteButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"close\" value=\"<%- closeButton %>\">\n          </div>\n         </div>\n        </form>\n    `),\n\n    events: {\n        'click .buttons .cancel': '_onCancelClicked',\n        'click .buttons .close': '_onCancelClicked',\n        'click .buttons .delete': '_onDeleteClicked',\n        'click .buttons .save': 'save',\n        'keydown .comment-text-field': '_onTextKeyDown',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     animate (boolean):\n     *         Whether to use animation.\n     *\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.CommentDialogView:\n     *     This object, for chaining.\n     */\n    render() {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('reviewRequest');\n        const reviewRequestEditor = this.model.get('reviewRequestEditor');\n\n        this.options.animate = (this.options.animate !== false);\n\n        this.$el\n            .hide()\n            .html(this.template({\n                authenticated: userSession.get('authenticated'),\n                hasDraft: reviewRequest.get('hasDraft'),\n                markdownDocsURL: MANUAL_URL + 'users/markdown/',\n                markdownText: RB.CommentDialogView._markdownText,\n                otherReviewsText: RB.CommentDialogView._otherReviewsText,\n                loginText: interpolate(\n                    RB.CommentDialogView._loginTextTemplate,\n                    [userSession.get('loginURL')]),\n                draftWarning: interpolate(\n                    RB.CommentDialogView._draftWarningTextTemplate,\n                    [reviewRequest.get('reviewURL')]),\n                openAnIssueText: RB.CommentDialogView._openAnIssueText,\n                enableMarkdownText: RB.CommentDialogView._enableMarkdownText,\n                saveButton: RB.CommentDialogView._saveText,\n                cancelButton: RB.CommentDialogView._cancelText,\n                deleteButton: RB.CommentDialogView._deleteText,\n                closeButton: RB.CommentDialogView._closeText,\n                readOnly: userSession.get('readOnly'),\n                readOnlyText: gettext('Review Board is currently in read-only mode.'),\n                showVerify: RB.EnabledFeatures.issueVerification,\n                verifyIssueText: RB.CommentDialogView._verifyIssueText,\n            }));\n\n        this._$commentsPane = this.$('.other-comments');\n        this._$draftForm = this.$('form');\n        this._$body = this._$draftForm.children('.comment-dlg-body');\n        this._$header = this._$draftForm.children('.comment-dlg-header');\n        this._$footer = this._$draftForm.children('.comment-dlg-footer');\n        this._$title = this._$header.children('.title');\n\n        this._$commentOptions = this._$body.children('.comment-dlg-options');\n\n        this._$issueOptions =\n            this._$commentOptions.children('.comment-issue-options')\n                .bindVisibility(this.model, 'canEdit');\n        this._$markdownOptions =\n            this._$commentOptions.children('.comment-markdown-options')\n                .bindVisibility(this.model, 'canEdit');\n\n        this._$issueField = this._$issueOptions\n            .find('#comment_issue')\n                .bindProperty('checked', this.model, 'openIssue')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$issueVerificationField = this._$issueOptions\n            .find('#comment_issue_verify')\n                .bindProperty('checked', this.model, 'requireVerification')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$enableMarkdownField = this._$markdownOptions\n            .find('#enable_markdown')\n                .bindProperty('checked', this.model, 'richText')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this.$buttons = this._$footer.find('.buttons');\n\n        this.$saveButton = this.$buttons.find('input.save')\n            .bindVisibility(this.model, 'canEdit')\n            .bindProperty('disabled', this.model, 'canSave', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$cancelButton = this.$buttons.find('input.cancel')\n            .bindVisibility(this.model, 'canEdit');\n\n        this.$deleteButton = this.$buttons.find('input.delete')\n            .bindVisibility(this.model, 'canDelete')\n            .bindProperty('disabled', this.model, 'canDelete', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$closeButton = this.$buttons.find('input.close')\n            .bindVisibility(this.model, 'canEdit', {\n                inverse: true,\n            });\n\n        this.commentsList = new CommentsListView({\n            el: this._$commentsPane.find('ul'),\n            reviewRequestURL: reviewRequest.get('reviewURL'),\n            commentIssueManager: this.options.commentIssueManager,\n            issuesInteractive: reviewRequestEditor.get('editable'),\n        });\n\n        /*\n         * We need to handle keypress here, rather than in events above,\n         * because jQuery will actually handle it. Backbone fails to.\n         */\n        this._textEditor = new RB.TextEditorView({\n            el: this._$draftForm.find('.comment-text-field'),\n            autoSize: false,\n            minHeight: 0,\n            text: this.model.get('text'),\n            bindRichText: {\n                model: this.model,\n                attrName: 'richText',\n            },\n        });\n        this._textEditor.render();\n        this._textEditor.show();\n        this._textEditor.$el.bindVisibility(this.model, 'canEdit');\n        this.listenTo(this._textEditor, 'change',\n                      () => this.model.set('text',\n                                           this._textEditor.getText()));\n        this._textEditor.bindRichTextCheckbox(this._$enableMarkdownField);\n        this._textEditor.bindRichTextVisibility(\n            this._$draftForm.find('.markdown-info'));\n\n        this.listenTo(this.model, 'change:text',\n                      () => this._textEditor.setText(this.model.get('text')));\n\n        this.listenTo(this.model, 'change:richText', this._handleResize);\n\n        this.$el\n            .css('position', 'absolute')\n            .mousedown(evt => {\n                /*\n                 * Prevent this from reaching the selection area, which will\n                 * swallow the default action for the mouse down.\n                 */\n                evt.stopPropagation();\n            })\n            .resizable({\n                handles: $.support.touch ? 'grip,se'\n                                         : 'grip,n,e,s,w,se,sw,ne,nw',\n                transparent: true,\n                resize: _.bind(this._handleResize, this),\n            })\n            .proxyTouchEvents();\n\n        this._$header.css('cursor', 'move');\n        this.$el.draggable({\n            handle: '.comment-dlg-header',\n        });\n\n        this.listenTo(this.model, 'change:dirty', this._updateTitle);\n        this._updateTitle();\n\n        this.listenTo(this.model, 'change:publishedComments',\n                      () => this._onPublishedCommentsChanged());\n        this._onPublishedCommentsChanged();\n\n        /* Add any hooks. */\n        RB.CommentDialogHook.each(hook => {\n            const HookViewType = hook.get('viewType');\n            const hookView = new HookViewType({\n                extension: hook.get('extension'),\n                commentDialog: this,\n                commentEditor: this.model,\n                el: this.el,\n            });\n\n            hookView.render();\n        });\n\n        return this;\n    },\n\n    /**\n     * Callback for when the Save button is pressed.\n     *\n     * Saves the comment, creating it if it's new, and closes the dialog.\n     */\n    save() {\n        /*\n         * Set this immediately, in case new text has been set in the editor\n         * that we haven't been notified about yet.\n         */\n        this.model.set('text', this._textEditor.getText());\n\n        if (this.model.get('canSave')) {\n            this.model.save()\n                .catch(err => {\n                    alert(gettext('Error saving comment: ') + err.message);\n                });\n\n            this.close();\n        }\n    },\n\n    /**\n     * Open the comment dialog and focuses the text field.\n     */\n    open() {\n        function openDialog() {\n            this.$el.scrollIntoView();\n            this._textEditor.focus();\n        }\n\n        this.$el\n            .css({\n                top: parseInt(this.$el.css('top'), 10) - this.SLIDE_DISTANCE,\n                opacity: 0,\n            })\n            .show();\n\n        this._handleResize();\n\n        if (this.model.get('canEdit')) {\n            this.model.beginEdit();\n        }\n\n        if (this.options.animate) {\n            this.$el.animate({\n                top: `+=${this.SLIDE_DISTANCE}px`,\n                opacity: 1,\n            }, 350, 'swing', _.bind(openDialog, this));\n        } else {\n            openDialog.call(this);\n        }\n    },\n\n    /**\n     * Close the comment dialog, discarding the comment block if empty.\n     *\n     * This can optionally take a callback and context to notify when the\n     * dialog has been closed.\n     *\n     * Args:\n     *     onClosed (function, optional):\n     *         An optional callback to call once the dialog has been closed.\n     *\n     *     context (object, optional):\n     *         Context to use when calling ``onClosed``.\n     */\n    close(onClosed=undefined, context={}) {\n        function closeDialog() {\n            this.model.close();\n            this.$el.remove();\n            this.trigger('closed');\n\n            if (_.isFunction(onClosed)) {\n                onClosed.call(context);\n            }\n        }\n\n        if (this.options.animate && this.$el.is(':visible')) {\n            this.$el.animate({\n                top: `-=${this.SLIDE_DISTANCE}px`,\n                opacity: 0,\n            }, 350, 'swing', _.bind(closeDialog, this));\n        } else {\n            closeDialog.call(this);\n        }\n    },\n\n    /**\n     * Move the comment dialog to the given coordinates.\n     *\n     * Args:\n     *     x (number):\n     *         The X-coordinate to move the dialog to.\n     *\n     *     y (number):\n     *         The Y-coordinate to move the dialog to.\n     */\n    move(x, y) {\n        this.$el.move(x, y);\n    },\n\n    /**\n     * Position the dialog beside an element.\n     *\n     * This takes the same arguments that $.fn.positionToSide takes.\n     *\n     * Args:\n     *     $el (jQuery):\n     *        The element to move the dialog next to.\n     *\n     *     options (object):\n     *         Options for the ``positionToSide`` call.\n     */\n    positionBeside($el, options) {\n        this.$el.positionToSide($el, options);\n    },\n\n    /**\n     * Update the title of the comment dialog, based on the current state.\n     */\n    _updateTitle() {\n        this._$title.text(this.model.get('dirty')\n                          ? RB.CommentDialogView._yourCommentDirtyText\n                          : RB.CommentDialogView._yourCommentText);\n    },\n\n    /**\n     * Callback for when the list of published comments changes.\n     *\n     * Sets the list of comments in the CommentsList, and factors in some\n     * new layout properties.\n     */\n    _onPublishedCommentsChanged() {\n        const comments = this.model.get('publishedComments') || [];\n        this.commentsList.setComments(comments,\n                                       this.model.get('publishedCommentsType'));\n\n        const showComments = (comments.length > 0);\n        this._$commentsPane.setVisible(showComments);\n\n        /* Do this here so that calculations can be done before open() */\n        let width = this.FORM_BOX_WIDTH;\n\n        if (showComments) {\n            width += this.COMMENTS_BOX_WIDTH;\n        }\n\n        let height;\n\n        if (this.model.get('canEdit')) {\n            height = this.DIALOG_TOTAL_HEIGHT;\n        } else if (RB.UserSession.instance.get('readOnly')) {\n            height = this.DIALOG_READ_ONLY_HEIGHT;\n        } else {\n            height = this.DIALOG_NON_EDITABLE_HEIGHT;\n        }\n\n        this.$el\n            .width(width)\n            .height(height);\n    },\n\n    /**\n     * Handle the resize of the comment dialog.\n     *\n     * This will lay out the elements in the dialog appropriately.\n     */\n    _handleResize() {\n        const height = this.$el.height();\n        let width = this.$el.width();\n        let commentsWidth = 0;\n\n        if (this._$commentsPane.is(':visible')) {\n            this._$commentsPane\n                .outerWidth(this.COMMENTS_BOX_WIDTH)\n                .outerHeight(height)\n                .move(0, 0, 'absolute');\n\n            const $commentsList = this.commentsList.$el;\n            $commentsList.height(this._$commentsPane.height() -\n                                 $commentsList.position().top);\n\n            commentsWidth = this._$commentsPane.outerWidth(true);\n            width -= commentsWidth;\n        }\n\n        this._$draftForm\n            .outerWidth(width)\n            .outerHeight(height)\n            .move(commentsWidth, 0, 'absolute');\n\n        const $textField = this._textEditor.$el;\n        this._textEditor.setSize(\n            (this._$body.width() -\n             $textField.getExtents('b', 'lr')),\n            (this._$draftForm.height() -\n             this._$header.outerHeight() -\n             this._$commentOptions.outerHeight() -\n             this._$footer.outerHeight() -\n             $textField.getExtents('b', 'tb')));\n    },\n\n    /**\n     * Callback for when the Cancel button is pressed.\n     *\n     * Cancels the comment (which may delete the comment block, if it's new)\n     * and closes the dialog.\n     */\n    _onCancelClicked() {\n        let shouldExit = true;\n\n        if (this.model.get('dirty')) {\n            shouldExit = confirm(RB.CommentDialogView._shouldExitText);\n        }\n\n        if (shouldExit) {\n            this.model.cancel();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for when the Delete button is pressed.\n     *\n     * Deletes the comment and closes the dialog.\n     */\n    _onDeleteClicked() {\n        if (this.model.get('canDelete')) {\n            this.model.deleteComment();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for keydown events in the text field.\n     *\n     * If the Escape key is pressed, the dialog will be closed.\n     * If the Control-Enter or Alt-I keys are pressed, we'll handle them\n     * specially. Control-Enter is the same thing as clicking Save.\n     *\n     * metaKey used as alternative for Mac key shortcut philosophy.\n     * metaKey is only fired on keydown in Chrome and Brave.\n     *\n     * The keydown event won't be propagated to the parent elements.\n     *\n     * Args:\n     *     e (Event):\n     *         The keydown event.\n     */\n    _onTextKeyDown(e) {\n        e.stopPropagation();\n\n        switch (e.which) {\n            case $.ui.keyCode.ESCAPE:\n                this._onCancelClicked();\n                return false;\n\n            case 10:\n            case $.ui.keyCode.ENTER:\n                /* Enter */\n                if (e.metaKey || e.ctrlKey) {\n                    this.save();\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n\n            case 73:\n            case 105:\n                /* I */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Firefox info window.\n                    e.preventDefault();\n                    this.model.set('openIssue', !this.model.get('openIssue'));\n                }\n                break;\n\n            case 77:\n            case 109:\n                /* M */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Mac's window minimize.\n                    e.preventDefault();\n                    this.model.set('richText', !this.model.get('richText'));\n                }\n                break;\n\n            default:\n                break;\n        }\n    },\n}, {\n    /**\n     * The singleton instance.\n     */\n    _instance: null,\n\n    /**\n     * Create and shows a new comment dialog and associated model.\n     *\n     * This is a class method that handles providing a comment dialog\n     * ready to use with the given state.\n     *\n     * Only one comment dialog can appear on the screen at any given time\n     * when using this.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view construction.\n     */\n    create: function(options={}) {\n        console.assert(options.comment, 'A comment must be specified');\n\n        const reviewRequestEditor =\n            options.reviewRequestEditor ||\n            RB.PageManager.getPage().model.reviewRequestEditor;\n\n        const dlg = new RB.CommentDialogView({\n            animate: options.animate,\n            commentIssueManager: options.commentIssueManager ||\n                                 reviewRequestEditor.get('commentIssueManager'),\n            model: new RB.CommentEditor({\n                comment: options.comment,\n                reviewRequest: reviewRequestEditor.get('reviewRequest'),\n                reviewRequestEditor: reviewRequestEditor,\n                publishedComments: options.publishedComments || undefined,\n                publishedCommentsType: options.publishedCommentsType ||\n                                       undefined,\n            })\n        });\n\n        dlg.render().$el\n            .css('z-index', 999) // XXX Use classes for z-indexes.\n            .appendTo(options.container || document.body);\n\n        options.position = options.position || {};\n\n        if (_.isFunction(options.position)) {\n            options.position(dlg);\n        } else if (options.position.beside) {\n            dlg.positionBeside(options.position.beside.el,\n                               options.position.beside);\n        } else {\n            let x = options.position.x;\n            let y = options.position.y;\n\n            if (x === undefined) {\n                /* Center it. */\n                x = $(document).scrollLeft() +\n                    ($(window).width() - dlg.$el.width()) / 2;\n            }\n\n            if (y === undefined) {\n                /* Center it. */\n                y = $(document).scrollTop() +\n                    ($(window).height() - dlg.$el.height()) / 2;\n            }\n\n            dlg.move(x, y);\n        }\n\n        dlg.on('closed', () => RB.CommentDialogView._instance = null);\n\n        const instance = RB.CommentDialogView._instance;\n        const showCommentDlg = function showCommentDlg() {\n            try {\n                dlg.open();\n            } catch(e) {\n                dlg.close();\n                throw e;\n            }\n\n            RB.CommentDialogView._instance = dlg;\n        };\n\n        if (instance) {\n            instance.on('closed', showCommentDlg);\n            instance.close();\n        } else {\n            showCommentDlg();\n        }\n\n        return dlg;\n    },\n\n    _cancelText: gettext('Cancel'),\n    _closeText: gettext('Close'),\n    _deleteText: gettext('Delete'),\n    _draftWarningTextTemplate: gettext('The review request\\'s current <a href=\"%s\">draft</a> needs to be published before you can comment.'),\n    _enableMarkdownText: gettext('Enable <u>M</u>arkdown'),\n    _loginTextTemplate: gettext('You must <a href=\"%s\">log in</a> to post a comment.'),\n    _markdownText: gettext('Markdown'),\n    _openAnIssueText: gettext('Open an <u>I</u>ssue'),\n    _otherReviewsText: gettext('Other reviews'),\n    _saveText: gettext('Save'),\n    _shouldExitText: gettext('You have unsaved changes. Are you sure you want to exit?'),\n    _verifyIssueText: gettext('Require Verification'),\n    _yourCommentText: gettext('Your comment'),\n    _yourCommentDirtyText: gettext('Your comment (unsaved)'),\n});\n\n\n})();\n"],"mappings":"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"}