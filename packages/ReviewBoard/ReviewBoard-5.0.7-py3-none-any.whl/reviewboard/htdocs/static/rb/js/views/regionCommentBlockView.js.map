{"version":3,"file":"regionCommentBlockView.js","names":["RB","RegionCommentBlockView","AbstractCommentBlockView","extend","className","events","_","defaults","prototype","initialize","_scale","_moveState","hasMoved","initialCursor","initialBounds","dragCallback","noop","bindAll","delegateEvents","call","listenTo","model","_updateBounds","_updateCount","undelegateEvents","$","window","off","_onDrag","stopListening","setSelectionRegionSizeFunc","func","selectionRegionSizeFunc","getSelectionRegionSize","result","_startDragging","left","top","callback","$el","position","width","height","on","_endDragging","defer","_moveTo","region","maxLeft","get","maxTop","newLeft","newTop","set","x","MathUtils","clip","y","_resizeTo","maxWidth","maxHeight","newWidth","newHeight","_onMouseDown","e","canUpdateBounds","preventDefault","stopPropagation","draggingCallback","target","_$flag","_$resizeIcon","pageX","pageY","one","_onWindowMouseUp","saveDraftCommentBounds","hideTooltip","renderContent","addClass","appendTo","positionCommentDlg","commentDlg","positionBeside","side","fitOnScreen","move","text","_onClicked","trigger","setScale","scale"],"sources":["../../../../../static/rb/js/views/regionCommentBlockView.es6.js"],"sourcesContent":["/**\n * Provides a visual region over an image or other document showing comments.\n *\n * This will show a selection rectangle over part of an image or other\n * content indicating there are comments there. It will also show the\n * number of comments, along with a tooltip showing comment summaries.\n *\n * This is meant to be used with a RegionCommentBlock model.\n */\nRB.RegionCommentBlockView = RB.AbstractCommentBlockView.extend({\n    className: 'selection',\n\n    events: _.defaults({\n        'click': '_onClicked',\n        'mousedown': '_onMouseDown'\n    }, RB.AbstractCommentBlockView.prototype.events),\n\n    /**\n     * Initialize RegionCommentBlockView.\n     */\n    initialize() {\n        this._scale = 1.0;\n        this._moveState = {\n            hasMoved: false,\n            initialCursor: {},\n            initialBounds: {},\n            dragCallback: _.noop\n        };\n\n        _.bindAll(this, '_onDrag', '_onWindowMouseUp');\n    },\n\n    /**\n     * Listen to events.\n     */\n    delegateEvents() {\n        RB.AbstractCommentBlockView.prototype.delegateEvents.call(this);\n\n        this.listenTo(\n            this.model,\n            'change:x change:y change:width change:height',\n            this._updateBounds\n        );\n        this.listenTo(this.model, 'change:count', this._updateCount);\n    },\n\n    /**\n     * Un-listen to events.\n     */\n    undelegateEvents() {\n        RB.AbstractCommentBlockView.prototype.undelegateEvents.call(this);\n\n        $(window).off('mousemove', this._onDrag);\n\n        this.stopListening(this.model);\n    },\n\n    /**\n     * Set the selection region size function.\n     *\n     * This function is meant to return the maximum size of the selection\n     * region for the given comment.\n     *\n     * Args:\n     *     func (function):\n     *         A function which will return a size object.\n     */\n    setSelectionRegionSizeFunc(func) {\n        this.selectionRegionSizeFunc = func;\n    },\n\n    /**\n     * Return the selection region size.\n     *\n     * Returns:\n     *     object:\n     *     An object with ``x``, ``y``, ``width``, and ``height`` fields, in\n     *     pixels.\n     */\n    getSelectionRegionSize() {\n        return _.result(this, 'selectionRegionSizeFunc');\n    },\n\n    /**\n     * Initiate a drag operation.\n     *\n     * Args:\n     *     left (number):\n     *         The initial left position of the cursor.\n     *\n     *     top (number):\n     *         The initial top position of the cursor.\n     *\n     *     callback (function):\n     *         A callback function to call once the drag is finished.\n     */\n    _startDragging(left, top, callback) {\n        /*\n         * ``hasMoved`` is used to distinguish dragging from clicking.\n         * ``initialCursor`` and ``initialBounds`` are used to calculate the\n         * new position and size while dragging.\n         */\n        this._moveState.hasMoved = false;\n        this._moveState.initialCursor.left = left;\n        this._moveState.initialCursor.top = top;\n        this._moveState.initialBounds.left = this.$el.position().left;\n        this._moveState.initialBounds.top = this.$el.position().top;\n        this._moveState.initialBounds.width = this.$el.width();\n        this._moveState.initialBounds.height = this.$el.height();\n        this._moveState.dragCallback = callback;\n\n        $(window).on('mousemove', this._onDrag);\n    },\n\n    /**\n     * End a drag operation.\n     */\n    _endDragging() {\n        /*\n         * Unset the dragging flag after the stack unwinds, so that the\n         * click event can handle it properly.\n         */\n        _.defer(() => { this._moveState.hasMoved = false; });\n\n        $(window).off('mousemove', this._onDrag);\n    },\n\n    /**\n     * Move the comment region to a new position.\n     *\n     * Args:\n     *     left (number):\n     *         The new X-coordinate of the mouse at the end of the drag\n     *         operation, relative to the page.\n     *\n     *     top (number):\n     *         The new Y-coordinate of the mouse at the end of the drag\n     *         operation, relative to the page.\n     */\n    _moveTo(left, top) {\n        const region = this.getSelectionRegionSize();\n        const maxLeft = region.width - (this.model.get('width') * this._scale);\n        const maxTop = region.height - (this.model.get('height') * this._scale);\n        const newLeft = (this._moveState.initialBounds.left +\n                         left - this._moveState.initialCursor.left);\n        const newTop = (this._moveState.initialBounds.top +\n                        top - this._moveState.initialCursor.top);\n\n        this.model.set({\n            x: RB.MathUtils.clip(newLeft, 0, maxLeft) / this._scale,\n            y: RB.MathUtils.clip(newTop, 0, maxTop) / this._scale\n        });\n    },\n\n    /*\n     * Resize (change with and height of) the comment block.\n     *\n     * Args:\n     *     left (number):\n     *         The new X-coordinate of the mouse at the end of the drag\n     *         operation, relative to the page.\n     *\n     *     top (number):\n     *         The new Y-coordinate of the mouse at the end of the drag\n     *         operation, relative to the page.\n     */\n    _resizeTo(left, top) {\n        const region = this.getSelectionRegionSize();\n        const maxWidth = region.width - (this.model.get('x') * this._scale);\n        const maxHeight = region.height - (this.model.get('y') * this._scale);\n        const newWidth = (this._moveState.initialBounds.width +\n                          left - this._moveState.initialCursor.left);\n        const newHeight = (this._moveState.initialBounds.height +\n                           top - this._moveState.initialCursor.top);\n\n        this.model.set({\n            width: RB.MathUtils.clip(newWidth, 0, maxWidth) / this._scale,\n            height: RB.MathUtils.clip(newHeight, 0, maxHeight) / this._scale\n        });\n    },\n\n    /**\n     * Handle a mousedown event.\n     *\n     * Mouse-down means one of these in this view:\n     * 1. click\n     * 2. start of dragging to move the comment\n     * 3. start of dragging to resize the comment\n     *\n     * This method looks at ``e.target`` and does the appropriate action.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the callback.\n     */\n    _onMouseDown(e) {\n        if (this.model.canUpdateBounds()) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            let draggingCallback = null;\n            if (e.target === this._$flag.get(0)) {\n                draggingCallback = this._moveTo;\n            } else if (e.target === this._$resizeIcon.get(0)) {\n                draggingCallback = this._resizeTo;\n            }\n\n            if (draggingCallback) {\n                this._startDragging(e.pageX, e.pageY, draggingCallback);\n\n                $(window).one('mouseup', this._onWindowMouseUp);\n            }\n        }\n    },\n\n    /**\n     * Handle a mouseup event.\n     *\n     * If something has been dragged, end dragging and update the comment's\n     * bounds.\n     *\n     * If not, the event was actually a ``click`` event and we call the\n     * superclass' click handler.\n     */\n    _onWindowMouseUp() {\n        if (this._moveState.hasMoved) {\n            this.model.saveDraftCommentBounds();\n        }\n\n        this._endDragging();\n    },\n\n    /**\n     * Handle a drag event.\n     *\n     * Set moveState.hasMoved to ``true`` to prevent triggering a ``click``\n     * event, and move to view to dragged location.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the callback.\n     */\n    _onDrag(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.hideTooltip();\n\n        this._moveState.hasMoved = true;\n        this._moveState.dragCallback.call(this, e.pageX, e.pageY);\n    },\n\n    /**\n     * Render the comment block.\n     *\n     * Along with the block's rectangle, a floating tooltip will also be\n     * created that displays summaries of the comments.\n     */\n    renderContent() {\n        this._updateBounds();\n\n        if (this.model.canUpdateBounds()) {\n            this.$el.addClass('can-update-bound');\n\n            this._$resizeIcon = $('<div class=\"resize-icon\" />')\n                .appendTo(this.$el);\n        }\n\n        this._$flag = $('<div class=\"selection-flag\" />')\n            .appendTo(this.$el);\n\n        this._updateCount();\n    },\n\n    /**\n     * Position the comment dialog to the side of the flag.\n     *\n     * Args:\n     *     commentDlg (RB.CommentDialogView):\n     *         The comment dialog.\n     */\n    positionCommentDlg(commentDlg) {\n        commentDlg.positionBeside(this._$flag, {\n            side: 'b',\n            fitOnScreen: true\n        });\n    },\n\n    /**\n     * Update the position and size of the comment block element.\n     *\n     * The new position and size will reflect the x, y, width, and height\n     * properties in the model.\n     */\n    _updateBounds() {\n        this.$el\n            .move(this.model.get('x') * this._scale,\n                  this.model.get('y') * this._scale,\n                  'absolute')\n            .width(this.model.get('width') * this._scale)\n            .height(this.model.get('height') * this._scale);\n    },\n\n    /**\n     * Update the displayed count of comments.\n     */\n    _updateCount() {\n        if (this._$flag) {\n            this._$flag.text(this.model.get('count'));\n        }\n    },\n\n    /**\n     * Handle a click event.\n     *\n     * If the click event is not the end result of a drag operation, this\n     * will emit the \"clicked\" event on the view.\n     */\n    _onClicked() {\n        if (!this._moveState.hasMoved) {\n            this.trigger('clicked');\n        }\n    },\n\n    /**\n     * Set the zoom scale.\n     *\n     * Args:\n     *     scale (number):\n     *         A scaling factor. 1.0 is a 1:1 pixel ratio, 0.5 is displayed\n     *         at half size, etc.\n     */\n    setScale(scale) {\n        this._scale = scale;\n        this._updateBounds();\n    }\n});\n"],"mappings":"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"}