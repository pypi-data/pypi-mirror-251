{"version":3,"file":"fileAttachmentCommentBlockModel.js","names":["RB","FileAttachmentCommentBlock","AbstractCommentBlock","extend","defaults","_","fileAttachmentID","diffAgainstFileAttachmentID","prototype","serializedFields","createComment","id","comment","get","createFileAttachmentComment","pick","attributes"],"sources":["../../../../../static/rb/js/models/fileAttachmentCommentBlockModel.es6.js"],"sourcesContent":["/**\n * Represents the comments on a file attachment.\n *\n * FileAttachmentCommentBlock deals with creating and representing comments\n * that exist on a file attachment. It's a base class that is meant to be\n * subclassed.\n *\n * Model Attributes:\n *     fileAttachmentID (number):\n *         The ID of the file attachment being commented upon.\n *\n *     diffAgainstFileAttachmentID (number):\n *         An optional ID of the file attachment being diffed against.\n *\n * See Also:\n *     :js:class:`RB.AbstractCommentBlock`:\n *         For attributes defined on the base model.\n */\nRB.FileAttachmentCommentBlock = RB.AbstractCommentBlock.extend({\n    defaults: _.defaults({\n        fileAttachmentID: null,\n        diffAgainstFileAttachmentID: null\n    }, RB.AbstractCommentBlock.prototype.defaults),\n\n    /**\n     * The list of extra fields on this model.\n     *\n     * These will be stored on the server in the FileAttachmentComment's\n     * extra_data field.\n     */\n    serializedFields: [],\n\n    /**\n     * Create a FileAttachmentComment for the given comment ID.\n     *\n     * The subclass's storeCommentData will be called, allowing additional\n     * data to be stored along with the comment.\n     *\n     * Args:\n     *     id (number):\n     *         The ID of the comment to instantiate the model for.\n     *\n     * Returns:\n     *     RB.FileAttachmentComment:\n     *     The new comment model.\n     */\n    createComment(id) {\n        const comment = this.get('review').createFileAttachmentComment(\n            id,\n            this.get('fileAttachmentID'),\n            this.get('diffAgainstFileAttachmentID'));\n\n        _.extend(comment.get('extraData'),\n                 _.pick(this.attributes, this.serializedFields));\n\n        return comment;\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,0BAA0B,GAAGD,EAAE,CAACE,oBAAoB,CAACC,MAAM,CAAC;EAC3DC,QAAQ,EAAEC,CAAC,CAACD,QAAQ,CAAC;IACjBE,gBAAgB,EAAE,IAAI;IACtBC,2BAA2B,EAAE;EACjC,CAAC,EAAEP,EAAE,CAACE,oBAAoB,CAACM,SAAS,CAACJ,QAAQ,CAAC;EAE9C;AACJ;AACA;AACA;AACA;AACA;EACIK,gBAAgB,EAAE,EAAE;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAaA,CAACC,EAAE,EAAE;IACd,MAAMC,OAAO,GAAG,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,2BAA2B,CAC1DH,EAAE,EACF,IAAI,CAACE,GAAG,CAAC,kBAAkB,CAAC,EAC5B,IAAI,CAACA,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAE5CR,CAAC,CAACF,MAAM,CAACS,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,EACxBR,CAAC,CAACU,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAACP,gBAAgB,CAAC,CAAC;IAExD,OAAOG,OAAO;EAClB;AACJ,CAAC,CAAC"}