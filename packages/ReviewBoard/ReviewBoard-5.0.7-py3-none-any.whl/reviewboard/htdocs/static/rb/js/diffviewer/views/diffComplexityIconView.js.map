{"version":3,"file":"diffComplexityIconView.js","names":["RB","DiffComplexityIconView","Backbone","View","extend","ICON_SIZE","initialize","options","numInserts","numDeletes","numReplaces","totalLines","render","numTotal","numInsertsPct","numDeletesPct","numReplacesPct","minValue","innerRadius","iconColors","getIconColors","$el","width","height","plot","color","insertColor","data","_clampValue","deleteColor","replaceColor","series","pie","show","radius","val","Math","max","_iconColors","$iconColor","$","hide","appendTo","document","body","className","css","remove"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffComplexityIconView.es6.js"],"sourcesContent":["/**\n * Renders an icon showing the general complexity of a diff.\n *\n * This icon is a pie graph showing the percentage of inserts vs deletes\n * vs replaces. The size of the white inner radius is a relative indicator\n * of how large the change is for the file, representing the unchanged lines.\n * Smaller inner radiuses indicate much larger changes, whereas larger\n * radiuses represent smaller changes.\n *\n * Callers are not required to supply the total number of lines or the number\n * of replaces, allowing this to be used when only the most basic insert and\n * delete counts are available.\n */\nRB.DiffComplexityIconView = Backbone.View.extend({\n    ICON_SIZE: 20,\n\n    /**\n     * Initialize the view.\n     *\n     * Each of the provided values will be normalized to something\n     * the view expects.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     numInserts (number, optional):\n     *         The number of inserts in the diff file.\n     *\n     *     numDeletes (number, optional):\n     *         The number of deletes in the diff file.\n     *\n     *     numReplaces (number, optional):\n     *         The number of replaces in the diff file.\n     *\n     *     totalLines (number, optional):\n     *         The total number of lines in the file.\n     */\n    initialize(options) {\n        this.numInserts = options.numInserts || 0;\n        this.numDeletes = options.numDeletes || 0;\n        this.numReplaces = options.numReplaces || 0;\n        this.totalLines = options.totalLines || null;\n    },\n\n    /**\n     * Render the icon.\n     *\n     * Returns:\n     *     RB.DiffComplexityIconView:\n     *     This object, for chaining.\n     */\n    render() {\n        const numTotal = this.numInserts + this.numDeletes + this.numReplaces;\n        const numInsertsPct = this.numInserts / numTotal;\n        const numDeletesPct = this.numDeletes / numTotal;\n        const numReplacesPct = this.numReplaces / numTotal;\n        const minValue = 360 * 0.15;\n        const innerRadius = (\n            0.5 * (this.totalLines === null\n                   ? 1\n                   : (this.totalLines - numTotal) / this.totalLines));\n        const iconColors = RB.DiffComplexityIconView.getIconColors();\n\n        this.$el\n            .width(this.ICON_SIZE)\n            .height(this.ICON_SIZE)\n            .plot(\n                [\n                    {\n                        color: iconColors.insertColor,\n                        data: this._clampValue(numInsertsPct * 360, minValue)\n                    },\n                    {\n                        color: iconColors.deleteColor,\n                        data: this._clampValue(numDeletesPct * 360, minValue)\n                    },\n                    {\n                        color: iconColors.replaceColor,\n                        data: this._clampValue(numReplacesPct * 360, minValue)\n                    },\n                ],\n                {\n                    series: {\n                        pie: {\n                            show: true,\n                            innerRadius: innerRadius,\n                            radius: 0.8,\n                        },\n                    },\n                }\n            );\n\n        return this;\n    },\n\n    /**\n     * Clamp the number to be, at minimum, minValue, unless it is 0.\n     *\n     * Args:\n     *     val (number):\n     *         The number to clamp.\n     *\n     *     minValue (number):\n     *         The minimum to clamp ``val`` to.\n     *\n     * Returns:\n     *     number:\n     *     The clamped number.\n     */\n    _clampValue(val, minValue) {\n        return val === 0 ? 0 : Math.max(val, minValue);\n    },\n}, {\n    _iconColors: null,\n\n    /**\n     * Return the colors used for the complexity icons.\n     *\n     * This will create a temporary icon on the DOM and apply the CSS\n     * styles for each type of change the icon can show. It will then\n     * copy these colors, caching them for all future icons, and return\n     * them.\n     *\n     * Returns:\n     *     object:\n     *     An object containing the colors to use for the icon.\n     */\n    getIconColors() {\n        if (!this._iconColors) {\n            this._iconColors = {};\n\n            const $iconColor = $('<div/>')\n                .hide()\n                .appendTo(document.body);\n\n            $iconColor[0].className = 'diff-changes-icon-insert';\n            this._iconColors.insertColor = $iconColor.css('color');\n\n            $iconColor[0].className = 'diff-changes-icon-replace';\n            this._iconColors.replaceColor = $iconColor.css('color');\n\n            $iconColor[0].className = 'diff-changes-icon-delete';\n            this._iconColors.deleteColor = $iconColor.css('color');\n\n            $iconColor.remove();\n        }\n\n        return this._iconColors;\n    },\n});\n"],"mappings":"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"}