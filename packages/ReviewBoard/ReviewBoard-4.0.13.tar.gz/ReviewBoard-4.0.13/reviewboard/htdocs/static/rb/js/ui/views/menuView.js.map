{"version":3,"file":"menuView.js","names":["RB","MenuView","Backbone","View","extend","className","events","initialize","options","arguments","length","undefined","type","TYPE_STANDARD_MENU","TYPE_BUTTON_MENU","console","error","id","_","uniqueId","$controller","isOpen","_ariaLabelledBy","ariaLabelledBy","_ariaLabel","ariaLabel","_activeItemIndex","_activeItemEl","render","$el","attr","tabindex","addClass","addItem","$","assert","text","onClick","on","role","_onMenuItemMouseMove","bind","appendTo","el","open","_setOpened","close","focusFirstItem","children","_focusItem","focusLastItem","numChildren","opened","animate","defer","removeClass","triggerEvents","trigger","index","focus","_focusPreviousItem","_focusNextItem","_onKeyDown","evt","which","ui","keyCode","ENTER","triggerHandler","ESCAPE","TAB","UP","DOWN","HOME","PAGE_UP","END","PAGE_DOWN","targetEl","currentTarget","menuItems","i"],"sources":["menuView.es6.js"],"sourcesContent":["/**\n * A standard implementation of drop-down menus.\n *\n * This can be used to create and populate a standard drop-down menu or a\n * button menu (where each menu item is a button). It handles animating the\n * opening and closing of the menu, applying ARIA attributes for accessibility,\n * and handling keyboard-based navigation.\n *\n * Menus are (optionally) associated with a controller element, which is the\n * button or element responsible for opening and closing the menu. Like the\n * menu itself, the appropriate ARIA attributes will be set on the element to\n * help screen readers associate it with the menu.\n *\n * Version Added:\n *     4.0\n *\n * Attributes:\n *     $controller (jQuery):\n *         The jQuery-wrapped element that controls the display of this menu.\n *\n *     isOpen (boolean):\n *         The current menu open state.\n *\n *     type (number):\n *         The configured type of menu. This will be one of\n *         :js:attr:`RB.MenuView.TYPE_BUTTON_MENU` or\n *         :js:attr:`RB.MenuView.TYPE_STANDARD_MENU`.\n */\nRB.MenuView = Backbone.View.extend({\n    className: 'rb-c-menu',\n\n    events: {\n        'keydown': '_onKeyDown',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $controller (jQuery, optional):\n     *         The jQuery-wrapped element that's responsible for opening and\n     *         closing this menu.\n     *\n     *     ariaLabel (string, optional):\n     *         An explicit descriptive ARIA label to set on the menu, to aid\n     *         screen readers.\n     *\n     *     ariaLabelledBy (string, optional):\n     *         The ID of an element that contains an existing descriptive\n     *         ARIA label to use for the menu, to aid screen readers. If\n     *         provided, this takes precedence over ``ariaLabel``.\n     *\n     *     type (number, optional):\n     *         The type of menu. If provided, this must be one of\n     *         :js:attr:`RB.MenuView.TYPE_BUTTON_MENU` or\n     *         :js:attr:`RB.MenuView.TYPE_STANDARD_MENU`. If not provided,\n     *         this will be a standard menu.\n     */\n    initialize(options={}) {\n        if (options.type === undefined ||\n            options.type === RB.MenuView.TYPE_STANDARD_MENU) {\n            this.type = RB.MenuView.TYPE_STANDARD_MENU;\n        } else if (options.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            this.type = RB.MenuView.TYPE_BUTTON_MENU;\n        } else {\n            console.error('The provided RB.MenuView type (%s) is not ' +\n                          'supported. Defaulting to a standard menu.',\n                          options.type);\n            this.type = RB.MenuView.TYPE_STANDARD_MENU;\n        }\n\n        if (!this.id) {\n            this.id = _.uniqueId('__rb-menu');\n        }\n\n        this.$controller = options.$controller;\n        this.isOpen = false;\n\n        this._ariaLabelledBy = options.ariaLabelledBy;\n        this._ariaLabel = options.ariaLabel;\n        this._activeItemIndex = null;\n        this._activeItemEl = null;\n    },\n\n    /**\n     * Render the menu.\n     *\n     * This will set up the elements for the menu and associate it with the\n     * controller.\n     *\n     * Returns:\n     *     RB.MenuView:\n     *     This menu, for chaining.\n     */\n    render() {\n        this.$el\n            .attr({\n                id: this.id,\n                tabindex: '-1',\n            });\n\n        if (this.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            this.$el.addClass('rb-c-button-group -is-vertical');\n        }\n\n        /* Set ARIA attributes on these and on the controller. */\n        this.$el.attr('role', 'menu');\n\n        if (this._ariaLabelledBy) {\n            this.$el.attr('aria-labelledby', this._ariaLabelledBy);\n        } else if (this._ariaLabel) {\n            this.$el.attr('aria-label', this._ariaLabel);\n        }\n\n        if (this.$controller) {\n            this.$controller.attr({\n                'aria-controls': this.id,\n                'aria-expanded': 'false',\n                'aria-haspopup': 'true',\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Add an item to the menu.\n     *\n     * This appends an item to the bottom of the menu. It can append an\n     * explicit element (if one was already created), or it can build a new\n     * item appropriate for the type of menu.\n     *\n     * In either case, this can assign a DOM element ID to the menu item,\n     * assign a click event handler, and will set ARIA roles.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the menu item.\n     *\n     * Option Args:\n     *     id (string, optional):\n     *         A DOM element ID to assign to the menu item.\n     *\n     *     onClick (function, optional):\n     *         A function to call when the menu item is clicked.\n     *\n     *     text (string, optional):\n     *         Explicit text to use for the menu item.\n     *\n     * Returns:\n     *     jQuery:\n     *     The jQuery-wrapped element for the menu item.\n     */\n    addItem(options={}) {\n        let $el;\n\n        if (this.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            $el = $(\n                '<button class=\"rb-c-menu__item rb-c-button\" type=\"button\">'\n            );\n        } else if (this.type === RB.MenuView.TYPE_STANDARD_MENU) {\n            $el = $('<div class=\"rb-c-menu__item\">');\n        } else {\n            /* This shouldn't be able to be reached. */\n            console.assert(false, 'RB.MenuView type is not a supported type.');\n        }\n\n        if (options.text !== undefined) {\n            $el.text(options.text);\n        }\n\n        if (options.onClick !== undefined) {\n            $el.on('click', options.onClick);\n        }\n\n        $el\n            .attr({\n                role: 'menuitem',\n                tabindex: '-1',\n            })\n            .on('mousemove', this._onMenuItemMouseMove.bind(this))\n            .appendTo(this.el);\n\n        return $el;\n    },\n\n    /**\n     * Open the menu.\n     *\n     * This will show the menu on the screen. Before it's shown, an ``opening``\n     * event will be emitted. Once shown (and after the animation finishes),\n     * the ``opened`` event will be emitted.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to use when opening the menu.\n     *\n     * Option Args:\n     *     animate (boolean, optional):\n     *         Whether to animate the menu. This defaults to ``true``.\n     */\n    open(options) {\n        this._setOpened(true, options);\n    },\n\n    /**\n     * Close the menu.\n     *\n     * This will hide the menu. Before it's hidden, a ``closing`` event will\n     * be emitted. Once hidden (and after the animation finishes), the\n     * ``closed`` event will be emitted.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to use when closing the menu.\n     *\n     * Option Args:\n     *     animate (boolean, optional):\n     *         Whether to animate the menu. This defaults to ``true``.\n     */\n    close(options) {\n        this._setOpened(false, options);\n    },\n\n    /**\n     * Focus the first item in the menu.\n     *\n     * This should be used by callers when programmatically displaying the\n     * menu (such as a result of keyboard input), when showing the menu below\n     * the controller.\n     *\n     * Once focused, arrow keys can be used to navigate the menu.\n     */\n    focusFirstItem() {\n        if (this.el.children.length > 0) {\n            this._focusItem(0);\n        }\n    },\n\n    /**\n     * Focus the last item in the menu.\n     *\n     * This should be used by callers when programmatically displaying the\n     * menu (such as a result of keyboard input), when showing the menu above\n     * the controller.\n     *\n     * Once focused, arrow keys can be used to navigate the menu.\n     */\n    focusLastItem() {\n        const numChildren = this.el.children.length;\n\n        if (numChildren > 0) {\n            this._focusItem(numChildren - 1);\n        }\n    },\n\n    /**\n     * Set the menu's open/closed state.\n     *\n     * This takes care of emitting the opening/opened/closing/closed events,\n     * setting active item states, setting the classes or display states, and\n     * setting appropriate ARIA attributes on the controller.\n     *\n     * Args:\n     *     opened (boolean):\n     *         Whether the menu is set to opened.\n     *\n     *     options (object, optional):\n     *         The options to use when setting state.\n     *\n     * Option Args:\n     *     triggerEvents (boolean, optional):\n     *         Whether to trigger events from a state change. This defaults\n     *         to ``true``.\n     */\n    _setOpened(opened, options={}) {\n        if (this.isOpen === opened) {\n            return;\n        }\n\n        this._activeItemIndex = null;\n        this._activeItemEl = null;\n\n        if (options.animate === false) {\n            this.$el.addClass('js-no-animation');\n            _.defer(() => this.$el.removeClass('js-no-animation'));\n        }\n\n        this.isOpen = opened;\n\n        const triggerEvents = (options.triggerEvents !== false);\n\n        if (triggerEvents) {\n            this.trigger(opened ? 'opening' : 'closing');\n        }\n\n        if (opened) {\n            this.$el.addClass('-is-open');\n        } else {\n            this.$el.removeClass('-is-open');\n        }\n\n        if (this.$controller) {\n            this.$controller.attr('aria-expanded', opened);\n        }\n\n        if (triggerEvents) {\n            this.trigger(opened ? 'opened' : 'closed');\n        }\n    },\n\n    /**\n     * Focus an item at the specified index.\n     *\n     * Args:\n     *     index (number):\n     *         The index of the menu item to focus. This is expected to be\n     *         a valid index in the list of items.\n     */\n    _focusItem(index) {\n        this._activeItemIndex = index;\n        this._activeItemEl = this.el.children[index];\n        this._activeItemEl.focus();\n    },\n\n    /**\n     * Focus the previous item in the menu.\n     *\n     * This takes care of wrapping the focus around to the end of the menu,\n     * if focus was already on the first item.\n     */\n    _focusPreviousItem() {\n        if (this._activeItemIndex === null) {\n            this.focusFirstItem();\n        } else {\n            let index = this._activeItemIndex - 1;\n\n            if (index < 0) {\n                index = this.el.children.length - 1;\n            }\n\n            this._focusItem(index);\n        }\n    },\n\n    /**\n     * Focus the next item in the menu.\n     *\n     * This takes care of wrapping the focus around to the beginning of\n     * the menu, if focus was already on the last item.\n     */\n    _focusNextItem() {\n        if (this._activeItemIndex === null) {\n            this.focusFirstItem();\n        } else {\n            let index = this._activeItemIndex + 1;\n\n            if (index >= this.el.children.length) {\n                index = 0;\n            }\n\n            this._focusItem(index);\n        }\n    },\n\n    /**\n     * Handle a keydown event.\n     *\n     * When the menu or a menu item has focus, this will take care of\n     * handling keyboard-based navigation, allowing the menu to be closed,\n     * or the focused menu item to be changed or activated.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The keydown event.\n     *\n     * Returns:\n     *     boolean:\n     *     ``True`` if the event was handled explicitly by the menu.\n     *     ``False`` if it should bubble up or invoke default behavior.\n     */\n    _onKeyDown(evt) {\n        switch (evt.which) {\n            case $.ui.keyCode.ENTER:\n                /* Activate any selected item. */\n                $(this._activeItemEl).triggerHandler('click');\n                return false;\n\n            case $.ui.keyCode.ESCAPE:\n            case $.ui.keyCode.TAB:\n                /* Close the menu and bring focus back to the controller. */\n                if (this.$controller) {\n                    this.$controller.focus();\n                }\n\n                this.close({\n                    animate: false,\n                });\n                return false;\n\n            case $.ui.keyCode.UP:\n                /* Move up an item. */\n                this._focusPreviousItem();\n                return false;\n\n            case $.ui.keyCode.DOWN:\n                /* Move down an item. */\n                this._focusNextItem();\n                return false;\n\n            case $.ui.keyCode.HOME:\n            case $.ui.keyCode.PAGE_UP:\n                /* Move to the first item. */\n                this.focusFirstItem();\n                return false;\n\n            case $.ui.keyCode.END:\n            case $.ui.keyCode.PAGE_DOWN:\n                /* Move to the last item. */\n                this.focusLastItem();\n                return false;\n        }\n    },\n\n    /**\n     * Handle mousemove events on a menu item.\n     *\n     * This will move the focus to the menu item.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The mousemove event.\n     */\n    _onMenuItemMouseMove(evt) {\n        const targetEl = evt.currentTarget;\n\n        if (targetEl === this._activeItemEl) {\n            /* The mouse has moved but the item hasn't changed. */\n            return;\n        }\n\n        const menuItems = this.el.children;\n\n        for (let i = 0; i < menuItems.length; i++) {\n            if (menuItems[i] === targetEl) {\n                this._focusItem(i);\n                break;\n            }\n        }\n    },\n}, {\n    /** Standard drop-down menus. */\n    TYPE_STANDARD_MENU: 1,\n\n    /** Button-based menus. */\n    TYPE_BUTTON_MENU: 2,\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,QAAQ,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE,WAAW;EAEtBC,MAAM,EAAE;IACJ,SAAS,EAAE;EACf,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAAA,EAAa;IAAA,IAAZC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IACjB,IAAID,OAAO,CAACI,IAAI,KAAKD,SAAS,IAC1BH,OAAO,CAACI,IAAI,KAAKZ,EAAE,CAACC,QAAQ,CAACY,kBAAkB,EAAE;MACjD,IAAI,CAACD,IAAI,GAAGZ,EAAE,CAACC,QAAQ,CAACY,kBAAkB;IAC9C,CAAC,MAAM,IAAIL,OAAO,CAACI,IAAI,KAAKZ,EAAE,CAACC,QAAQ,CAACa,gBAAgB,EAAE;MACtD,IAAI,CAACF,IAAI,GAAGZ,EAAE,CAACC,QAAQ,CAACa,gBAAgB;IAC5C,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAC,4CAA4C,GAC5C,2CAA2C,EAC3CR,OAAO,CAACI,IAAI,CAAC;MAC3B,IAAI,CAACA,IAAI,GAAGZ,EAAE,CAACC,QAAQ,CAACY,kBAAkB;IAC9C;IAEA,IAAI,CAAC,IAAI,CAACI,EAAE,EAAE;MACV,IAAI,CAACA,EAAE,GAAGC,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC;IACrC;IAEA,IAAI,CAACC,WAAW,GAAGZ,OAAO,CAACY,WAAW;IACtC,IAAI,CAACC,MAAM,GAAG,KAAK;IAEnB,IAAI,CAACC,eAAe,GAAGd,OAAO,CAACe,cAAc;IAC7C,IAAI,CAACC,UAAU,GAAGhB,OAAO,CAACiB,SAAS;IACnC,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,aAAa,GAAG,IAAI;EAC7B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,GAAG,CACHC,IAAI,CAAC;MACFb,EAAE,EAAE,IAAI,CAACA,EAAE;MACXc,QAAQ,EAAE;IACd,CAAC,CAAC;IAEN,IAAI,IAAI,CAACnB,IAAI,KAAKZ,EAAE,CAACC,QAAQ,CAACa,gBAAgB,EAAE;MAC5C,IAAI,CAACe,GAAG,CAACG,QAAQ,CAAC,gCAAgC,CAAC;IACvD;;IAEA;IACA,IAAI,CAACH,GAAG,CAACC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;IAE7B,IAAI,IAAI,CAACR,eAAe,EAAE;MACtB,IAAI,CAACO,GAAG,CAACC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAACR,eAAe,CAAC;IAC1D,CAAC,MAAM,IAAI,IAAI,CAACE,UAAU,EAAE;MACxB,IAAI,CAACK,GAAG,CAACC,IAAI,CAAC,YAAY,EAAE,IAAI,CAACN,UAAU,CAAC;IAChD;IAEA,IAAI,IAAI,CAACJ,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACU,IAAI,CAAC;QAClB,eAAe,EAAE,IAAI,CAACb,EAAE;QACxB,eAAe,EAAE,OAAO;QACxB,eAAe,EAAE;MACrB,CAAC,CAAC;IACN;IAEA,OAAO,IAAI;EACf,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIgB,OAAOA,CAAA,EAAa;IAAA,IAAZzB,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IACd,IAAIoB,GAAG;IAEP,IAAI,IAAI,CAACjB,IAAI,KAAKZ,EAAE,CAACC,QAAQ,CAACa,gBAAgB,EAAE;MAC5Ce,GAAG,GAAGK,CAAC,CACH,4DACJ,CAAC;IACL,CAAC,MAAM,IAAI,IAAI,CAACtB,IAAI,KAAKZ,EAAE,CAACC,QAAQ,CAACY,kBAAkB,EAAE;MACrDgB,GAAG,GAAGK,CAAC,CAAC,+BAA+B,CAAC;IAC5C,CAAC,MAAM;MACH;MACAnB,OAAO,CAACoB,MAAM,CAAC,KAAK,EAAE,2CAA2C,CAAC;IACtE;IAEA,IAAI3B,OAAO,CAAC4B,IAAI,KAAKzB,SAAS,EAAE;MAC5BkB,GAAG,CAACO,IAAI,CAAC5B,OAAO,CAAC4B,IAAI,CAAC;IAC1B;IAEA,IAAI5B,OAAO,CAAC6B,OAAO,KAAK1B,SAAS,EAAE;MAC/BkB,GAAG,CAACS,EAAE,CAAC,OAAO,EAAE9B,OAAO,CAAC6B,OAAO,CAAC;IACpC;IAEAR,GAAG,CACEC,IAAI,CAAC;MACFS,IAAI,EAAE,UAAU;MAChBR,QAAQ,EAAE;IACd,CAAC,CAAC,CACDO,EAAE,CAAC,WAAW,EAAE,IAAI,CAACE,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACrDC,QAAQ,CAAC,IAAI,CAACC,EAAE,CAAC;IAEtB,OAAOd,GAAG;EACd,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIe,IAAIA,CAACpC,OAAO,EAAE;IACV,IAAI,CAACqC,UAAU,CAAC,IAAI,EAAErC,OAAO,CAAC;EAClC,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsC,KAAKA,CAACtC,OAAO,EAAE;IACX,IAAI,CAACqC,UAAU,CAAC,KAAK,EAAErC,OAAO,CAAC;EACnC,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIuC,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACJ,EAAE,CAACK,QAAQ,CAACtC,MAAM,GAAG,CAAC,EAAE;MAC7B,IAAI,CAACuC,UAAU,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAaA,CAAA,EAAG;IACZ,MAAMC,WAAW,GAAG,IAAI,CAACR,EAAE,CAACK,QAAQ,CAACtC,MAAM;IAE3C,IAAIyC,WAAW,GAAG,CAAC,EAAE;MACjB,IAAI,CAACF,UAAU,CAACE,WAAW,GAAG,CAAC,CAAC;IACpC;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,UAAUA,CAACO,MAAM,EAAc;IAAA,IAAZ5C,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IACzB,IAAI,IAAI,CAACY,MAAM,KAAK+B,MAAM,EAAE;MACxB;IACJ;IAEA,IAAI,CAAC1B,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,aAAa,GAAG,IAAI;IAEzB,IAAInB,OAAO,CAAC6C,OAAO,KAAK,KAAK,EAAE;MAC3B,IAAI,CAACxB,GAAG,CAACG,QAAQ,CAAC,iBAAiB,CAAC;MACpCd,CAAC,CAACoC,KAAK,CAAC,MAAM,IAAI,CAACzB,GAAG,CAAC0B,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAC1D;IAEA,IAAI,CAAClC,MAAM,GAAG+B,MAAM;IAEpB,MAAMI,aAAa,GAAIhD,OAAO,CAACgD,aAAa,KAAK,KAAM;IAEvD,IAAIA,aAAa,EAAE;MACf,IAAI,CAACC,OAAO,CAACL,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC;IAChD;IAEA,IAAIA,MAAM,EAAE;MACR,IAAI,CAACvB,GAAG,CAACG,QAAQ,CAAC,UAAU,CAAC;IACjC,CAAC,MAAM;MACH,IAAI,CAACH,GAAG,CAAC0B,WAAW,CAAC,UAAU,CAAC;IACpC;IAEA,IAAI,IAAI,CAACnC,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACU,IAAI,CAAC,eAAe,EAAEsB,MAAM,CAAC;IAClD;IAEA,IAAII,aAAa,EAAE;MACf,IAAI,CAACC,OAAO,CAACL,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,UAAUA,CAACS,KAAK,EAAE;IACd,IAAI,CAAChC,gBAAgB,GAAGgC,KAAK;IAC7B,IAAI,CAAC/B,aAAa,GAAG,IAAI,CAACgB,EAAE,CAACK,QAAQ,CAACU,KAAK,CAAC;IAC5C,IAAI,CAAC/B,aAAa,CAACgC,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,IAAI,CAAClC,gBAAgB,KAAK,IAAI,EAAE;MAChC,IAAI,CAACqB,cAAc,CAAC,CAAC;IACzB,CAAC,MAAM;MACH,IAAIW,KAAK,GAAG,IAAI,CAAChC,gBAAgB,GAAG,CAAC;MAErC,IAAIgC,KAAK,GAAG,CAAC,EAAE;QACXA,KAAK,GAAG,IAAI,CAACf,EAAE,CAACK,QAAQ,CAACtC,MAAM,GAAG,CAAC;MACvC;MAEA,IAAI,CAACuC,UAAU,CAACS,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIG,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACnC,gBAAgB,KAAK,IAAI,EAAE;MAChC,IAAI,CAACqB,cAAc,CAAC,CAAC;IACzB,CAAC,MAAM;MACH,IAAIW,KAAK,GAAG,IAAI,CAAChC,gBAAgB,GAAG,CAAC;MAErC,IAAIgC,KAAK,IAAI,IAAI,CAACf,EAAE,CAACK,QAAQ,CAACtC,MAAM,EAAE;QAClCgD,KAAK,GAAG,CAAC;MACb;MAEA,IAAI,CAACT,UAAU,CAACS,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,UAAUA,CAACC,GAAG,EAAE;IACZ,QAAQA,GAAG,CAACC,KAAK;MACb,KAAK9B,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACC,KAAK;QACnB;QACAjC,CAAC,CAAC,IAAI,CAACP,aAAa,CAAC,CAACyC,cAAc,CAAC,OAAO,CAAC;QAC7C,OAAO,KAAK;MAEhB,KAAKlC,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACG,MAAM;MACxB,KAAKnC,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACI,GAAG;QACjB;QACA,IAAI,IAAI,CAAClD,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACuC,KAAK,CAAC,CAAC;QAC5B;QAEA,IAAI,CAACb,KAAK,CAAC;UACPO,OAAO,EAAE;QACb,CAAC,CAAC;QACF,OAAO,KAAK;MAEhB,KAAKnB,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACK,EAAE;QAChB;QACA,IAAI,CAACX,kBAAkB,CAAC,CAAC;QACzB,OAAO,KAAK;MAEhB,KAAK1B,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACM,IAAI;QAClB;QACA,IAAI,CAACX,cAAc,CAAC,CAAC;QACrB,OAAO,KAAK;MAEhB,KAAK3B,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACO,IAAI;MACtB,KAAKvC,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACQ,OAAO;QACrB;QACA,IAAI,CAAC3B,cAAc,CAAC,CAAC;QACrB,OAAO,KAAK;MAEhB,KAAKb,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACS,GAAG;MACrB,KAAKzC,CAAC,CAAC+B,EAAE,CAACC,OAAO,CAACU,SAAS;QACvB;QACA,IAAI,CAAC1B,aAAa,CAAC,CAAC;QACpB,OAAO,KAAK;IACpB;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIV,oBAAoBA,CAACuB,GAAG,EAAE;IACtB,MAAMc,QAAQ,GAAGd,GAAG,CAACe,aAAa;IAElC,IAAID,QAAQ,KAAK,IAAI,CAAClD,aAAa,EAAE;MACjC;MACA;IACJ;IAEA,MAAMoD,SAAS,GAAG,IAAI,CAACpC,EAAE,CAACK,QAAQ;IAElC,KAAK,IAAIgC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACrE,MAAM,EAAEsE,CAAC,EAAE,EAAE;MACvC,IAAID,SAAS,CAACC,CAAC,CAAC,KAAKH,QAAQ,EAAE;QAC3B,IAAI,CAAC5B,UAAU,CAAC+B,CAAC,CAAC;QAClB;MACJ;IACJ;EACJ;AACJ,CAAC,EAAE;EACC;EACAnE,kBAAkB,EAAE,CAAC;EAErB;EACAC,gBAAgB,EAAE;AACtB,CAAC,CAAC"}