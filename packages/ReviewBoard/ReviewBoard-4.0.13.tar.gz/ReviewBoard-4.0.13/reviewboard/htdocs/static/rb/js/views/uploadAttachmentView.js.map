{"version":3,"file":"uploadAttachmentView.js","names":["RB","UploadAttachmentView","DialogView","extend","className","title","gettext","buttons","id","label","primary","disabled","onClick","template","_","events","prototype","initialize","options","arguments","length","undefined","defaults","attachmentHistoryID","presetCaption","body","captionText","pathText","call","$","send","attrs","reviewRequestEditor","createFileAttachment","save","form","success","remove","error","model","xhr","displayErrors","parseJSON","responseText","rsp","errorStr","err","msg","text","show","fields","nameToRow","caption","path","fieldName","hasOwnProperty","$errorList","css","elIndex","errorListEl","i","html","appendTo","render","_$path","_$uploadBtn","$buttonsMap","upload","updateUploadButtonEnabledState","enable","val"],"sources":["uploadAttachmentView.es6.js"],"sourcesContent":["/**\n * A dialog for updating file attachments.\n */\nRB.UploadAttachmentView = RB.DialogView.extend({\n    className: 'upload-attachment',\n    title: gettext('Upload File'),\n    buttons: [\n        {\n            id: 'cancel',\n            label: gettext('Cancel'),\n        },\n        {\n            id: 'upload',\n            label: gettext('Upload'),\n            primary: true,\n            disabled: true,\n            onClick: 'send',\n        },\n    ],\n    template: _.template(dedent`\n        <div class=\"formdlg\" style=\"width: 50em;\">\n         <div class=\"error\" style=\"display: none;\"></div>\n         <form encoding=\"multipart/form-data\" enctype=\"multipart/form-data\"\n               id=\"attachment-upload-form\">\n          <table>\n           <tbody>\n            <tr>\n             <td class=\"label\"><label><%- captionText %></label></td>\n             <td>\n              <input name=\"caption\" type=\"text\" value=\"<%- presetCaption %>\">\n             </td>\n             <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>\n            </tr>\n            <tr>\n             <td class=\"label\">\n              <label class=\"required\"><%- pathText %></label>\n             </td>\n             <td><input name=\"path\" id=\"path\" type=\"file\" class=\"js-path\"></td>\n             <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>\n            </tr>\n           </tbody>\n          </table>\n          <% if (attachmentHistoryID >= 0) { %>\n            <input type=\"hidden\" name=\"attachment_history\"\n                   value=\"<%- attachmentHistoryID %>\" />\n          <% } %>\n         </form>\n        </div>\n    `),\n\n    events: _.extend({\n        'change .js-path': 'updateUploadButtonEnabledState',\n    }, RB.DialogView.prototype.events),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     attachmentHistoryID (number, optional):\n     *         The ID of the attachment history to add to. This can be omitted\n     *         if this is a new attachment (as opposed to updating an existing\n     *         one).\n     *\n     *     presetCaption (string):\n     *         The initial caption of the attachment.\n     *\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The review request editor.\n     */\n    initialize: function(options={}) {\n        _.defaults(options, {\n            attachmentHistoryID: -1,\n            presetCaption: '',\n        });\n\n        const body = this.template({\n            attachmentHistoryID: options.attachmentHistoryID,\n            captionText: gettext('Caption:'),\n            pathText: gettext('Path:'),\n            presetCaption: options.presetCaption,\n        });\n\n        RB.DialogView.prototype.initialize.call(this, $.extend({\n            body: body,\n        }, options));\n    },\n\n    /**\n     * Create a file attachment on the review request.\n     *\n     * On success, the dialog will be closed.\n     *\n     * Otherwise, on error, the dialog will display the errors.\n     */\n    send() {\n        const attrs = {\n            attachmentHistoryID: this.options.attachmentHistoryID,\n        };\n\n        this.options.reviewRequestEditor.createFileAttachment(attrs).save({\n            form: this.$('#attachment-upload-form'),\n            success: () => {\n                // Close 'Add File' modal.\n                this.remove();\n            },\n            error: function(model, xhr) {\n                this.displayErrors($.parseJSON(xhr.responseText));\n            },\n        }, this);\n    },\n\n    /**\n     * Display errors on the form.\n     *\n     * Args:\n     *     rsp (object):\n     *         The server response.\n     */\n    displayErrors(rsp) {\n        const errorStr = ((rsp && rsp.err)\n                          ? rsp.err.msg\n                          : gettext('Unknown Error'));\n\n        this.$('.error')\n            .text(errorStr)\n            .show();\n\n        if (rsp && rsp.fields) {\n            /* Invalid form data */\n            const nameToRow = {\n                caption: 0,\n                path: 1,\n            };\n\n            for (let fieldName in rsp.fields) {\n                if (rsp.fields.hasOwnProperty(fieldName)) {\n                    const $errorList = this.$('.errorlist')\n                        .css('display', 'block');\n                    const elIndex = nameToRow[fieldName];\n                    const errorListEl = $errorList[elIndex];\n\n                    for (let i = 0; i < rsp.fields[fieldName].length; i++) {\n                        $('<li>')\n                            .html(rsp.fields[fieldName][i])\n                            .appendTo(errorListEl);\n                    }\n                }\n            }\n        }\n    },\n\n    /**\n     * Render the dialog.\n     *\n     * Returns:\n     *     RB.UploadAttachmentView:\n     *     This object, for chaining.\n     */\n    render() {\n        RB.DialogView.prototype.render.call(this);\n\n        this._$path = this.$('.js-path');\n        this._$uploadBtn = this.$buttonsMap.upload;\n\n        return this;\n    },\n\n    /**\n     * Set the upload button to be clickable or not based on context.\n     */\n    updateUploadButtonEnabledState() {\n        this._$uploadBtn.enable(this._$path.val());\n    },\n});\n"],"mappings":"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"}