{"version":3,"file":"baseResourceModel.js","names":["RB","BaseResource","Backbone","Model","extend","defaults","extraData","links","loaded","parentObject","rspNamespace","urlIDAttr","listKey","expandedFields","extraQueryArgs","supportsExtraData","attrToJsonMap","serializedAttrs","deserializedAttrs","serializers","deserializers","initialize","_setupExtraData","url","get","self","href","key","_","result","link","baseURL","isNew","ready","options","arguments","length","undefined","context","success","isFunction","bind","error","fetch","data","ensureCreated","save","call","bindCallbacks","prototype","trigger","_saveObject","_this","saveOptions","_len","args","Array","_key","apply","_len2","_key2","attrs","toJSON","files","readers","form","payloadFileKeys","window","File","forEach","file","push","reader","FileReader","onloadend","every","r","readyState","DONE","_saveWithFiles","readAsArrayBuffer","fileReaders","boundary","Date","getTime","blob","zip","name","type","value","Object","entries","includes","Blob","processData","contentType","destroy","_destroyObject","_finishDestroy","_this2","wait","set","id","_len3","_key3","parse","rsp","console","assert","stat","extra_data","parseResourceData","attrName","deserializer","jsonField","serializerState","serializer","sync","method","model","isEmpty","isArray","pick","map","attr","syncOptions","expand","join","xhr","storeAPIError","errorPayload","has","validate","strings","isObject","INVALID_EXTRADATA_TYPE","isNull","isNumber","isNaN","isBoolean","isString","INVALID_EXTRADATA_VALUE_TYPE","replace","UNSET_PARENT_OBJECT","ExtraDataMixin"],"sources":["baseResourceModel.es6.js"],"sourcesContent":["/**\n * The base model for all API-backed resource models.\n *\n * This provides a common set of attributes and functionality for working\n * with Review Board's REST API. That includes fetching data for a known\n * resource, creating resources, saving, deleting, and navigating children\n * resources by way of a payload's list of links.\n *\n * Other resource models are expected to extend this. In particular, they\n * should generally be extending toJSON() and parse().\n */\nRB.BaseResource = Backbone.Model.extend({\n    /**\n     * Return default values for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The attribute defaults.\n     */\n    defaults() {\n        return {\n            extraData: {},\n            links: null,\n            loaded: false,\n            parentObject: null\n        };\n    },\n\n    /** The key for the namespace for the object's payload in a response. */\n    rspNamespace: '',\n\n    /** The attribute used for the ID in the URL. */\n    urlIDAttr: 'id',\n\n    listKey() {\n        return this.rspNamespace + 's';\n    },\n\n    /** The list of fields to expand in resource payloads. */\n    expandedFields: [],\n\n    /**\n     * Extra query arguments for GET requests.\n     *\n     * This may also be a function that returns the extra query arguments.\n     *\n     * These values can be overridden by the caller when making a request.\n     * They function as defaults for the queries.\n     */\n    extraQueryArgs: {},\n\n    /** Whether or not extra data can be associated on the resource. */\n    supportsExtraData: false,\n\n    /**\n     * A map of attribute names to resulting JSON field names.\n     *\n     * This is used to auto-generate a JSON payload from attribute names\n     * in toJSON().\n     *\n     * It's also needed if using attribute names in any save({attrs: [...]})\n     * calls.\n     */\n    attrToJsonMap: {},\n\n    /** A list of attributes to serialize in toJSON(). */\n    serializedAttrs: [],\n\n    /** A list of attributes to deserialize in parseResourceData(). */\n    deserializedAttrs: [],\n\n    /** Special serializer functions called in toJSON(). */\n    serializers: {},\n\n    /** Special deserializer functions called in parseResourceData(). */\n    deserializers: {},\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        if (this.supportsExtraData) {\n            this._setupExtraData();\n        }\n    },\n\n    /**\n     * Return the URL for this resource's instance.\n     *\n     * If this resource is loaded and has a URL to itself, that URL will\n     * be returned. If not yet loaded, it'll try to get it from its parent\n     * object, if any.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when fetching the resource. If the URL cannot be\n     *     determined, this will return null.\n     */\n    url() {\n        let links = this.get('links');\n\n        if (links) {\n            return links.self.href;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            links = parentObject.get('links');\n\n            if (links) {\n                const key = _.result(this, 'listKey');\n                const link = links[key];\n\n                if (link) {\n                    const baseURL = link.href;\n\n                    return this.isNew()\n                           ? baseURL\n                           : (baseURL + this.get(this.urlIDAttr) + '/');\n                }\n            }\n        }\n\n        return null;\n    },\n\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * An object is ready it has an ID and is loaded, or is a new resource.\n     *\n     * When the object is ready, options.ready() will be called. This may\n     * be called immediately, or after one or more round trips to the server.\n     *\n     * If we fail to load the resource, objects.error() will be called instead.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the fetch operation.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     *\n     * Option Args:\n     *     ready (function):\n     *         Callback function for when the object is ready to use.\n     *\n     *     error (function):\n     *         Callback function for when an error occurs.\n     */\n    ready(options={}, context=undefined) {\n        const success = _.isFunction(options.ready)\n                        ? _.bind(options.ready, context)\n                        : undefined;\n        const error = _.isFunction(options.error)\n                      ? _.bind(options.error, context)\n                      : undefined;\n\n        const parentObject = this.get('parentObject');\n\n        if (this.get('loaded')) {\n            // We already have data--just call the callbacks\n            if (success) {\n                success();\n            }\n        } else if (!this.isNew()) {\n            // Fetch data from the server\n            this.fetch({\n                data: options.data,\n                success: success,\n                error: error\n            });\n        } else if (parentObject) {\n            /*\n             * This is a new object, which means there's nothing to fetch from\n             * the server, but we still need to ensure that the parent is loaded\n             * in order for it to have valid links.\n             */\n            parentObject.ready({\n                ready: success,\n                error: error\n            });\n        } else if (success) {\n            // Fallback for dummy objects.\n            success();\n        }\n    },\n\n    /**\n     * Call a function when we know an object exists server-side.\n     *\n     * This works like ready() in that it's used to delay operating on the\n     * resource until we have a server-side representation. Unlike ready(),\n     * it will attempt to create it if it doesn't exist first.\n     *\n     * When the object has been created, or we know it already is,\n     * options.success() will be called.\n     *\n     * If we fail to create the object, options.error() will be called\n     * instead.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    ensureCreated(options={}, context=undefined) {\n        this.ready({\n            ready: () => {\n                if (!this.get('loaded')) {\n                    this.save({\n                        success: _.isFunction(options.success)\n                                 ? _.bind(options.success, context)\n                                 : undefined,\n                        error: _.isFunction(options.error)\n                               ? _.bind(options.error, context)\n                               : undefined\n                    });\n                } else if (_.isFunction(options.success)) {\n                    options.success.call(context);\n                }\n            }\n        });\n    },\n\n    /**\n     * Fetch the object's data from the server.\n     *\n     * An object must have an ID before it can be fetched. Otherwise,\n     * options.error() will be called.\n     *\n     * If this has a parent resource object, we'll ensure that's ready before\n     * fetching this resource.\n     *\n     * The resource must override the parse() function to determine how\n     * the returned resource data is parsed and what data is stored in\n     * this object.\n     *\n     * If we successfully fetch the resource, options.success() will be\n     * called.\n     *\n     * If we fail to fetch the resource, options.error() will be called.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    fetch(options={}, context=undefined) {\n        options = _.bindCallbacks(options, context);\n\n        if (this.isNew()) {\n            if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'fetch cannot be used on a resource without an ID');\n            }\n\n            return;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            parentObject.ready({\n                ready: () => Backbone.Model.prototype.fetch.call(this, options),\n                error: options.error\n            }, this);\n        } else {\n            Backbone.Model.prototype.fetch.call(this, options);\n        }\n    },\n\n    /**\n     * Save the object's data to the server.\n     *\n     * If the object has an ID already, it will be saved to its known\n     * URL using HTTP PUT. If it doesn't have an ID, it will be saved\n     * to its parent list resource using HTTP POST\n     *\n     * If this has a parent resource object, we'll ensure that's created\n     * before saving this resource.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be saved.\n     *\n     * The resource must override the toJSON() function to determine what\n     * data is saved to the server.\n     *\n     * If we successfully save the resource, options.success() will be\n     * called, and the \"saved\" event will be triggered.\n     *\n     * If we fail to save the resource, options.error() will be called.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    save(options={}, context=undefined) {\n        this.trigger('saving', options);\n\n        this.ready({\n            ready: () => {\n                const parentObject = this.get('parentObject');\n\n                if (parentObject) {\n                    parentObject.ensureCreated({\n                        success: this._saveObject.bind(this, options, context),\n                        error: options.error\n                    }, this);\n                } else {\n                    this._saveObject(options, context);\n                }\n            },\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    /**\n     * Handle the actual saving of the object's state.\n     *\n     * This is called internally by save() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _saveObject(options, context) {\n        const url = _.result(this, 'url');\n        if (!url) {\n            if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be saved');\n            }\n\n            return;\n        }\n\n        const saveOptions = _.defaults({\n            success: (...args) => {\n                if (_.isFunction(options.success)) {\n                    options.success.apply(context, args);\n                }\n\n                this.trigger('saved', options);\n            },\n            error: (...args) => {\n                if (_.isFunction(options.error)) {\n                    options.error.apply(context, args);\n                }\n\n                this.trigger('saveFailed', options);\n            }\n        }, options);\n\n        saveOptions.attrs = options.attrs || this.toJSON(options);\n\n        const files = [];\n        const readers = [];\n\n        if (!options.form) {\n            if (this.payloadFileKeys && window.File) {\n                /* See if there are files in the attributes we're using. */\n                this.payloadFileKeys.forEach(key => {\n                    const file = saveOptions.attrs[key];\n\n                    if (file) {\n                        files.push(file);\n                    }\n                });\n            }\n        }\n\n        if (files.length > 0) {\n            files.forEach(file => {\n                const reader = new FileReader();\n\n                readers.push(reader);\n                reader.onloadend = () => {\n                    if (readers.every(r => r.readyState === FileReader.DONE)) {\n                        this._saveWithFiles(files, readers, saveOptions);\n                    }\n                };\n                reader.readAsArrayBuffer(file);\n            });\n        } else {\n            Backbone.Model.prototype.save.call(this, {}, saveOptions);\n        }\n    },\n\n    /**\n     * Save the model with a file upload.\n     *\n     * When doing file uploads, we need to hand-structure a form-data payload\n     * to the server. It will contain the file contents and the attributes\n     * we're saving. We can then call the standard save function with this\n     * payload as our data.\n     *\n     * Args:\n     *     files (Array of object):\n     *         A list of files, with ``name`` and ``type`` keys.\n     *\n     *     fileReaders (Array of FileReader):\n     *         Readers corresponding to each item in ``files``.\n     *\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Option Args:\n     *     boundary (string):\n     *         Optional MIME multipart boundary.\n     *\n     *     attrs (object):\n     *         Additional key/value pairs to include in the payload data.\n     */\n    _saveWithFiles(files, fileReaders, options) {\n        const boundary = options.boundary ||\n                         ('-----multipartformboundary' + new Date().getTime());\n        const blob = [];\n\n        for (let [key, file, reader] of\n             _.zip(this.payloadFileKeys, files, fileReaders)) {\n            if (!file || !reader) {\n                continue;\n            }\n\n            blob.push('--' + boundary + '\\r\\n');\n            blob.push('Content-Disposition: form-data; name=\"' +\n                      key + '\"; filename=\"' + file.name + '\"\\r\\n');\n            blob.push('Content-Type: ' + file.type + '\\r\\n');\n            blob.push('\\r\\n');\n\n            blob.push(reader.result);\n\n            blob.push('\\r\\n');\n        }\n\n        for (let [key, value] of Object.entries(options.attrs)) {\n            if (!this.payloadFileKeys.includes(key) &&\n                value !== undefined &&\n                value !== null) {\n                blob.push('--' + boundary + '\\r\\n');\n                blob.push('Content-Disposition: form-data; name=\"' + key +\n                          '\"\\r\\n');\n                blob.push('\\r\\n');\n                blob.push(value + '\\r\\n');\n            }\n        }\n\n        blob.push('--' + boundary + '--\\r\\n\\r\\n');\n\n        Backbone.Model.prototype.save.call(this, {}, _.extend({\n            data: new Blob(blob),\n            processData: false,\n            contentType: 'multipart/form-data; boundary=' + boundary,\n        }, options));\n    },\n\n    /**\n     * Delete the object's resource on the server.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be deleted.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    destroy(options={}, context=undefined) {\n        options = _.bindCallbacks(options, context);\n\n        this.trigger('destroying', options);\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.isNew() && parentObject) {\n            /*\n             * XXX This is temporary to support older-style resource\n             *     objects. We should just use ready() once we're moved\n             *     entirely onto BaseResource.\n             */\n            parentObject.ready(_.defaults({\n                ready: () => this._destroyObject(options, context)\n            }, options));\n        } else {\n            this._destroyObject(options, context);\n        }\n    },\n\n    /**\n     * Set up the deletion of the object.\n     *\n     * This is called internally by destroy() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Once we've done some work to ensure the URL is valid and the object\n     * is ready, we'll finish destruction by calling _finishDestroy.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _destroyObject(options={}, context=null) {\n        const url = _.result(this, 'url');\n\n        if (!url) {\n            if (this.isNew()) {\n                /*\n                 * If both this resource and its parent are new, it's possible\n                 * that we'll get through here without a url. In this case, all\n                 * the data is still local to the client and there's not much to\n                 * clean up; just call Model.destroy and be done with it.\n                 */\n                this._finishDestroy(options, context);\n            } else if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be deleted');\n            }\n\n            return;\n        }\n\n        this.ready({\n            ready: () => this._finishDestroy(options, context),\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    /**\n     * Finish destruction of the object.\n     *\n     * This will call the parent destroy method, then reset the state\n     * of the object on success.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _finishDestroy(options, context) {\n        const parentObject = this.get('parentObject');\n\n        Backbone.Model.prototype.destroy.call(this, _.defaults({\n            wait: true,\n            success: (...args) => {\n                /*\n                 * Reset the object so it's new again, but with the same\n                 * parentObject.\n                 */\n                this.set(_.defaults(\n                    {\n                        id: null,\n                        parentObject: parentObject\n                    },\n                    _.result(this, 'defaults')));\n\n                this.trigger('destroyed', options);\n\n                if (_.isFunction(options.success)) {\n                    options.success.apply(context, args);\n                }\n            }\n        }, _.bindCallbacks(options, context)));\n    },\n\n    /**\n     * Parse and returns the payload from an API response.\n     *\n     * This will by default only return the object's ID and list of links.\n     * Subclasses should override this to return any additional data that's\n     * needed, but they must include the results of\n     * BaseResource.protoype.parse as well.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parse(rsp) {\n        console.assert(this.rspNamespace,\n                       'rspNamespace must be defined on the resource model');\n\n        if (rsp.stat !== undefined) {\n            /*\n             * This resource payload is inside an envelope from an API\n             * call. It's not model construction data or from a list\n             * resource.\n             */\n            rsp = rsp[this.rspNamespace];\n        }\n\n        return _.defaults({\n            extraData: rsp.extra_data,\n            id: rsp.id,\n            links: rsp.links,\n            loaded: true\n        }, this.parseResourceData(rsp));\n    },\n\n    /*\n     * Parse the resource data from a payload.\n     *\n     * By default, this will make use of attrToJsonMap and any\n     * jsonDeserializers to construct a resulting set of attributes.\n     *\n     * This can be overridden by subclasses.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parseResourceData(rsp) {\n        const attrs = {};\n\n        for (let attrName of this.deserializedAttrs) {\n            const deserializer = this.deserializers[attrName];\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            let value = rsp[jsonField];\n\n            if (deserializer) {\n                value = deserializer.call(this, value);\n            }\n\n            if (value !== undefined) {\n                attrs[attrName] = value;\n            }\n        }\n\n        return attrs;\n    },\n\n    /**\n     * Serialize and return object data for the purpose of saving.\n     *\n     * When saving to the server, the only data that will be sent in the\n     * API PUT/POST call will be the data returned from toJSON().\n     *\n     * This will build the list based on the serializedAttrs, serializers,\n     * and attrToJsonMap properties.\n     *\n     * Subclasses can override this to create custom serialization behavior.\n     *\n     * Returns:\n     *     object:\n     *     The serialized data.\n     */\n    toJSON() {\n        const serializerState = {\n            isNew: this.isNew(),\n            loaded: this.get('loaded')\n        };\n        const data = {};\n\n        for (let attrName of this.serializedAttrs) {\n            const serializer = this.serializers[attrName];\n            let value = this.get(attrName);\n\n            if (serializer) {\n                value = serializer.call(this, value, serializerState);\n            }\n\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            data[jsonField] = value;\n        }\n\n        if (this.supportsExtraData) {\n            _.extend(data, this.extraData.toJSON());\n        }\n\n        return data;\n    },\n\n    /**\n     * Handle all AJAX communication for the model and its subclasses.\n     *\n     * Backbone.js will internally call the model's sync function to\n     * communicate with the server, which usually uses Backbone.sync.\n     *\n     * We wrap this to convert the data to encoded form data (instead\n     * of Backbone's default JSON payload).\n     *\n     * We also parse the error response from Review Board so we can provide\n     * a more meaningful error callback.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (Backbone.Model):\n     *         The model to sync.\n     *\n     *     options (object):\n     *         Options for the operation.\n     *\n     * Option Args:\n     *     data (object):\n     *         Optional payload data to include.\n     *\n     *     form (jQuery):\n     *         Optional form to be submitted.\n     *\n     *     attrs (Array or object):\n     *         Either a list of the model attributes to sync, or a set of\n     *         key/value pairs to use instead of the model attributes.\n     */\n    sync(method, model, options={}) {\n        let data;\n        let contentType;\n\n        if (method === 'read') {\n            data = options.data || {};\n\n            const extraQueryArgs = _.result(this, 'extraQueryArgs', {});\n\n            if (!_.isEmpty(extraQueryArgs)) {\n                data = _.extend({}, extraQueryArgs, data);\n            }\n        } else {\n            if (options.form) {\n                data = null;\n            } else if (options.attrs && !_.isArray(options.attrs)) {\n                data = options.attrs;\n            } else {\n                data = model.toJSON(options);\n\n                if (options.attrs) {\n                    data = _.pick(\n                        data,\n                        options.attrs.map(attr => this.attrToJsonMap[attr]\n                                                  || attr));\n                }\n            }\n\n            contentType = 'application/x-www-form-urlencoded';\n        }\n\n        const syncOptions = _.defaults({}, options, {\n            /* Use form data instead of a JSON payload. */\n            contentType: contentType,\n            data: data,\n            processData: true\n        });\n\n        if (!options.form && this.expandedFields.length > 0) {\n            syncOptions.data.expand = this.expandedFields.join(',');\n        }\n\n        syncOptions.error = xhr => {\n            RB.storeAPIError(xhr);\n\n            const rsp = xhr.errorPayload;\n\n            if (rsp && _.has(rsp, this.rspNamespace)) {\n                /*\n                 * The response contains the current version of the object,\n                 * which we want to preserve, in case it did any partial\n                 * updating of data.\n                 */\n                this.set(this.parse(rsp));\n            }\n\n            if (_.isFunction(options.error)) {\n                options.error(xhr);\n            }\n        };\n\n        return Backbone.sync.call(this, method, model, syncOptions);\n    },\n\n    /**\n     * Perform validation on the attributes of the resource.\n     *\n     * By default, this validates the extraData field, if provided.\n     *\n     * Args:\n     *     attrs (object):\n     *         The attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string or ``undefined``.\n     */\n    validate(attrs) {\n        if (this.supportsExtraData && attrs.extraData !== undefined) {\n            const strings = RB.BaseResource.strings;\n\n            if (!_.isObject(attrs.extraData)) {\n                return strings.INVALID_EXTRADATA_TYPE;\n            }\n\n            for (let [key, value] of Object.entries(attrs.extraData)) {\n                if (!_.isNull(value) &&\n                    (!_.isNumber(value) || _.isNaN(value)) &&\n                    !_.isBoolean(value) &&\n                    !_.isString(value)) {\n                    return strings.INVALID_EXTRADATA_VALUE_TYPE\n                        .replace('{key}', key);\n                }\n            }\n        }\n    }\n}, {\n    strings: {\n        UNSET_PARENT_OBJECT: 'parentObject must be set',\n        INVALID_EXTRADATA_TYPE:\n            'extraData must be an object or undefined',\n        INVALID_EXTRADATA_VALUE_TYPE:\n            'extraData.{key} must be null, a number, boolean, or string'\n    }\n});\n\n\n_.extend(RB.BaseResource.prototype, RB.ExtraDataMixin);\n"],"mappings":"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"}