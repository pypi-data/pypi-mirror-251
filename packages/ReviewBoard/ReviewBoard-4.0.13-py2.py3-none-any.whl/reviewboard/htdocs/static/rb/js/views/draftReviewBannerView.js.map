{"version":3,"file":"draftReviewBannerView.js","names":["RB","DraftReviewBannerView","Backbone","View","extend","events","initialize","options","render","_$buttons","$","_$banner","model","listenTo","prop","errorText","alert","_publishButton","SplitButtonView","el","document","getElementById","text","gettext","ariaMenuLabel","click","_onPublishClicked","bind","id","alternatives","publishToOwnerOnly","publishAndArchive","$el","show","addClass","height","outerHeight","scrollManager","markForUpdate","removeClass","css","maxHeight","scrollYOffset","markUpdated","hide","_","delay","hideAndReload","defer","window","location","get","getHeight","remove","_super","call","_onEditReviewClicked","ReviewDialogView","create","review","reviewRequestEditor","arguments","length","undefined","set","publish","attrs","_onDiscardClicked","modalBox","title","buttons","val","destroy","instance"],"sources":["draftReviewBannerView.es6.js"],"sourcesContent":["/**\n * A banner that represents a pending draft review.\n *\n * The banner displays at the top of the page and provides buttons for\n * editing the review, publishing, and discarding.\n *\n * The banner is a singleton. There's only ever one at a time.\n */\nRB.DraftReviewBannerView = Backbone.View.extend({\n    events: {\n        'click #review-banner-edit': '_onEditReviewClicked',\n        'click #review-banner-discard': '_onDiscardClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The review request editor.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DraftReviewBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$buttons = this.$('input');\n        this._$banner = this.$('.banner');\n\n        const model = this.model;\n        this.listenTo(model, 'saving destroying',\n                      () => this._$buttons.prop('disabled', true));\n        this.listenTo(model, 'saved destroyed',\n                      () => this._$buttons.prop('disabled', false));\n        this.listenTo(model, 'publishError', errorText => alert(errorText));\n\n        /*\n         * Just a note about how we're instantiating the button below, which\n         * is important for future work on this banner.\n         *\n         * When a reviewable page is served up, it always contains the HTML\n         * for this banner (possibly hidden), so that the page doesn't jump\n         * during rendering. This will contain (amongst other things) a\n         * bare-minimum implementation of the Publish button (just enough to,\n         * again, not cause a jump).\n         *\n         * When we instantiate the RB.SplitButtonView, its parent\n         * RB.MenuButtonView will will replace the Publish button's HTML with\n         * a more fully-defined version.\n         *\n         * The trouble comes from passing in an explicit element while running\n         * unit tests, which do not contain the HTML for this banner anywhere.\n         * If we attempt to fetch the button using jQuery, and pass the\n         * jQuery-wrapped element to the view below, then we'll end up with\n         * an empty jQuery element. All HTML building and lookups will fail,\n         * resulting in asserts in RB.MenuButtonView.\n         *\n         * So we have to make sure we're passing either a valid DOM element\n         * or a falsy valuy (in which case the button will just make its own\n         * DOM element).\n         */\n        this._publishButton = new RB.SplitButtonView({\n            el: document.getElementById('review-banner-publish-container'),\n            text: gettext('Publish Review'),\n            ariaMenuLabel: gettext('More publishing options'),\n            click: this._onPublishClicked.bind(this),\n            id: 'review-banner-publish',\n            alternatives: [\n                {\n                    text: gettext('... and only e-mail the owner'),\n                    click: () => this._onPublishClicked({\n                        publishToOwnerOnly: true,\n                    }),\n                    id: 'review-banner-publish-submitter-only',\n                },\n                {\n                    text: gettext('... and archive the review request'),\n                    click: () => this._onPublishClicked({\n                        publishAndArchive: true,\n                    }),\n                    id: 'review-banner-publish-and-archive',\n                },\n            ],\n\n        });\n\n        this._publishButton.render();\n\n        if (!this.$el.prop('hidden')) {\n            this.show();\n        }\n\n        this.$el.addClass('ui-ready');\n\n        return this;\n    },\n\n    /*\n     * Show the banner.\n     *\n     * The banner will appear to slide down from the top of the page.\n     */\n    show() {\n        const height = this._$banner.outerHeight();\n\n        RB.scrollManager.markForUpdate(this.$el);\n\n        this.$el\n            .prop('hidden', false)\n            .removeClass('hidden')\n            .css({\n                maxHeight: height,\n                height: height,\n            });\n        RB.scrollManager.scrollYOffset += height;\n        RB.scrollManager.markUpdated(this.$el);\n    },\n\n    /*\n     * Hide the banner.\n     *\n     * The banner will slide up to the top of the page.\n     */\n    hide() {\n        RB.scrollManager.markForUpdate(this.$el);\n\n        const height = this._$banner.outerHeight();\n\n        this.$el\n            .prop('hidden', true)\n            .addClass('hidden')\n            .css('max-height', '');\n\n        /*\n         * If we set the height immediately, the browser will appear to not\n         * animate, since it can't transition heights (only max-heights). So\n         * we delay for a short period after we know the transition will have\n         * completed.\n         */\n        _.delay(\n            () => {\n                this.$el.css('height', '');\n                RB.scrollManager.markUpdated(this.$el);\n                RB.scrollManager.scrollYOffset -= height;\n            },\n            500);\n    },\n\n    /**\n     * Hide the banner and reloads the page.\n     *\n     * XXX Remove this function when we make the pages more dynamic.\n     */\n    hideAndReload() {\n        this.hide();\n\n        /*\n         * hideAndReload might have been called from within a $.funcQueue.\n         * With Firefox, later async functions that are queued in the\n         * $.funcQueue will not run when we change window.location, which\n         * means that we might miss out on some teardown that was\n         * scheduled. We defer changing the location until the next tick\n         * of the event loop to let any teardown occur.\n         */\n        _.defer(() => {\n            window.location = this.model.get('parentObject').get('reviewURL');\n        });\n    },\n\n    /**\n     * Return the height of the banner.\n     *\n     * Returns:\n     *     number:\n     *     The height of the banner.\n     */\n    getHeight() {\n        return this._$banner.outerHeight();\n    },\n\n    /**\n     * Remove the banner from the page.\n     */\n    remove() {\n        if (this._publishButton) {\n            this._publishButton.remove();\n        }\n\n        _super(this).remove.call(this);\n    },\n\n    /**\n     * Handler for the Edit Review button.\n     *\n     * Displays the review editor dialog.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onEditReviewClicked() {\n        RB.ReviewDialogView.create({\n            review: this.model,\n            reviewRequestEditor: this.options.reviewRequestEditor,\n        });\n\n        return false;\n    },\n\n    /**\n     * Handler for the Publish button.\n     *\n     * Publishes the review.\n     *\n     * Args:\n     *     options (object):\n     *         Options that determine special cases for submission.\n     *\n     * Option Args:\n     *     publishToOwnerOnly (boolean):\n     *         Whether or not we should only notify the submitter of the review.\n     *\n     *     publishAndArchive (boolean):\n     *         Whether or not we should archive the review after it is published.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onPublishClicked(options={}) {\n        if (options.publishToOwnerOnly) {\n            this.model.set('publishToOwnerOnly', true);\n        }\n\n        if (options.publishAndArchive) {\n            this.model.set('publishAndArchive', true);\n        }\n\n        this.model.publish({\n            attrs: ['public', 'publishToOwnerOnly', 'publishAndArchive'],\n        });\n\n        return false;\n    },\n\n    /**\n     * Handler for the Discard button.\n     *\n     * Prompts the user to confirm that they want the review discarded.\n     * If they confirm, the review will be discarded.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onDiscardClicked() {\n        $('<p/>')\n            .text(gettext('If you discard this review, all related comments will be permanently deleted.'))\n            .modalBox({\n                title: gettext('Are you sure you want to discard this review?'),\n                buttons: [\n                    $('<input type=\"button\">')\n                        .val(gettext('Cancel')),\n                    $('<input type=\"button\">')\n                        .val(gettext('Discard'))\n                        .click(() => this.model.destroy()),\n                ],\n            });\n\n        return false;\n    },\n}, {\n    instance: null,\n\n    /**\n     * Create the draft review banner singleton.\n     *\n     * Returns:\n     *     RB.DraftReviewBannerView:\n     *     The banner view.\n     */\n    create(options) {\n        if (!this.instance) {\n            this.instance = new RB.DraftReviewBannerView(options);\n            this.instance.render();\n        }\n\n        return this.instance;\n    },\n});\n"],"mappings":"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"}