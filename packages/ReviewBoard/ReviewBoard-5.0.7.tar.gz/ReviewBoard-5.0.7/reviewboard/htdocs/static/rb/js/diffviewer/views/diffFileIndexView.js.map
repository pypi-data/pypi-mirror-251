{"version":3,"file":"diffFileIndexView.js","names":["RB","DiffFileIndexView","Backbone","View","extend","chunkTemplate","_","template","_itemTemplate","events","initialize","options","_$items","_$itemsTable","collection","listenTo","update","render","$el","empty","$","appendTo","each","file","append","defaults","binaryFileText","gettext","deletedFileText","wasText","interpolate","get","attributes","addDiff","index","diffReviewableView","$item","removeClass","hasClass","_renderDiffError","_renderDiffEntry","find","html","attr","$table","fileDeleted","fileAdded","linesEqual","data","numDeletes","numInserts","numReplaces","tooltip","tooltipParts","chunksList","children","i","chunk","numRows","rows","length","$chunk","push","chunkID","id","substr","className","join","iconView","DiffComplexityIconView","totalLines","$fileIcon","ngettext","toggleClass","_onAnchorClicked","e","preventDefault","stopPropagation","trigger","target","href","split"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffFileIndexView.es6.js"],"sourcesContent":["/**\n * Displays the file index for the diffs on a page.\n *\n * The file page lists the names of the files, as well as a little graph\n * icon showing the relative size and complexity of a file, a list of chunks\n * (and their types), and the number of lines added and removed.\n */\nRB.DiffFileIndexView = Backbone.View.extend({\n    chunkTemplate: _.template(\n        '<a href=\"#<%= chunkID %>\" class=\"<%= className %>\"> </a>'\n    ),\n\n    _itemTemplate: _.template(dedent`\n        <tr class=\"loading\n         <% if (newfile) { %>new-file<% } %>\n         <% if (binary) { %>binary-file<% } %>\n         <% if (deleted) { %>deleted-file<% } %>\n         <% if (destFilename !== depotFilename) { %>renamed-file<% } %>\n         \">\n         <td class=\"diff-file-icon\">\n          <span class=\"fa fa-spinner fa-pulse\"></span>\n         </td>\n         <td class=\"diff-file-info\">\n          <a href=\"#<%- index %>\"><%- destFilename %></a>\n          <% if (destFilename !== depotFilename) { %>\n          <span class=\"diff-file-rename\"><%- wasText %></span>\n          <% } %>\n         </td>\n         <td class=\"diff-chunks-cell\">\n          <% if (binary) { %>\n           <%- binaryFileText %>\n          <% } else if (deleted) { %>\n           <%- deletedFileText %>\n          <% } else { %>\n           <div class=\"diff-chunks\"></div>\n          <% } %>\n         </td>\n        </tr>\n    `),\n\n    events: {\n        'click a': '_onAnchorClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     collection (RB.DiffFileCollection):\n     *         The collection containing the files.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$items = null;\n        this._$itemsTable = null;\n\n        this.collection = this.options.collection;\n        this.listenTo(this.collection, 'reset update', this.update);\n    },\n\n    /**\n     * Render the view to the page.\n     *\n     * Returns:\n     *     RB.DiffFileIndexView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.empty();\n\n        this._$itemsTable = $('<table/>').appendTo(this.$el);\n        this._$items = this.$('tr');\n\n        // Add the files from the collection\n        this.update();\n\n        return this;\n    },\n\n    /**\n     * Update the list of files in the index view.\n     */\n    update() {\n        this._$itemsTable.empty();\n\n        this.collection.each(file => {\n            this._$itemsTable.append(this._itemTemplate(\n                _.defaults({\n                    binaryFileText: gettext('Binary file'),\n                    deletedFileText: gettext('Deleted'),\n                    wasText: interpolate(gettext('Was %s'),\n                                         [file.get('depotFilename')]),\n                }, file.attributes)\n            ));\n        });\n\n        this._$items = this.$('tr');\n    },\n\n    /**\n     * Add a loaded diff to the index.\n     *\n     * The reserved entry for the diff will be populated with a link to the\n     * diff, and information about the diff.\n     *\n     * Args:\n     *     index (number):\n     *         The array index at which to add the new diff.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file being added.\n     */\n    addDiff(index, diffReviewableView) {\n        const $item = $(this._$items[index])\n            .removeClass('loading');\n\n        if (diffReviewableView.$el.hasClass('diff-error')) {\n            this._renderDiffError($item);\n        } else {\n            this._renderDiffEntry($item, diffReviewableView);\n        }\n    },\n\n    /**\n     * Render a diff loading error.\n     *\n     * An error icon will be displayed in place of the typical complexity\n     * icon.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which encountered the error.\n     */\n    _renderDiffError($item) {\n        $item.find('.diff-file-icon')\n            .html('<div class=\"rb-icon rb-icon-warning\" />')\n            .attr('title',\n                  gettext('There was an error loading this diff. See the details below.'));\n    },\n\n    /**\n     * Render the display of a loaded diff.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which was loaded.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file which was loaded.\n     */\n    _renderDiffEntry($item, diffReviewableView) {\n        const $table = diffReviewableView.$el;\n        const fileDeleted = $item.hasClass('deleted-file');\n        const fileAdded = $item.hasClass('new-file');\n        const linesEqual = $table.data('lines-equal');\n        let numDeletes = 0;\n        let numInserts = 0;\n        let numReplaces = 0;\n        let tooltip = '';\n        const tooltipParts = [];\n        const chunksList = [];\n\n        if (fileAdded) {\n            numInserts = 1;\n        } else if (fileDeleted) {\n            numDeletes = 1;\n        } else if ($item.hasClass('binary-file')) {\n            numReplaces = 1;\n        } else {\n            $table.children('tbody').each((i, chunk) => {\n                const numRows = chunk.rows.length;\n                const $chunk = $(chunk);\n\n                if ($chunk.hasClass('delete')) {\n                    numDeletes += numRows;\n                } else if ($chunk.hasClass('insert')) {\n                    numInserts += numRows;\n                } else if ($chunk.hasClass('replace')) {\n                    numReplaces += numRows;\n                } else {\n                    return;\n                }\n\n                chunksList.push(this.chunkTemplate({\n                    chunkID: chunk.id.substr(5),\n                    className: chunk.className,\n                }));\n            });\n\n            /* Add clickable blocks for each diff chunk. */\n            $item.find('.diff-chunks').html(chunksList.join(''));\n        }\n\n        /* Render the complexity icon. */\n        const iconView = new RB.DiffComplexityIconView({\n            numInserts: numInserts,\n            numDeletes: numDeletes,\n            numReplaces: numReplaces,\n            totalLines: linesEqual + numDeletes + numInserts + numReplaces,\n        });\n\n        const $fileIcon = $item.find('.diff-file-icon');\n        $fileIcon\n            .empty()\n            .append(iconView.$el);\n\n        iconView.render();\n\n        /* Add tooltip for icon */\n        if (fileAdded) {\n            tooltip = gettext('New file');\n        } else if (fileDeleted) {\n            tooltip = gettext('Deleted file');\n        } else {\n            if (numInserts > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s new line', '%s new lines', numInserts),\n                    [numInserts]));\n            }\n\n            if (numReplaces > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line changed', '%s lines changed', numReplaces),\n                    [numReplaces]));\n            }\n\n            if (numDeletes > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line removed', '%s lines removed', numDeletes),\n                    [numDeletes]));\n            }\n\n            tooltip = tooltipParts.join(', ');\n        }\n\n        $fileIcon.attr('title', tooltip);\n\n        this.listenTo(\n            diffReviewableView,\n            'chunkDimmed chunkUndimmed',\n            chunkID => {\n                this.$(`a[href=\"#${chunkID}\"]`).toggleClass('dimmed');\n            });\n    },\n\n    /**\n     * Handler for when an anchor is clicked.\n     *\n     * Gets the name of the target and emits anchorClicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onAnchorClicked: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('anchorClicked', e.target.href.split('#')[1]);\n    },\n});\n"],"mappings":"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"}