{"version":3,"file":"diffReviewableView.js","names":["RB","DiffReviewableView","AbstractReviewableView","extend","tagName","commentBlockView","DiffCommentBlockView","commentsListName","events","initialize","prototype","call","_selector","TextCommentRowSelector","el","reviewableView","_hiddenCommentBlockViews","_visibleCommentBlockViews","_$filenameRow","_$revisionRow","_filenameReservedWidths","_colReservedWidths","_numColumns","_numFilenameColumns","_prevContentWidth","_prevFilenameWidth","_prevFullWidth","_$window","$","window","_$parent","$el","parent","on","_placeCommentBlockView","remove","render","_centered","CenteredElementManager","$thead","tHead","children","_","each","thumbnailEl","$thumbnail","id","data","$caption","find","reviewRequest","model","get","fileAttachment","createFileAttachment","hasClass","set","text","_precalculateContentWidths","_updateColumnSizes","toggleWhitespaceOnlyChunks","toggleClass","chunk","$chunk","dimming","$children","first","last","chunkID","split","trigger","siblings","addBack","toggle","createComment","beginLineNum","endLineNum","beginNode","endNode","prevBeginRowIndex","commentBlock","rowEls","getRowsForRange","beginRowEl","endRowEl","setRows","appendTo","$beginRow","cells","push","rowIndex","_placeHiddenCommentBlockViews","hiddenCommentBlockViews","i","length","_hideRemovedCommentBlockViews","visibleCommentBlockViews","is","sortBy","_updateCollapseButtonPos","updatePosition","_expandOrCollapse","$btn","expanding","chunkIndex","linesOfContext","html","getRenderedDiffFragment","$tbody","closest","tbodyID","$scrollAnchor","scrollAnchorID","exec","scrollOffsetTop","offset","top","scrollTop","prev","next","replaceWith","undefined","newEl","document","getElementById","setElements","Map","Array","map","$top","cellPadding","containerExtents","getExtents","$cells","querySelector","eq","outerWidth","$parent","fullWidth","width","contentWidth","filenameWidth","css","Math","ceil","updateLayout","_onDownloadLinkClicked","e","stopPropagation","_onFileHeaderClicked","preventDefault","_onMovedLineClicked","target","_onMouseUp","node","anchor","name","_onExpandChunkClicked","currentTarget","_onCollapseChunkClicked","_onShowDeletedClicked","_onToggleUnicodeCharsClicked","$button","ducsShown","addClass","removeClass"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffReviewableView.es6.js"],"sourcesContent":["/*\n * Handles reviews of the diff for a file.\n *\n * This provides commenting abilities for ranges of lines on a diff, as well\n * as showing existing comments, and handling other interaction around\n * per-file diffs.\n */\nRB.DiffReviewableView = RB.AbstractReviewableView.extend({\n    tagName: 'table',\n\n    commentBlockView: RB.DiffCommentBlockView,\n    commentsListName: 'diff_comments',\n\n    events: {\n        'click .download-link': '_onDownloadLinkClicked',\n        'click thead tr': '_onFileHeaderClicked',\n        'click .moved-to, .moved-from': '_onMovedLineClicked',\n        'click .diff-collapse-btn': '_onCollapseChunkClicked',\n        'click .diff-expand-btn': '_onExpandChunkClicked',\n        'click .show-deleted-content-action': '_onShowDeletedClicked',\n        'click .rb-o-toggle-ducs': '_onToggleUnicodeCharsClicked',\n        'mouseup': '_onMouseUp'\n    },\n\n    /**\n     * Initialize the reviewable for a file's diff.\n     */\n    initialize() {\n        RB.AbstractReviewableView.prototype.initialize.call(this);\n\n        this._selector = new RB.TextCommentRowSelector({\n            el: this.el,\n            reviewableView: this,\n        });\n\n        this._hiddenCommentBlockViews = [];\n        this._visibleCommentBlockViews = [];\n\n        /* State for keeping consistent column widths for diff content. */\n        this._$filenameRow = null;\n        this._$revisionRow = null;\n        this._filenameReservedWidths = 0;\n        this._colReservedWidths = 0;\n        this._numColumns = 0;\n        this._numFilenameColumns = 0;\n        this._prevContentWidth = null;\n        this._prevFilenameWidth = null;\n        this._prevFullWidth = null;\n\n        /*\n         * Wrap this only once so we don't have to re-wrap every time\n         * the page scrolls.\n         */\n        this._$window = $(window);\n        this._$parent = this.$el.parent();\n\n        this.on('commentBlockViewAdded', this._placeCommentBlockView, this);\n    },\n\n    /**\n     * Remove the reviewable from the DOM.\n     */\n    remove() {\n        RB.AbstractReviewableView.prototype.remove.call(this);\n\n        this._selector.remove();\n    },\n\n    /**\n     * Render the reviewable.\n     *\n     * Returns:\n     *     RB.DiffReviewableView:\n     *     This object, for chaining.\n     */\n    render() {\n        RB.AbstractReviewableView.prototype.render.call(this);\n\n        this._centered = new RB.CenteredElementManager();\n\n        const $thead = $(this.el.tHead);\n\n        this._$revisionRow = $thead.children('.revision-row');\n        this._$filenameRow = $thead.children('.filename-row');\n\n        this._selector.render();\n\n        _.each(this.$el.children('tbody.binary'), thumbnailEl => {\n            const $thumbnail = $(thumbnailEl);\n            const id = $thumbnail.data('file-id');\n            const $caption = $thumbnail.find('.file-caption .edit');\n            const reviewRequest = this.model.get('reviewRequest');\n            const fileAttachment = reviewRequest.createFileAttachment({\n                id: id,\n            });\n\n            if (!$caption.hasClass('empty-caption')) {\n                fileAttachment.set('caption', $caption.text());\n            }\n        });\n\n        this._precalculateContentWidths();\n        this._updateColumnSizes();\n\n        return this;\n    },\n\n    /*\n     * Toggles the display of whitespace-only chunks.\n     */\n    toggleWhitespaceOnlyChunks() {\n        this.$('tbody tr.whitespace-line').toggleClass('dimmed');\n\n        _.each(this.$el.children('tbody.whitespace-chunk'), chunk => {\n            const $chunk = $(chunk);\n            const dimming = $chunk.hasClass('replace');\n\n            $chunk.toggleClass('replace');\n\n            const $children = $chunk.children();\n            $children.first().toggleClass('first');\n            $children.last().toggleClass('last');\n\n            const chunkID = chunk.id.split('chunk')[1];\n\n            if (dimming) {\n                this.trigger('chunkDimmed', chunkID);\n            } else {\n                this.trigger('chunkUndimmed', chunkID);\n            }\n        });\n\n        /*\n         * Swaps the visibility of the \"This file has whitespace changes\"\n         * tbody and the chunk siblings.\n         */\n        this.$el.children('tbody.whitespace-file')\n            .siblings('tbody')\n            .addBack()\n                .toggle();\n    },\n\n   /**\n    * Create a comment for a chunk of a diff.\n    *\n    * Args:\n    *     beginLineNum (number)\n    *         The first line of the diff to comment on.\n    *\n    *     endLineNum (number):\n    *         The last line of the diff to comment on.\n    *\n    *     beginNode (Element):\n    *         The row corresponding to the first line of the diff being\n    *         commented upon.\n    *\n    *     endNode (Element):\n    *         The row corresponding to the last line of the diff being\n    *         commented upon.\n    */\n    createComment(beginLineNum, endLineNum, beginNode, endNode) {\n        this._selector.createComment(beginLineNum, endLineNum, beginNode,\n                                     endNode);\n    },\n\n    /**\n     * Place a CommentBlockView on the page.\n     *\n     * This will compute the row range for the CommentBlockView and then\n     * render it to the screen, if the row range exists.\n     *\n     * If it doesn't exist yet, the CommentBlockView will be stored in the\n     * list of hidden comment blocks for later rendering.\n     *\n     * Args:\n     *     commentBlockView (RB.DiffCommentBlockView):\n     *         The comment block view to place.\n     *\n     *     prevBeginRowIndex (number):\n     *         The row index to begin at. This places a limit on the rows\n     *         searched.\n     */\n    _placeCommentBlockView(commentBlockView, prevBeginRowIndex) {\n        const commentBlock = commentBlockView.model;\n\n        const rowEls = this._selector.getRowsForRange(\n            commentBlock.get('beginLineNum'),\n            commentBlock.get('endLineNum'),\n            prevBeginRowIndex);\n\n        if (rowEls !== null) {\n            const beginRowEl = rowEls[0];\n            const endRowEl = rowEls[1];\n\n            /*\n             * Note that endRow might be null if it exists in a collapsed\n             * region, so we can get away with just using beginRow if we\n             * need to.\n             */\n            commentBlockView.setRows($(beginRowEl), $(endRowEl || beginRowEl));\n            commentBlockView.$el.appendTo(\n                commentBlockView.$beginRow[0].cells[0]);\n            this._visibleCommentBlockViews.push(commentBlockView);\n\n            return beginRowEl.rowIndex;\n        } else {\n            this._hiddenCommentBlockViews.push(commentBlockView);\n            return prevBeginRowIndex;\n        }\n    },\n\n    /**\n     * Place any hidden comment blocks onto the diff viewer.\n     */\n    _placeHiddenCommentBlockViews() {\n        const hiddenCommentBlockViews = this._hiddenCommentBlockViews;\n        this._hiddenCommentBlockViews = [];\n        let prevBeginRowIndex;\n\n        for (let i = 0; i < hiddenCommentBlockViews.length; i++) {\n            prevBeginRowIndex = this._placeCommentBlockView(\n                hiddenCommentBlockViews[i], prevBeginRowIndex);\n        }\n    },\n\n    /**\n     * Mark any comment block views not visible as hidden.\n     */\n    _hideRemovedCommentBlockViews() {\n        const visibleCommentBlockViews = this._visibleCommentBlockViews;\n        this._visibleCommentBlockViews = [];\n\n        for (let i = 0; i < visibleCommentBlockViews.length; i++) {\n            const commentBlockView = visibleCommentBlockViews[i];\n\n            if (commentBlockView.$el.is(':visible')) {\n                this._visibleCommentBlockViews.push(commentBlockView);\n            } else {\n                this._hiddenCommentBlockViews.push(commentBlockView);\n            }\n        }\n\n        /* Sort these by line number so we can efficiently place them later. */\n        _.sortBy(\n            this._hiddenCommentBlockViews,\n            commentBlockView => commentBlockView.model.get('beginLineNum'));\n    },\n\n    /**\n     * Update the positions of the collapse buttons.\n     *\n     * This will attempt to position the collapse buttons such that they're\n     * in the center of the exposed part of the expanded chunk in the current\n     * viewport.\n     *\n     * As the user scrolls, they'll be able to see the button scroll along\n     * with them. It will not, however, leave the confines of the expanded\n     * chunk.\n     */\n    _updateCollapseButtonPos() {\n        this._centered.updatePosition();\n    },\n\n    /**\n     * Expands or collapses a chunk in a diff.\n     *\n     * This is called internally when an expand or collapse button is pressed\n     * for a chunk. It will fetch the diff and render it, displaying any\n     * contained comments, and setting up the resulting expand or collapse\n     * buttons.\n     *\n     * Args:\n     *     $btn (jQuery):\n     *         The expand/collapse button that was clicked.\n     *\n     *     expanding (boolean):\n     *          Whether or not we are expanding.\n     */\n    async _expandOrCollapse($btn, expanding) {\n        const chunkIndex = $btn.data('chunk-index');\n        const linesOfContext = $btn.data('lines-of-context');\n\n        const html = await this.model.getRenderedDiffFragment({\n            chunkIndex: chunkIndex,\n            linesOfContext: linesOfContext,\n        });\n\n        const $tbody = $btn.closest('tbody');\n        let tbodyID;\n        let $scrollAnchor;\n        let scrollAnchorID;\n\n        /*\n         * We want to position the new chunk or collapse button at\n         * roughly the same position as the chunk or collapse button\n         * that the user pressed. Figure out what it is exactly and what\n         * the scroll offsets are so we can later reposition the scroll\n         * offset.\n         */\n        if (expanding) {\n            $scrollAnchor = this.$el;\n            scrollAnchorID = $scrollAnchor[0].id;\n\n            if (linesOfContext === 0) {\n                /*\n                 * We've expanded the entire chunk, so we'll be looking\n                 * for the collapse button.\n                 */\n                tbodyID = /collapsed-(.*)/.exec(scrollAnchorID)[1];\n            } else {\n                tbodyID = scrollAnchorID;\n            }\n        } else {\n            $scrollAnchor = $btn;\n        }\n\n        const scrollOffsetTop = ($scrollAnchor.offset().top -\n                                 this._$window.scrollTop());\n\n        /*\n         * If we already expanded, we may have one or two loaded chunks\n         * adjacent to the header. We want to remove those, since we'll\n         * be generating new ones that include that data.\n         */\n        $tbody.prev('.diff-header, .loaded').remove();\n        $tbody.next('.diff-header, .loaded').remove();\n\n        /*\n         * Replace the header with the new HTML. This may also include a\n         * new header.\n         */\n        $tbody.replaceWith(html);\n\n        if (expanding) {\n            this._placeHiddenCommentBlockViews();\n        } else {\n            this._hideRemovedCommentBlockViews();\n        }\n\n        /*\n         * Get the new tbody for the header, if any, and try to center.\n         */\n        if (tbodyID !== undefined) {\n            const newEl = document.getElementById(tbodyID);\n\n            if (newEl !== null) {\n                $scrollAnchor = $(newEl);\n\n                this._$window.scrollTop(\n                    $scrollAnchor.offset().top - scrollOffsetTop);\n            }\n        }\n\n        /* Recompute the set of buttons for later use. */\n        this._centered.setElements(new Map(\n            Array.prototype.map.call(\n                this.$('.diff-collapse-btn'),\n                el => [el, {\n                    $top: $(el).closest('tbody'),\n                }])\n        ));\n        this._updateCollapseButtonPos();\n\n        /*\n         * We'll need to update the column sizes, but first, we need\n         * to re-calculate things like the line widths, since they\n         * may be longer after expanding.\n         */\n        this._precalculateContentWidths();\n        this._updateColumnSizes();\n\n        this.trigger('chunkExpansionChanged');\n    },\n\n    /**\n     * Pre-calculate the widths and other state needed for column widths.\n     *\n     * This will store the number of columns and the reserved space that\n     * needs to be subtracted from the container width, to be used in later\n     * calculating the desired widths of the content areas.\n     */\n    _precalculateContentWidths() {\n        let cellPadding = 0;\n\n        if (!this.$el.hasClass('diff-error') && this._$revisionRow.length > 0) {\n            const containerExtents = this.$el.getExtents('p', 'lr');\n\n            /* Calculate the widths and state of the diff columns. */\n            let $cells = $(this._$revisionRow[0].cells);\n            cellPadding = $(this.el.querySelector('pre'))\n                .parent().addBack()\n                .getExtents('p', 'lr');\n\n            this._colReservedWidths = $cells.eq(0).outerWidth() + cellPadding +\n                                      containerExtents;\n            this._numColumns = $cells.length;\n\n            if (this._numColumns === 4) {\n                /* There's a left-hand side and a right-hand side. */\n                this._colReservedWidths += $cells.eq(2).outerWidth() +\n                                           cellPadding;\n            }\n\n            /* Calculate the widths and state of the filename columns. */\n            $cells = $(this._$filenameRow[0].cells);\n            this._numFilenameColumns = $cells.length;\n            this._filenameReservedWidths = containerExtents +\n                                           2 * this._numFilenameColumns;\n        } else {\n            this._colReservedWidths = 0;\n            this._filenameReservedWidths = 0;\n            this._numColumns = 0;\n            this._numFilenameColumns = 0;\n        }\n    },\n\n    /*\n     * Update the sizes of the diff content columns.\n     *\n     * This will figure out the minimum and maximum widths of the columns\n     * and set them in a stylesheet, ensuring that lines will constrain to\n     * those sizes (force-wrapping if necessary) without overflowing or\n     * causing the other column to shrink too small.\n     */\n    _updateColumnSizes() {\n        if (this.$el.hasClass('diff-error')) {\n            return;\n        }\n\n        let $parent = this._$parent;\n\n        if (!$parent.is(':visible')) {\n            /*\n             * We're still in diff loading mode, and the parent is hidden. We\n             * can get the width we need from the parent. It should be the same,\n             * or at least close enough for the first stab at column sizes.\n             */\n            $parent = $parent.parent();\n        }\n\n        const fullWidth = $parent.width();\n\n        if (fullWidth === this._prevFullWidth) {\n            return;\n        }\n\n        this._prevFullWidth = fullWidth;\n\n        /* Calculate the desired widths of the diff columns. */\n        let contentWidth = fullWidth - this._colReservedWidths;\n\n        if (this._numColumns === 4) {\n            contentWidth /= 2;\n        }\n\n        /* Calculate the desired widths of the filename columns. */\n        let filenameWidth = fullWidth - this._filenameReservedWidths;\n\n        if (this._numFilenameColumns === 2) {\n            filenameWidth /= 2;\n        }\n\n        this.$el.width(fullWidth);\n\n        /* Update the minimum and maximum widths, if they've changed. */\n        if (filenameWidth !== this._prevFilenameWidth) {\n            this._$filenameRow.children('th').css({\n                'min-width': Math.ceil(filenameWidth * 0.66),\n                'max-width': Math.ceil(filenameWidth)\n            });\n            this._prevFilenameWidth = filenameWidth;\n        }\n\n        if (contentWidth !== this._prevContentWidth) {\n            this._$revisionRow.children('.revision-col').css({\n                'min-width': Math.ceil(contentWidth * 0.66),\n                'max-width': Math.ceil(contentWidth)\n            });\n            this._prevContentWidth = contentWidth;\n        }\n    },\n\n    /**\n     * Handle a window resize.\n     *\n     * This will update the sizes of the diff columns, and the location of the\n     * collapse buttons (if one or more are visible).\n     */\n    updateLayout() {\n        this._updateColumnSizes();\n        this._updateCollapseButtonPos();\n    },\n\n    /**\n     * Handle a file download link being clicked.\n     *\n     * Prevents the event from bubbling up and being caught by\n     * _onFileHeaderClicked.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onDownloadLinkClicked(e) {\n        e.stopPropagation();\n    },\n\n    /**\n     * Handle the file header being clicked.\n     *\n     * This will highlight the file header.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onFileHeaderClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('fileClicked');\n    },\n\n    /**\n     * Handle a \"Moved to/from\" flag being clicked.\n     *\n     * This will scroll to the location on the other end of the move,\n     * and briefly highlight the line.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onMovedLineClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('moveFlagClicked', $(e.target).data('line'));\n    },\n\n    /**\n     * Handle a mouse up event.\n     *\n     * This will select any chunk that was clicked, highlight the chunk,\n     * and ensure it's cleanly scrolled into view.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``mouseup`` event that triggered this handler.\n     */\n    _onMouseUp(e) {\n        const node = e.target;\n\n        /*\n         * The user clicked somewhere else. Move the anchor point here\n         * if it's part of the diff.\n         */\n        const $tbody = $(node).closest('tbody');\n\n        if ($tbody.length > 0 &&\n            ($tbody.hasClass('delete') ||\n             $tbody.hasClass('insert') ||\n             $tbody.hasClass('replace'))) {\n            const anchor = $tbody[0].querySelector('a');\n\n            if (anchor) {\n                this.trigger('chunkClicked', anchor.name);\n            }\n        }\n    },\n\n    /**\n     * Handle an expand chunk button being clicked.\n     *\n     * The expand buttons will expand a collapsed chunk, either entirely\n     * or by certain amounts. It will fetch the new chunk contents and\n     * inject it into the diff viewer.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onExpandChunkClicked(e) {\n        e.preventDefault();\n\n        this._expandOrCollapse($(e.currentTarget), true);\n    },\n\n    /**\n     * Handle a collapse chunk button being clicked.\n     *\n     * The fully collapsed representation of that chunk will be fetched\n     * and put into the diff viewer in place of the expanded chunk.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onCollapseChunkClicked(e) {\n        e.preventDefault();\n\n        this._expandOrCollapse($(e.currentTarget), false);\n    },\n\n    /**\n     * Handler for when show content is clicked.\n     *\n     * This requeues the corresponding diff to show its deleted content.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onShowDeletedClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        /*\n         * Replace the current contents (\"This file was deleted ... \") with a\n         * spinner. This will be automatically replaced with the file contents\n         * once loaded from the server.\n         */\n        $(e.target).parent()\n            .html('<span class=\"fa fa-spinner fa-pulse\"></span>');\n\n        this.trigger('showDeletedClicked');\n    },\n\n    /**\n     * Handler for the suspicious characters toggle button.\n     *\n     * This will toggle the ``-hide-ducs`` CSS class on the main element, and\n     * toggle the show/hide text on the button that triggered this handler.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The ``click`` event that triggered this handler.\n     */\n    _onToggleUnicodeCharsClicked(e) {\n        const $el = this.$el;\n        const $button = $(e.target);\n        const ducsShown = !$el.hasClass('-hide-ducs');\n\n        if (ducsShown) {\n            $el.addClass('-hide-ducs');\n            $button.text($button.data('show-chars-label'));\n        } else {\n            $el.removeClass('-hide-ducs');\n            $button.text($button.data('hide-chars-label'));\n        }\n    },\n});\n"],"mappings":"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"}