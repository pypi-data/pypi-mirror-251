{"version":3,"file":"reviewReplyEditorView.js","names":["RB","ReviewRequestPage","ReviewReplyEditorView","Backbone","View","extend","commentTemplate","_","template","events","initialize","options","_$addCommentLink","_$draftComment","_$editor","_$commentsList","render","$","$draftComment","children","length","$time","find","$reviewText","model","set","commentID","data","text","html","timestamp","Date","attr","richText","hasClass","hasDraft","_createCommentEditor","listenTo","reviewRequest","get","formatText","newText","bugTrackerURL","on","fadeOut","remove","fadeIn","_onPublished","openCommentEditor","_makeCommentElement","inlineEditor","reviewRequestEditor","cls","editIconClass","notifyUnchangedCompletion","multiline","hasRawValue","rawValue","TextEditorView","getInlineEditorOptions","removeAttr","beginEdit","incr","complete","e","value","textEditor","getFromInlineEditor","decr","save","cancel","resetStateIfEmpty","hide","userSession","UserSession","instance","now","moment","utcOffset","$el","anchorName","id","uniqueId","userPageURL","fullName","avatarHTML","getAvatarHTML","isDraft","timestampISO","format","hour","user_infobox","end","timesince","Djblets","enableRetinaImages","appendTo","_onAddCommentClicked","preventDefault","stopPropagation","contextType","replaceWith"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/reviewReplyEditorView.es6.js"],"sourcesContent":["/**\n * Handles editing a reply to a comment in a review.\n *\n * This will handle the \"New Comment\" link and the draft banners for the\n * review.\n */\nRB.ReviewRequestPage.ReviewReplyEditorView = Backbone.View.extend({\n    commentTemplate: _.template(dedent`\n        <li <% if (isDraft) { %>class=\"draft\"<% } %>\n            <% if (commentID) { %>data-comment-id=\"<%= commentID %>\"<% } %>>\n         <% if (anchorName) { %>\n          <a class=\"comment-anchor\" name=\"<%- anchorName %>\"></a>\n          <div class=\"floating-anchor\">\n           <a href=\"#<%- anchorName %>\"\n              class=\"fa fa-link fa-flip-horizontal\"></a>\n          </div>\n         <% } %>\n         <div class=\"comment-author\">\n          <label for=\"<%= id %>\">\n           <div class=\"avatar-container\"><%= avatarHTML %></div>\n           <div class=\"user-reply-info\">\n            <a href=\"<%= userPageURL %>\" class=\"user\"><%- fullName %></a>\n        <% if (timestamp) { %>\n            <span class=\"timestamp\">\n             <time class=\"timesince\" datetime=\"<%= timestampISO %>\">\n        <%= timestamp %></time>\n            </span>\n        <% } %>\n           </div>\n          </label>\n         </div>\n         <div>\n          <pre id=\"<%= id %>\" class=\"comment-text reviewtext\"><%- text %></pre>\n         </div>\n        </li>\n    `),\n\n    events: {\n        'click .add_comment_link': '_onAddCommentClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The editor model.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$addCommentLink = null;\n        this._$draftComment = null;\n        this._$editor = null;\n        this._$commentsList = null;\n    },\n\n    /**\n     * Render the comment section.\n     *\n     * If there were any draft comments found, then editors will be\n     * created for them, the New Comment link will be hidden.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyEditorView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$addCommentLink = this.$('.add_comment_link');\n        this._$commentsList = this.$('.reply-comments');\n\n        /* See if there's a draft comment to import from the page. */\n        const $draftComment = this._$commentsList.children('.draft');\n\n        if ($draftComment.length !== 0) {\n            const $time = $draftComment.find('time');\n            const $reviewText = $draftComment.find('.reviewtext');\n\n            this.model.set({\n                commentID: $draftComment.data('comment-id'),\n                text: $reviewText.html(),\n                timestamp: new Date($time.attr('datetime')),\n                richText: $reviewText.hasClass('rich-text'),\n                hasDraft: true,\n            });\n            this._createCommentEditor($draftComment);\n        }\n\n        this.listenTo(this.model, 'textUpdated', () => {\n            if (this._$editor) {\n                const reviewRequest =\n                    this.model.get('review').get('parentObject');\n\n                RB.formatText(this._$editor, {\n                    newText: this.model.get('text'),\n                    richText: this.model.get('richText'),\n                    bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n                });\n            }\n        });\n\n        this.model.on('resetState', () => {\n            if (this._$draftComment) {\n                this._$draftComment.fadeOut(() => {\n                    this._$draftComment.remove();\n                    this._$draftComment = null;\n                });\n            }\n\n            this._$addCommentLink.fadeIn();\n        });\n\n        this.model.on('published', this._onPublished, this);\n    },\n\n    /**\n     * Open the comment editor for a new comment.\n     */\n    openCommentEditor() {\n        this._createCommentEditor(this._makeCommentElement());\n        this._$editor.inlineEditor('startEdit');\n    },\n\n    /**\n     * Create a comment editor for an element.\n     *\n     * Args:\n     *     $draftComment (jQuery):\n     *         The draft comment element.\n     */\n    _createCommentEditor($draftComment) {\n        const reviewRequestEditor = this.options.reviewRequestEditor;\n\n        this._$draftComment = $draftComment;\n\n        this._$editor = $draftComment.find('pre.reviewtext');\n        this._$editor\n            .inlineEditor(\n                _.extend({\n                    cls: 'inline-comment-editor',\n                    editIconClass: 'rb-icon rb-icon-edit',\n                    notifyUnchangedCompletion: true,\n                    multiline: true,\n                    hasRawValue: true,\n                    rawValue: this._$editor.data('raw-value') || '',\n                },\n                RB.TextEditorView.getInlineEditorOptions({\n                    richText: this._$editor.hasClass('rich-text'),\n                }))\n            )\n            .removeAttr('data-raw-value')\n            .on({\n                beginEdit: () => {\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.incr('editCount');\n                    }\n                },\n                complete: (e, value) => {\n                    const textEditor = RB.TextEditorView.getFromInlineEditor(\n                        this._$editor);\n\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.decr('editCount');\n                    }\n\n                    this.model.set({\n                        text: value,\n                        richText: textEditor.richText,\n                    });\n                    this.model.save();\n                },\n                cancel: () => {\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.decr('editCount');\n                    }\n\n                    this.model.resetStateIfEmpty();\n                },\n            });\n\n        this._$addCommentLink.hide();\n    },\n\n    /**\n     * Create an element for the comment form.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the comment element.\n     *\n     * Option Args:\n     *     now (Moment):\n     *         The current time.\n     *\n     *     richText (boolean):\n     *         Whether the text is in a rich-text format.\n     *\n     *     text (string):\n     *         The text for the comment.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly-created element.\n     */\n    _makeCommentElement(options={}) {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('review').get('parentObject');\n\n        const now = (\n            options.now ||\n            moment().utcOffset(userSession.get('timezoneOffset')));\n\n        const $el = $(this.commentTemplate(_.extend({\n                anchorName: null,\n                id: _.uniqueId('draft_comment_'),\n                text: '',\n                commentID: null,\n                userPageURL: userSession.get('userPageURL'),\n                fullName: userSession.get('fullName'),\n                avatarHTML: userSession.getAvatarHTML(32),\n                isDraft: true,\n                timestampISO: now.format(),\n\n                /*\n                 * Note that we format the a.m./p.m. this way to match\n                 * what's coming from the Django templates.\n                 */\n                timestamp: now.format('MMMM Do, YYYY, h:mm ') +\n                           (now.hour() < 12 ? 'a.m.' : 'p.m.'),\n            }, options)))\n            .find('.user')\n                .user_infobox()\n            .end()\n            .find('time.timesince')\n                .timesince()\n            .end();\n\n        Djblets.enableRetinaImages($el);\n\n        if (options.text) {\n            RB.formatText($el.find('.reviewtext'), {\n                newText: options.text,\n                richText: options.richText,\n                bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n            });\n        }\n\n        $el.appendTo(this._$commentsList);\n\n        return $el;\n    },\n\n    /**\n     * Handler for when the New Comment link is clicked.\n     *\n     * Creates a new comment form and editor.\n     *\n     * Args:\n     *     e (Event):\n     *         The event that triggered the callback.\n     */\n    _onAddCommentClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.openCommentEditor();\n    },\n\n    /**\n     * Handler for when the reply is published.\n     *\n     * Updates the draft comment to be a standard comment, and brings back\n     * the New Comment link.\n     */\n    _onPublished() {\n        if (this._$draftComment) {\n            const model = this.model;\n            const contextType = model.get('contextType');\n\n            this._$draftComment.replaceWith(this._makeCommentElement({\n                anchorName: model.get('anchorPrefix') +\n                            model.get('replyObject').id,\n                commentID: model.get('commentID'),\n                text: model.get('text'),\n                richText: model.get('richText'),\n                isDraft: false,\n            }));\n\n            this._$draftComment = null;\n        }\n    },\n});\n"],"mappings":"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"}