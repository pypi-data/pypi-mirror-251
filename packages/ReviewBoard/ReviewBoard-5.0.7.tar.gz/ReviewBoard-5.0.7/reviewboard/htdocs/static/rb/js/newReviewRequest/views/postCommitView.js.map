{"version":3,"file":"postCommitView.js","names":["RB","PostCommitView","Backbone","View","extend","className","loadErrorTemplate","_","template","events","initialize","options","model","repository","get","branches","_$scrollContainer","$scrollContainer","_$error","_branchesView","BranchesView","collection","on","branch","set","listenTo","_onBranchChanged","loaded","_loadBranches","render","_rendered","$","addClass","append","text","gettext","el","appendTo","$el","_commitsView","_onReloadBranchesClicked","_onReloadCommitsClicked","_loadCommits","_clearLoadError","fetch","err","hide","_showLoadError","message","show","_commitsCollection","checkFetchNext","remove","reloadID","errorLoadingText","temporaryFailureText","tryAgainText","errorLines","split","stopListening","getCommits","id","start","_onCreateReviewRequest","CommitsView","xhr","commit","_createPending","setPending","reviewRequest","ReviewRequest","localSitePrefix","createFromCommit","alert","_navigateTo","url","window","location"],"sources":["../../../../../../static/rb/js/newReviewRequest/views/postCommitView.es6.js"],"sourcesContent":["/**\n * A view orchestrating post-commit review request creation.\n *\n * This brings together the BranchesView and CommitsView to provide a UI for\n * letting people browse through the committed revisions in the repository. When\n * the user clicks on one of the commits, it will create a new review request\n * using that commit's ID.\n */\nRB.PostCommitView = Backbone.View.extend({\n    className: 'post-commit',\n\n    loadErrorTemplate: _.template(dedent`\n        <div class=\"error\">\n         <p><%- errorLoadingText %></p>\n         <p class=\"error-text\">\n          <% _.each(errorLines, function(line) { %><%- line %><br /><% }); %>\n         </p>\n         <p>\n          <%- temporaryFailureText %>\n          <a href=\"#\" id=\"reload_<%- reloadID %>\"><%- tryAgainText %></a>\n         </p>\n        </div>\n    `),\n\n    events: {\n        'click #reload_branches': '_onReloadBranchesClicked',\n        'click #reload_commits': '_onReloadCommitsClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $scrollContainer (jQuery):\n     *         The parent container handling all content scrolling.\n     */\n    initialize(options) {\n        const model = this.model;\n        const repository = model.get('repository');\n        const branches = repository.branches;\n\n        this._$scrollContainer = options.$scrollContainer;\n        this._$error = null;\n\n        // Set up the branch selector and bind it to the \"branch\" attribute\n        this._branchesView = new RB.BranchesView({\n            collection: branches,\n        });\n        this._branchesView.on('selected',\n                              branch => model.set('branch', branch));\n\n        this.listenTo(model, 'change:branch', this._onBranchChanged);\n\n        if (!branches.loaded) {\n            this._loadBranches();\n        }\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.PostCommitView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._rendered = true;\n\n        $('<div/>')\n            .addClass('branches section-header')\n            .append($('<span/>')\n                .text(gettext('Create from an existing commit on:')))\n            .append(this._branchesView.render().el)\n            .appendTo(this.$el);\n\n        if (this._commitsView) {\n            this.$el.append(this._commitsView.render().el);\n        }\n\n        return this;\n    },\n\n    /**\n     * Callback for when the user clicked on the reload branches button.\n     *\n     * This exists for use with unit test spies.\n     */\n    _onReloadBranchesClicked() {\n        this._loadBranches();\n    },\n\n    /**\n     * Callback for when the user clicked on the reload commits button.\n     *\n     * This exists for use with unit test spies.\n     */\n    _onReloadCommitsClicked() {\n        this._loadCommits();\n    },\n\n    /**\n     * Load the list of branches from the repository.\n     *\n     * If there's an error loading the branches, the branches selector and\n     * commits list will be hidden, and an error will be displayed along\n     * with the message from the server. The user will have the ability to\n     * try again.\n     *\n     * Version Changed:\n     *     5.0:\n     *     The promise return value was added.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async _loadBranches() {\n        this._clearLoadError();\n\n        const branches = this.model.get('repository').branches;\n\n        try {\n            await branches.fetch();\n        } catch (err) {\n            this._branchesView.$el.hide();\n            this._commitsView?.$el?.hide();\n            this._showLoadError('branches', err.message);\n            return;\n        }\n\n        branches.loaded = true;\n        this._branchesView.$el.show();\n        this._commitsView?.$el?.hide();\n    },\n\n    /**\n     * Load the list of commits from the repository.\n     *\n     * If there's an error loading the commits, the commits list will be\n     * hidden, and an error will be displayed along with the message from\n     * the server. The user will have the ability to try again.\n     *\n     * Version Changed:\n     *     5.0:\n     *     The promise return value was added.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async _loadCommits() {\n        this._clearLoadError();\n\n        try {\n            await this._commitsCollection.fetch();\n        } catch(err) {\n            this._commitsView.$el.hide();\n            this._showLoadError('commits', err.message);\n            return;\n        }\n\n        this._commitsView.$el.show();\n        this._commitsView.checkFetchNext();\n    },\n\n    /**\n     * Clear any displayed error message.\n     */\n    _clearLoadError() {\n        if (this._$error) {\n            this._$error.remove();\n            this._$error = null;\n        }\n    },\n\n    /**\n     * Show an error message indicating a load failure.\n     *\n     * The message from the server will be displayed along with some\n     * helpful text and a link for trying the request again.\n     *\n     * Args:\n     *     reloadID (string):\n     *         An ID to use for the reload link element.\n     *\n     *     err (string):\n     *         The error text.\n     */\n    _showLoadError(reloadID, err) {\n        this._clearLoadError();\n\n        this._$error = $(this.loadErrorTemplate({\n                errorLoadingText: gettext('There was an error loading information from this repository:'),\n                temporaryFailureText: gettext('This may be a temporary failure.'),\n                tryAgainText: gettext('Try again'),\n                errorLines: err.split('\\n'),\n                reloadID: reloadID,\n            }))\n            .appendTo(this.$el);\n    },\n\n    /**\n     * Callback for when the user chooses a different branch.\n     *\n     * Fetches a new list of commits starting from the tip of the selected\n     * branch.\n     *\n     * Args:\n     *     model (RB.PostCommitModel):\n     *         The data model.\n     *\n     *     branch (RB.RepositoryBranch):\n     *         The selected branch.\n     */\n    _onBranchChanged(model, branch) {\n        if (this._commitsView) {\n            this.stopListening(this._commitsCollection);\n            this._commitsView.remove();\n        }\n\n        this._commitsCollection =\n            this.model.get('repository').getCommits({\n                branch: branch.id,\n                start: branch.get('commit'),\n            });\n        this.listenTo(this._commitsCollection, 'create',\n                      this._onCreateReviewRequest);\n\n        this._commitsView = new RB.CommitsView({\n            collection: this._commitsCollection,\n            $scrollContainer: this._$scrollContainer,\n        });\n        this.listenTo(this._commitsView, 'loadError', xhr => {\n            this._showLoadError('commits', xhr);\n        });\n\n        if (this._rendered) {\n            this.$el.append(this._commitsView.render().el);\n        }\n\n        this._loadCommits();\n    },\n\n    /**\n     * Callback for when a commit is selected.\n     *\n     * Creates a new review request with the given commit ID and redirects the\n     * browser to it.\n     *\n     * Args:\n     *     commit (RB.RepositoryCommit):\n     *         The selected commit.\n     */\n    async _onCreateReviewRequest(commit) {\n        if (this._createPending) {\n            // Do nothing\n            return;\n        }\n\n        this._createPending = true;\n        this._commitsView.setPending(commit);\n\n        const repository = this.model.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            repository: repository.id,\n            localSitePrefix: repository.get('localSitePrefix')\n        });\n\n        try {\n            await reviewRequest.createFromCommit(commit.id);\n        } catch (err) {\n            this._commitsView.setPending(null);\n            this._createPending = false;\n            alert(err.message);\n            return;\n        }\n\n        this._navigateTo(reviewRequest.get('reviewURL'));\n    },\n\n    /**\n     * Navigate to the given URL.\n     *\n     * This exists so it can be overridden by unit tests.\n     *\n     * Args:\n     *     url (string):\n     *         The URL to navigate to.\n     */\n    _navigateTo(url) {\n        window.location = url;\n    },\n});\n"],"mappings":"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"}