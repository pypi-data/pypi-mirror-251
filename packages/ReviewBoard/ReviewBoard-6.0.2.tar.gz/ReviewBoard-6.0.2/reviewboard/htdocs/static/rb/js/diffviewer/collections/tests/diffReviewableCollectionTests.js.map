{"version":3,"file":"diffReviewableCollectionTests.js","names":["suite","describe","it","reviewRequest","RB","ReviewRequest","collection","DiffReviewableCollection","expect","toBe","files","beforeEach","DiffFileCollection","spyOn","watchFiles","_populateFromFiles","toHaveBeenCalled","reset","DiffFile","filediff","id","revision","index","interfilediff","commentCounts","baseFileDiffID","forceInterdiff","forceInterdiffRevision","trigger","toHaveBeenCalledWith","length","diffReviewable","at","get","toEqual"],"sources":["../../../../../../../static/rb/js/diffviewer/collections/tests/diffReviewableCollectionTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/collections/DiffReviewableCollection', function() {\n    describe('Construction', function() {\n        it('Sets reviewRequest', function() {\n            const reviewRequest = new RB.ReviewRequest();\n            const collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: reviewRequest,\n            });\n\n            expect(collection.reviewRequest).toBe(reviewRequest);\n        });\n    });\n\n    describe('watchFiles', function() {\n        let collection;\n        let files;\n\n        beforeEach(function() {\n            collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: new RB.ReviewRequest(),\n            });\n            files = new RB.DiffFileCollection();\n        });\n\n        it('Initially populates', function() {\n            spyOn(collection, '_populateFromFiles');\n\n            collection.watchFiles(files);\n\n            expect(collection._populateFromFiles).toHaveBeenCalled();\n        });\n\n        it('Populates on files.reset', function() {\n            spyOn(collection, 'trigger');\n            spyOn(collection, 'reset');\n\n            collection.watchFiles(files);\n\n            files.reset([\n                new RB.DiffFile({\n                    filediff: {\n                        id: 300,\n                        revision: 1,\n                    },\n                    index: 1,\n                    id: 100,\n                }),\n                new RB.DiffFile({\n                    filediff: {\n                        id: 301,\n                        revision: 1,\n                    },\n                    interfilediff: {\n                        id: 400,\n                        revision: 2,\n                    },\n                    index: 2,\n                    id: 101,\n                    commentCounts: [1],\n                }),\n                new RB.DiffFile({\n                    baseFileDiffID: 123,\n                    filediff: {\n                        id: 302,\n                        revision: 2,\n                    },\n                    forceInterdiff: true,\n                    forceInterdiffRevision: 1,\n                    index: 3,\n                    id: 102,\n                }),\n            ]);\n\n            expect(collection.reset).toHaveBeenCalled();\n            expect(collection.trigger).toHaveBeenCalledWith('populating');\n            expect(collection.trigger).toHaveBeenCalledWith('populated');\n            expect(collection.length).toBe(3);\n\n            let diffReviewable = collection.at(0);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(null);\n            expect(diffReviewable.get('file').id).toBe(100);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(300);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(null);\n\n            diffReviewable = collection.at(1);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(null);\n            expect(diffReviewable.get('file').id).toBe(101);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(301);\n            expect(diffReviewable.get('interFileDiffID')).toBe(400);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(2);\n            expect(diffReviewable.get('serializedCommentBlocks')).toEqual([1]);\n\n            diffReviewable = collection.at(2);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(123);\n            expect(diffReviewable.get('file').id).toBe(102);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(302);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(2);\n            expect(diffReviewable.get('interdiffRevision')).toBe(1);\n        });\n    });\n});\n"],"mappings":"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"}