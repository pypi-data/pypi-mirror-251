{"version":3,"file":"fileAttachmentCommentBlockModel.js","names":["RB","FileAttachmentCommentBlock","AbstractCommentBlock","extend","defaults","_","diffAgainstFileAttachmentID","fileAttachmentID","state","prototype","serializedFields","createComment","id","comment","get","createFileAttachmentComment","pick","attributes","getDeletedWarning","FileAttachmentStates","DELETED","getDraftWarning","NEW","NEW_REVISION","DRAFT"],"sources":["../../../../../static/rb/js/models/fileAttachmentCommentBlockModel.es6.js"],"sourcesContent":["/**\n * Represents the comments on a file attachment.\n *\n * FileAttachmentCommentBlock deals with creating and representing comments\n * that exist on a file attachment. It's a base class that is meant to be\n * subclassed.\n *\n * Model Attributes:\n *     fileAttachmentID (number):\n *         The ID of the file attachment being commented upon.\n *\n *     diffAgainstFileAttachmentID (number):\n *         An optional ID of the file attachment being diffed against.\n *\n *     state (string):\n *         The state of the file attachment.\n *\n * See Also:\n *     :js:class:`RB.AbstractCommentBlock`:\n *         For attributes defined on the base model.\n */\nRB.FileAttachmentCommentBlock = RB.AbstractCommentBlock.extend({\n    defaults: _.defaults({\n        diffAgainstFileAttachmentID: null,\n        fileAttachmentID: null,\n        state: null,\n    }, RB.AbstractCommentBlock.prototype.defaults),\n\n    /**\n     * The list of extra fields on this model.\n     *\n     * These will be stored on the server in the FileAttachmentComment's\n     * extra_data field.\n     */\n    serializedFields: [],\n\n    /**\n     * Create a FileAttachmentComment for the given comment ID.\n     *\n     * The subclass's storeCommentData will be called, allowing additional\n     * data to be stored along with the comment.\n     *\n     * Args:\n     *     id (number):\n     *         The ID of the comment to instantiate the model for.\n     *\n     * Returns:\n     *     RB.FileAttachmentComment:\n     *     The new comment model.\n     */\n    createComment(id) {\n        const comment = this.get('review').createFileAttachmentComment(\n            id,\n            this.get('fileAttachmentID'),\n            this.get('diffAgainstFileAttachmentID'));\n\n        _.extend(comment.get('extraData'),\n                 _.pick(this.attributes, this.serializedFields));\n\n        return comment;\n    },\n\n    /**\n     * Return a warning about commenting on a deleted object.\n     *\n     * Version Added:\n     *     6.0\n     *\n     * Returns:\n     *     string:\n     *     A warning to display to the user if they're commenting on a deleted\n     *     object. Return null if there's no warning.\n     */\n    getDeletedWarning() {\n        if (this.get('state') === RB.FileAttachmentStates.DELETED) {\n            return _`This file is deleted and cannot be commented on.`;\n        } else {\n            return null;\n        }\n    },\n\n    /**\n     * Return a warning about commenting on a draft object.\n     *\n     * Returns:\n     *     string:\n     *     A warning to display to the user if they're commenting on a draft\n     *     object. Return null if there's no warning.\n     */\n    getDraftWarning() {\n        const state = this.get('state');\n\n        if (state === RB.FileAttachmentStates.NEW ||\n            state === RB.FileAttachmentStates.NEW_REVISION ||\n            state === RB.FileAttachmentStates.DRAFT) {\n            return _`The file for this comment is still a draft. Replacing or\n                     deleting the file will delete this comment.`;\n        } else {\n            return null;\n        }\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,0BAA0B,GAAGD,EAAE,CAACE,oBAAoB,CAACC,MAAM,CAAC;EAC3DC,QAAQ,EAAEC,CAAC,CAACD,QAAQ,CAAC;IACjBE,2BAA2B,EAAE,IAAI;IACjCC,gBAAgB,EAAE,IAAI;IACtBC,KAAK,EAAE;EACX,CAAC,EAAER,EAAE,CAACE,oBAAoB,CAACO,SAAS,CAACL,QAAQ,CAAC;EAE9C;AACJ;AACA;AACA;AACA;AACA;EACIM,gBAAgB,EAAE,EAAE;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,CAACC,EAAE,EAAE;IACd,MAAMC,OAAO,GAAG,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,2BAA2B,CAC1DH,EAAE,EACF,IAAI,CAACE,GAAG,CAAC,kBAAkB,CAAC,EAC5B,IAAI,CAACA,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAE5CT,CAAC,CAACF,MAAM,CAACU,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,EACxBT,CAAC,CAACW,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAACP,gBAAgB,CAAC,CAAC;IAExD,OAAOG,OAAO;EAClB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,iBAAiB,GAAG;IAChB,IAAI,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC,KAAKd,EAAE,CAACmB,oBAAoB,CAACC,OAAO,EAAE;MACvD;IACJ,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,eAAe,GAAG;IACd,MAAMb,KAAK,GAAG,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;IAE/B,IAAIN,KAAK,KAAKR,EAAE,CAACmB,oBAAoB,CAACG,GAAG,IACrCd,KAAK,KAAKR,EAAE,CAACmB,oBAAoB,CAACI,YAAY,IAC9Cf,KAAK,KAAKR,EAAE,CAACmB,oBAAoB,CAACK,KAAK,EAAE;MACzC;IAEJ,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ;AACJ,CAAC,CAAC"}