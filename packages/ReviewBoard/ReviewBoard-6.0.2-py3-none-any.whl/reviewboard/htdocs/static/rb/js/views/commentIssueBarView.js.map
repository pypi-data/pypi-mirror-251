{"version":3,"file":"commentIssueBarView.js","names":["RB","CommentIssueBarView","Backbone","View","extend","events","statusInfo","open","visibleButtons","text","resolved","dropped","template","_","initialize","options","page","PageManager","getPage","_manager","commentIssueManager","model","_issueStatus","issueStatus","_$buttons","_$state","_$icon","_$message","render","$el","children","length","append","interactive","fixedLabel","dropLabel","reopenLabel","verifyDroppedLabel","verifyFixedLabel","$","on","_onIssueStatusUpdated","_showStatus","_setStatus","prop","setCommentState","reviewID","commentID","commentType","prevStatus","removeClass","addClass","iconClass","BaseComment","STATE_VERIFYING_DROPPED","STATE_VERIFYING_RESOLVED","attr","hide","canVerify","push","filter","join","show","trigger","_onReopenClicked","STATE_OPEN","_onFixedClicked","comment","getComment","ready","requiresVerification","getAuthorUsername","UserSession","instance","get","STATE_RESOLVED","_onDropClicked","STATE_DROPPED","_onVerifyFixedClicked","_onVerifyDroppedClicked","oldIssueStatus","timestamp","id"],"sources":["../../../../../static/rb/js/views/commentIssueBarView.es6.js"],"sourcesContent":["/**\n * Manages a comment's issue status bar.\n *\n * The buttons on the bar will update the comment's issue status on the server\n * when clicked. The bar will update to reflect the issue status of any\n * comments tracked by the issue summary table.\n */\nRB.CommentIssueBarView = Backbone.View.extend({\n    events: {\n        'click .reopen': '_onReopenClicked',\n        'click .resolve': '_onFixedClicked',\n        'click .drop': '_onDropClicked',\n        'click .verify-dropped': '_onVerifyDroppedClicked',\n        'click .verify-resolved': '_onVerifyFixedClicked',\n    },\n\n    statusInfo: {\n        open: {\n            visibleButtons: ['.drop', '.resolve'],\n            text: gettext('An issue was opened.'),\n        },\n        resolved: {\n            visibleButtons: ['.reopen'],\n            text: gettext('The issue has been resolved.'),\n        },\n        dropped: {\n            visibleButtons: ['.reopen'],\n            text: gettext('The issue has been dropped.'),\n        },\n        'verifying-dropped': {\n            visibleButtons: ['.reopen'],\n            text: gettext('Waiting for verification before dropping...'),\n        },\n        'verifying-resolved': {\n            visibleButtons: ['.reopen'],\n            text: gettext('Waiting for verification before resolving...'),\n        },\n    },\n\n    template: _.template(dedent`\n        <div class=\"issue-state\">\n         <div class=\"issue-container\">\n          <span class=\"rb-icon\"></span>\n          <span class=\"issue-details\">\n           <span class=\"issue-message\"></span>\n           <% if (interactive) { %>\n            <span class=\"issue-actions\">\n             <input type=\"button\" class=\"issue-button resolve\"\n                    value=\"<%- fixedLabel %>\">\n             <input type=\"button\" class=\"issue-button drop\"\n                    value=\"<%- dropLabel %>\">\n             <input type=\"button\" class=\"issue-button reopen\"\n                    value=\"<%- reopenLabel %>\">\n             <input type=\"button\" class=\"issue-button verify-resolved\"\n                    value=\"<%- verifyFixedLabel %>\">\n             <input type=\"button\" class=\"issue-button verify-dropped\"\n                    value=\"<%- verifyDroppedLabel %>\">\n            </span>\n           <% } %>\n          </span>\n         </div>\n        </div>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     canVerify (boolean):\n     *         Whether the user has permission to verify issues that require\n     *         it.\n     *\n     *     commentID (number):\n     *         The ID of the comment object.\n     *\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The issue manager.\n     *\n     *     commentType (string):\n     *         The type of comment being modified.\n     *\n     *     interactive (boolean):\n     *         Whether the comment issue bar is interactive or not.\n     *\n     *     issueStatus (string):\n     *         The current issue status.\n     *\n     *     reviewID (number):\n     *         The ID of the review that the comment is on.\n     */\n    initialize(options) {\n        this.options = options;\n\n        const page = RB.PageManager.getPage();\n\n        this._manager = (this.options.commentIssueManager ||\n                         page.model.commentIssueManager);\n        this._issueStatus = this.options.issueStatus;\n        this._$buttons = null;\n        this._$state = null;\n        this._$icon = null;\n        this._$message = null;\n    },\n\n    /**\n     * Render the issue status bar.\n     *\n     * Returns:\n     *     RB.CommentIssueBarView:\n     *     This object, for chaining.\n     */\n    render() {\n        if (this.$el.children().length === 0) {\n            this.$el.append(this.template({\n                interactive: this.options.interactive,\n                fixedLabel: gettext('Fixed'),\n                dropLabel: gettext('Drop'),\n                reopenLabel: gettext('Re-open'),\n                verifyDroppedLabel: gettext('Verify Dropped'),\n                verifyFixedLabel: gettext('Verify Fixed'),\n            }));\n        }\n\n        this._$buttons = this.$('.issue-button');\n        this._$state = this.$('.issue-state');\n        this._$icon = this.$('.rb-icon');\n        this._$message = this.$('.issue-message');\n\n        this._manager.on('issueStatusUpdated',\n                         this._onIssueStatusUpdated,\n                         this);\n        this._showStatus(this._issueStatus);\n\n        return this;\n    },\n\n    /**\n     * Set the issue status of the comment on the server.\n     *\n     * Args:\n     *     issueStatus (string):\n     *         The new issue status (one of ``open``, ``resolved``, or\n     *         ``dropped``).\n     */\n    _setStatus(issueStatus) {\n        this._$buttons.prop('disabled', true);\n        this._manager.setCommentState(this.options.reviewID,\n                                      this.options.commentID,\n                                      this.options.commentType,\n                                      issueStatus);\n    },\n\n    /**\n     * Show the current issue status of the comment.\n     *\n     * This will affect the button visibility and the text of the bar.\n     *\n     * Args:\n     *     issueStatus (string):\n     *         The issue status to show (one of ``open``, ``resolved``, or\n     *         ``dropped``).\n     */\n    _showStatus(issueStatus) {\n        const statusInfo = this.statusInfo[issueStatus];\n        const prevStatus = this._issueStatus;\n\n        this._issueStatus = issueStatus;\n\n        this._$state\n            .removeClass(prevStatus)\n            .addClass(issueStatus);\n\n        let iconClass;\n\n        if (issueStatus === RB.BaseComment.STATE_VERIFYING_DROPPED ||\n            issueStatus === RB.BaseComment.STATE_VERIFYING_RESOLVED) {\n            iconClass = 'rb-icon rb-icon-issue-verifying';\n        } else {\n            iconClass = `rb-icon rb-icon-issue-${issueStatus}`;\n        }\n\n        this._$icon.attr('class', iconClass);\n        this._$buttons.hide();\n        this._$message.text(statusInfo.text);\n\n        if (this.options.interactive) {\n            let visibleButtons = statusInfo.visibleButtons;\n\n            if (this.options.canVerify) {\n                if (issueStatus === RB.BaseComment.STATE_VERIFYING_DROPPED) {\n                    visibleButtons.push('.verify-dropped');\n                } else if (issueStatus ===\n                           RB.BaseComment.STATE_VERIFYING_RESOLVED) {\n                    visibleButtons.push('.verify-resolved');\n                }\n            }\n\n            this._$buttons.filter(visibleButtons.join(',')).show();\n            this._$buttons.prop('disabled', false);\n        }\n\n        this.trigger('statusChanged', prevStatus, issueStatus);\n    },\n\n    /**\n     * Handler for when \"Re-open\" is clicked.\n     *\n     * Reopens the issue.\n     */\n    _onReopenClicked() {\n        this._setStatus(RB.BaseComment.STATE_OPEN);\n    },\n\n    /**\n     * Handler for when \"Fixed\" is clicked.\n     *\n     * Marks the issue as fixed.\n     */\n    async _onFixedClicked() {\n        const comment = this._manager.getComment(this.options.reviewID,\n                                                 this.options.commentID,\n                                                 this.options.commentType);\n\n        await comment.ready();\n\n        if (comment.requiresVerification() &&\n            comment.getAuthorUsername() !==\n                RB.UserSession.instance.get('username')) {\n            this._setStatus(RB.BaseComment.STATE_VERIFYING_RESOLVED);\n        } else {\n            this._setStatus(RB.BaseComment.STATE_RESOLVED);\n        }\n    },\n\n    /**\n     * Handler for when \"Drop\" is clicked.\n     *\n     * Marks the issue as dropped.\n     */\n    async _onDropClicked() {\n        const comment = this._manager.getComment(this.options.reviewID,\n                                                 this.options.commentID,\n                                                 this.options.commentType);\n\n        await comment.ready();\n\n        if (comment.requiresVerification() &&\n            comment.getAuthorUsername() !==\n                RB.UserSession.instance.get('username')) {\n            this._setStatus(RB.BaseComment.STATE_VERIFYING_DROPPED);\n        } else {\n            this._setStatus(RB.BaseComment.STATE_DROPPED);\n        }\n    },\n\n    /**\n     * Handler for when \"Verify Fixed\" is clicked.\n     */\n    _onVerifyFixedClicked() {\n        this._setStatus(RB.BaseComment.STATE_RESOLVED);\n    },\n\n    /**\n     * Handler for when \"Verify Dropped\" is clicked.\n     */\n    _onVerifyDroppedClicked() {\n        this._setStatus(RB.BaseComment.STATE_DROPPED);\n    },\n\n    /**\n     * Handler for when the issue status for the comment changes.\n     *\n     * Updates the display to reflect the issue's current status.\n     *\n     * Args:\n     *     comment (RB.BaseComment):\n     *         The comment model that was updated.\n     *\n     *     oldIssueStatus (string, unused):\n     *         The old issue status.\n     *\n     *     timestamp (string, unused):\n     *         The timestamp of the update.\n     *\n     *     commentType (string):\n     *         The comment type that was updated.\n     *\n     *         Version Added:\n     *             4.0.8\n     */\n    _onIssueStatusUpdated(comment, oldIssueStatus, timestamp, commentType) {\n        const options = this.options;\n\n        if (comment.id === options.commentID &&\n            commentType === options.commentType) {\n            this._showStatus(comment.get('issueStatus'));\n        }\n    },\n});\n"],"mappings":"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"}