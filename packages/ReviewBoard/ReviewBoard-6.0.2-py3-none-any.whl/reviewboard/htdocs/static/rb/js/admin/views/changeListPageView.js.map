{"version":3,"file":"changeListPageView.js","names":["ActionsDrawerView","RB","DrawerView","extend","template","_","initialize","options","actions","render","prototype","call","$content","html","$summary","$","Admin","ChangeListPageView","PageView","events","apply","arguments","drawerShown","renderPage","model","_$changelist","$pageContent","children","_$form","_$datagrid","_datagrid","data","setDrawer","get","modelNameLower","toLowerCase","modelNameLowerPlural","listenTo","count","drawer","text","showDrawer","_drawerShown","show","hide","onResize","resizeElementForFullHeight","resizeToFit","_onToggleAllCheckboxesChanged","e","$toggleCheckbox","target","find","prop","change","_onRowSelected","$checkbox","objectID","val","select","unselect"],"sources":["../../../../../../static/rb/js/admin/views/changeListPageView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * A drawer containing actions that can be performed on selected objects.\n *\n * This displays any actions provided by the Django\n * :py:class:`~django.contrib.admin.ModelAdmin` class that can apply to\n * selected rows in the change list.\n */\nconst ActionsDrawerView = RB.DrawerView.extend({\n    template: _.template(dedent`\n        <p class=\"rb-c-drawer__summary\"></p>\n        <div class=\"rb-c-drawer__actions\">\n         <ul class=\"rb-c-drawer__action-group\">\n          <% _.each(actions, function(actionInfo) { %>\n           <li class=\"rb-c-drawer__action js-action-<%- actionInfo.id %>\">\n            <strong><%- actionInfo.label %></strong>\n           </li>\n          <% }) %>\n         </ul>\n        </div>\n    `),\n\n    /**\n     * Initialize the drawer.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the drawer.\n     *\n     * Option Args:\n     *     actions (Array of object):\n     *         The actions to show in the drawer. Each is an object with the\n     *         following keys:\n     *\n     *         ``id`` (:js:class:`string`):\n     *             The action's identifier.\n     *\n     *         ``label`` (:js:class:`string`):\n     *             The human-readable label.\n     */\n    initialize(options) {\n        this.actions = options.actions;\n    },\n\n    /**\n     * Render the drawer.\n     *\n     * Returns:\n     *     ActionsDrawerView:\n     *     This instance, for chaining.\n     */\n    render() {\n        RB.DrawerView.prototype.render.call(this);\n\n        this.$content.html(this.template({\n            actions: this.actions,\n        }));\n\n        this.$summary = this.$('.rb-c-drawer__summary');\n\n        return this;\n    },\n});\n\n\n/**\n * The view for the Administration UI's Change List page.\n *\n * This manages the dynamic state of the Change List page, which is used for\n * showing all entries for a model.\n *\n * This includes a drawer for the actions that can be performed on selected\n * entries (defined in :py:class:`~django.contrib.admin.ModelAdmin`), and\n * managing the selection state in general.\n */\nRB.Admin.ChangeListPageView = RB.Admin.PageView.extend({\n    events: {\n        'change #action-toggle': '_onToggleAllCheckboxesChanged',\n        'change .action-select': '_onRowSelected',\n    },\n\n    /**\n     * Initialize the page view.\n     */\n    initialize() {\n        RB.Admin.PageView.prototype.initialize.apply(this, arguments);\n\n        this.drawerShown = false;\n    },\n\n    /**\n     * Render the page contents.\n     *\n     * This should be implemented by subclasses that need to render any\n     * UI elements.\n     */\n    renderPage() {\n        RB.Admin.PageView.prototype.renderPage.call(this);\n\n        const model = this.model;\n\n        this._$changelist = this.$pageContent.children(\n            '.rb-c-admin-change-list');\n        this._$form = this._$changelist.children(\n            '.rb-c-admin-change-list__form');\n        this._$datagrid = this._$form.children(\n            '.rb-c-admin-change-list__results');\n        this._datagrid = this._$datagrid.data('datagrid');\n\n        this.setDrawer(new ActionsDrawerView({\n            actions: model.get('actions'),\n        }));\n\n        const modelNameLower = model.get('modelName').toLowerCase();\n        const modelNameLowerPlural =\n            model.get('modelNamePlural').toLowerCase();\n\n        this.listenTo(model, 'change:selectionCount', (model, count) => {\n            this.drawer.$summary.text(\n                N_(`${count} ${modelNameLower} selected`,\n                   `${count} ${modelNameLowerPlural} selected`,\n                   count));\n\n            const showDrawer = (count > 0);\n\n            if (showDrawer !== this._drawerShown) {\n                if (showDrawer) {\n                    this.drawer.show();\n                } else {\n                    this.drawer.hide();\n                }\n\n                this._drawerShown = showDrawer;\n            }\n        });\n    },\n\n    /**\n     * Handle a page resize.\n     *\n     * This will lay out the elements to take the full height of the\n     * page.\n     */\n    onResize() {\n        this.resizeElementForFullHeight(this._$changelist);\n        this.resizeElementForFullHeight(this._$form);\n        this._datagrid.resizeToFit();\n    },\n\n    /**\n     * Handle a toggle on the checkbox in the datagrid header.\n     *\n     * This will toggle all rows' checkboxes to match the state of the\n     * one in the header.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onToggleAllCheckboxesChanged(e) {\n        const $toggleCheckbox = $(e.target);\n\n        this._$datagrid.find('.action-select')\n            .prop('checked', $toggleCheckbox.prop('checked'))\n            .change();\n    },\n\n    /**\n     * Handle a toggle on a checkbox in a row.\n     *\n     * This will mark the row as selected or unselected, depending on the\n     * state of the checkbox.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onRowSelected(e) {\n        const $checkbox = $(e.target);\n        const objectID = $checkbox.val();\n\n        if ($checkbox.prop('checked')) {\n            this.model.select(objectID);\n        } else {\n            this.model.unselect(objectID);\n        }\n    },\n});\n\n\n})();\n"],"mappings":"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"}