{"version":3,"file":"diffReviewableModelTests.js","names":["suite","reviewRequest","beforeEach","RB","ReviewRequest","reviewURL","describe","it","diffReviewable","DiffReviewable","fileDiffID","revision","file","DiffFile","index","spyOn","$","and","callFake","request","expect","type","toBe","url","TEMPLATE_SERIAL","complete","responseText","html","getRenderedDiff","ajax","toHaveBeenCalled","toEqual","done","console","success","warn","error","fail","undefined","showDeleted","interdiffRevision","baseFileDiffID","getRenderedDiffFragment","chunkIndex","linesOfContext","interFileDiffID"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffReviewableModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffReviewable', function() {\n    let reviewRequest;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/1/',\n        });\n    });\n\n    describe('getRenderedDiff', function() {\n        it('Without interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With callbacks', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&show-deleted=1&_=' +\n                    TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiff(\n                {\n                    success: html => {\n                        expect($.ajax).toHaveBeenCalled();\n                        expect(html).toEqual('abc');\n                        expect(console.warn).toHaveBeenCalled();\n\n                        done();\n                    },\n                    error: () => done.fail(),\n                },\n                undefined,\n                {\n                    showDeleted: true,\n                });\n        });\n\n        it('With interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With base FileDiff', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                baseFileDiffID: 1,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?base-filediff-id=1&index=4&_=' +\n                    TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect(html).toEqual('abc');\n        });\n    });\n\n    describe('getRenderedDiffFragment', function() {\n        it('Without interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('Without interdiffs', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n                success: html => {\n                    expect($.ajax).toHaveBeenCalled();\n                    expect(html).toEqual('abc');\n                    expect(console.warn).toHaveBeenCalled();\n\n                    done();\n                },\n                error: () => done.fail(),\n            });\n        });\n\n        it('With interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With base filediff ID', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                baseFileDiffID: 123,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/' +\n                    '?base-filediff-id=123&index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With callbacks', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiffFragment(\n                {\n                    success: html => {\n                        expect($.ajax).toHaveBeenCalled();\n                        expect(html).toEqual('abc');\n                        expect(console.warn).toHaveBeenCalled();\n\n                        done();\n                    },\n                    error: () => done.fail(),\n                },\n                undefined,\n                {\n                    chunkIndex: 4,\n                    linesOfContext: 6,\n                });\n        });\n    });\n});\n"],"mappings":"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"}