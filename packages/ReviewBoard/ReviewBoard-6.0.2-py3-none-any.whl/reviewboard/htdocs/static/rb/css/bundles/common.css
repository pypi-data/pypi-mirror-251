/* Note: These are roughly in dependency order. */
.rb-icon {
  background-repeat: no-repeat;
  display: inline-block;
  overflow: hidden;
  text-indent: -99999px;
  vertical-align: middle;
  /* Set up the default image and size. */
  background-image: url('../../images/icons.png');
  background-size: 155px 150px;
  /*
   * If there are 2 or more ratio levels, loop through and create media
   * selectors for each.
   */
  /*
   * If SVG is enabled, create a media selector for it based on the max
   * ratio.
   */
}
@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  .rb-icon {
    background-image: url(../../images/icons@2x.png);
    background-size: 155px 150px;
  }
}
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .rb-icon {
    background-image: url(../../images/icons@2x.png);
    background-size: 155px 150px;
  }
}
@media (-webkit-min-device-pixel-ratio: 3), (min-resolution: 288dpi) {
  .rb-icon {
    background-image: url(../../images/icons.svg);
    background-size: 155px 150px;
  }
}
/*
 * NOTE: Keep these in the same order as found in the spritesheet.
 */
.rb-icon-issue-dropped {
  background-position: -5px -5px;
  width: 16px;
  height: 16px;
}
.rb-icon-issue-open {
  background-position: -26px -5px;
  width: 16px;
  height: 16px;
}
.rb-icon-issue-resolved {
  background-position: -47px -5px;
  width: 16px;
  height: 16px;
}
.rb-icon-collapse-review {
  background-position: -68px -5px;
  width: 18px;
  height: 18px;
}
.rb-icon-expand-review {
  background-position: -91px -5px;
  width: 18px;
  height: 18px;
}
.rb-icon-collapse {
  background-position: -114px -5px;
  width: 14px;
  height: 14px;
}
.rb-icon-expand {
  background-position: -135px -5px;
  width: 14px;
  height: 14px;
}
.rb-icon-dropdown-arrow {
  background-position: -8px -33px;
  width: 8px;
  height: 8px;
}
.rb-icon-datagrid-comment-draft {
  background-position: -24px -28px;
  width: 16px;
  height: 16px;
}
.rb-icon-datagrid-comment-shipit {
  background-position: -45px -28px;
  width: 16px;
  height: 16px;
}
.rb-icon-datagrid-comment {
  background-position: -66px -28px;
  width: 16px;
  height: 16px;
}
.rb-icon-datagrid-shipit {
  background-position: -87px -28px;
  width: 10px;
  height: 12px;
}
.rb-icon-new-updates {
  background-position: -102px -29px;
  width: 15px;
  height: 15px;
}
.rb-icon-edit {
  background-position: -124px -28px;
  width: 20px;
  height: 16px;
}
.rb-icon-delete {
  background-position: -5px -49px;
  width: 12px;
  height: 12px;
}
.rb-icon-diff-collapse-chunk {
  background-position: -22px -49px;
  width: 14px;
  height: 14px;
}
.rb-icon-diff-expand-above {
  background-position: -41px -49px;
  width: 28px;
  height: 14px;
}
.rb-icon-diff-expand-all {
  background-position: -74px -49px;
  width: 14px;
  height: 14px;
}
.rb-icon-diff-expand-below {
  background-position: -93px -49px;
  width: 28px;
  height: 14px;
}
.rb-icon-diff-expand-header {
  background-position: -126px -49px;
  width: 14px;
  height: 14px;
}
.rb-icon-admin-enabled {
  background-position: -5px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-admin-disabled {
  background-position: -26px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-admin-add {
  background-position: -47px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-star-off {
  background-position: -68px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-star-on {
  background-position: -89px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-warning {
  background-position: -110px -68px;
  width: 16px;
  height: 16px;
}
.rb-icon-search {
  background-position: -129px -66px;
  width: 20px;
  height: 20px;
}
.rb-icon-search-dark {
  background-position: -3px -86px;
  width: 20px;
  height: 20px;
}
.rb-icon-admin-collapse {
  background-position: -25px -89px;
  width: 20px;
  height: 13px;
}
.rb-icon-admin-expand {
  background-position: -50px -89px;
  width: 20px;
  height: 13px;
}
.rb-icon-jump-to {
  background-position: -76px -86px;
  width: 21px;
  height: 18px;
}
.rb-icon-range-slider {
  background-position: -99px -87px;
  width: 11px;
  height: 18px;
}
.rb-icon-download {
  background-position: -114px -90px;
  width: 14px;
  height: 14px;
}
.rb-icon-remove-widget {
  background-position: -130px -89px;
  width: 13px;
  height: 13px;
}
.rb-icon-archive-off {
  background-position: -6px -106px;
  width: 16px;
  height: 16px;
}
.rb-icon-archive-on {
  background-position: -26px -106px;
  width: 16px;
  height: 16px;
}
.rb-icon-datagrid-open-issues {
  background-position: -47px -108px;
  width: 8px;
  height: 11px;
}
.rb-icon-datagrid-column-shipits-issues {
  background-position: -59px -107px;
  width: 35px;
  height: 16px;
}
.rb-icon-shipit {
  background-position: -99px -107px;
  width: 12px;
  height: 15px;
}
.rb-icon-issue-verifying {
  background-position: -117px -107px;
  width: 16px;
  height: 16px;
}
.rb-icon-datagrid-issue-verifying {
  background-position: -139px -108px;
  width: 11px;
  height: 14px;
}
.rb-icon-compose-review {
  background-position: -6px -126px;
  width: 17px;
  height: 16px;
}
.rb-icon-edit-review {
  background-position: -26px -126px;
  width: 16px;
  height: 16px;
}
.rb-icon-create-review {
  background-position: -46px -124px;
  width: 18px;
  height: 18px;
}
.rb-icon-review-num-files {
  background-position: -64px -126px;
  width: 16px;
  height: 16px;
}
/*
 * Prevents a floated element from affecting elements below it.
 *
 * This is used to allow an element with a float to remain floating without
 * interfering with the layout of any elements that follow it. It is
 * equivalent to placing an element immediately after with "clear: both;".
 */
.clearfix {
  display: inline-block;
}
.clearfix:after {
  clear: both;
  content: ".";
  display: block;
  height: 0;
  visibility: hidden;
}
/**
 * The main body element for the page.
 *
 * Modifiers:
 *     -has-sidebar:
 *         Whether the page has a sidebar shown.
 *
 *     -is-content-flush:
 *         Removes any margins and padding between the page content and the
 *         UI shell.
 *
 *     -is-content-flush-on-desktop:
 *         Removes any margins and padding between the page content and the
 *         UI shell when in desktop mode.
 *
 *     -is-content-flush-on-mobile:
 *         Removes any margins and padding between the page content and the
 *         UI shell when in mobile mode.
 *
 *     -is-content-full-page:
 *         Whether the content area should take up the full visual width
 *         and height of the page container. This keeps the content within
 *         the viewport, and allows the content to take care of its own
 *         scrolling.
 */
body {
  background-color: #F9F9F9;
  color: #000000;
  font-family: Verdana, Arial, Helvetica, Sans-Serif;
  font-size: 11px;
  margin: 0;
  padding: 0;
}
body.-is-content-flush #page-container {
  padding: 0;
}
body.-is-content-flush #topbar {
  margin-bottom: 0;
}
@media only screen and (max-width: 800px) {
  body {
    background: #FFFFFF;
    /*
     * If the page indicates it's showing a sidebar, and the UI shell is in
     * mobile mode, override the content placement so it's not offset by the
     * size of the sidebar.
     */
  }
  body.js-mobile-menu-open {
    /*
       * When opening the mobile sidebar menu, lock the viewport so the user
       * can't scroll, and shift everything on the page over by the menu's
       * width. This will animate them, using the transitions set on the
       * elements.
       */
    overflow: hidden;
    position: fixed;
    width: 100%;
    height: 100%;
  }
  body.js-mobile-menu-open #container {
    transform: translate(300px, 0);
    height: 100%;
  }
  body.-has-sidebar #content,
  body.has-sidebar #content {
    margin-left: 0;
  }
  body.-is-content-flush-on-mobile #page-container {
    padding: 0;
  }
  body.-is-content-flush-on-mobile #topbar {
    margin-bottom: 0;
  }
}
@media only screen and (min-width: 801px) {
  body.-has-sidebar .rb-c-page-sidebar,
  body.has-sidebar .rb-c-page-sidebar {
    display: block;
  }
  body.-has-sidebar #page-container,
  body.has-sidebar #page-container {
    padding-left: 0;
  }
  body.js-rb-c-drawer-is-shown #page-sidebar-main-pane {
    opacity: 0;
  }
  body.-is-content-flush-on-desktop #page-container {
    padding: 0;
  }
  body.-is-content-flush-on-desktop #topbar {
    margin-bottom: 0;
  }
  body .rb-c-page-sidebar {
    display: none;
  }
}
html {
  scroll-behavior: smooth;
}
body.full-page-content,
body.-is-content-full-page {
  /*
   * Set the page to not scroll and have all content take up the maximum
   * height.
   */
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100%;
  /*
   * Set the content to take up the full height of #page-container. It's
   * expected that RB.PageView will size #page-container appropriately for
   * the page.
   */
  /*
   * Hide the page sidebar panes, so we can display them initially at the
   * correct height.
   */
}
body.full-page-content #container,
body.-is-content-full-page #container,
body.full-page-content #content_container,
body.-is-content-full-page #content_container,
body.full-page-content #content,
body.-is-content-full-page #content {
  height: 100%;
  margin-bottom: 0;
  vertical-align: top;
}
@media only screen and (min-width: 801px) {
  body.full-page-content,
  body.-is-content-full-page {
    /*
     * Set the page sidebar's panes container and all panes to allocate
     * the full height of #page-sidebar, so that #page-sidebar's scrolling
     * will be allowed to kick in. It's expected that RB.PageView will size
     * #page-sidebar appropriately for the page.
     */
  }
  body.full-page-content #page-sidebar-panes,
  body.-is-content-full-page #page-sidebar-panes,
  body.full-page-content .rb-c-page-sidebar__pane,
  body.-is-content-full-page .rb-c-page-sidebar__pane {
    height: 100%;
  }
}
body.full-page-content #page-sidebar-main-pane,
body.-is-content-full-page #page-sidebar-main-pane {
  visibility: hidden;
}
body.full-page-content.-is-loaded #page-sidebar-main-pane,
body.-is-content-full-page.-is-loaded #page-sidebar-main-pane {
  /*
     * On full-size pages, we hide the content and sidebar initially
     * (via CSS), so that we can properly position them before they're
     * first shown. Now that we've done that, make them visible.
    */
  visibility: visible;
}
/*
 * Set the mobile widths on some components.
 */
@media only screen and (min-width: 801px) {
  .rb-c-page-content-box {
    background-color: #FEFEFE;
    border: 1px #AAAEA1 solid;
    border-radius: 6px;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    box-sizing: border-box;
    padding: 1em;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-page-content-box {
    background: none;
    border: 0;
    border-radius: 0;
    box-shadow: none;
    padding: 0;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-content-header.-is-main {
    /* Desktop mode. */
    margin: 1em;
  }
  .rb-c-content-header.-is-main .rb-c-content-header__title {
    font-size: 120%;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-content-header.-is-main {
    /* Mobile mode. */
    margin: 1em 0;
    /*
           * If the body is making content flush, we still want to have the
           * margin on the left for headers.
           */
  }
  body.-is-content-flush-on-mobile .rb-c-content-header.-is-main {
    margin: 1em;
  }
  .rb-c-content-header.-is-main .rb-c-content-header__title {
    font-size: 130%;
  }
}
a:link,
a:visited {
  color: #124BBD;
  text-decoration: none;
}
a:hover {
  color: #0e398e;
  text-decoration: underline;
}
h1 {
  font-size: 10pt;
}
h3 {
  margin-top: 2em;
}
img {
  border: 0;
}
pre,
textarea,
.CodeMirror,
.editable.field-text-area {
  font-size: 13px;
  font-family: monospace;
  line-height: 17px;
}
.editable.field-text-area {
  /*
   * Always show the text cursor when hovering over an editable text field
   * placeholder, so the entire thing feels like a text field.
   */
  cursor: text;
}
textarea {
  resize: none;
}
/**
 * Header actions.
 *
 * Structure:
 *     <div class="rb-c-actions" role="presentation">
 *      <menu class="rb-c-actions__content" role="menu">
 *       ...
 *      </menu>
 *     </div>
 */
#headerbar .rb-c-actions {
  float: right;
  /**
   * A header action.
   *
   * Structure:
   *     <li class="rb-c-actions__action" role="presentation">
   *      <a href="#" role="menuitem">...</a>
   *     </li>
   */
}
#headerbar .rb-c-actions__action {
  border: 1px transparent solid;
  border-top: 0;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
}
#headerbar .rb-c-actions__action a {
  color: inherit;
  display: block;
  font-size: 110%;
  margin: 0;
  padding: 0 1em;
  text-decoration: none;
  height: 32px;
  vertical-align: middle;
  line-height: 32px;
}
#headerbar .rb-c-actions__action img {
  vertical-align: middle;
}
#headerbar .rb-c-actions__content {
  box-sizing: border-box;
  list-style: none;
  margin: -5px 0;
  padding: 0;
  white-space: nowrap;
  z-index: 1;
}
#headerbar .rb-c-actions__content img {
  vertical-align: middle;
}
#headerbar .rb-c-actions .rb-c-menu {
  border: 1px #888 solid;
  border-radius: 0 0 6px 6px;
  margin: 0;
  margin-right: -1px;
  right: 0;
}
#headerbar .rb-c-actions .rb-c-menu__item {
  margin: 0;
  padding: 0;
}
#headerbar .rb-c-actions .rb-c-menu__item:last-child {
  border-radius: 0 0 6px 6px;
}
@media only screen and (max-width: 800px) {
  #headerbar .rb-c-actions {
    display: none;
  }
}
/*
 * The "Loading..." indicator shown during AJAX operations.
 */
#activity-indicator {
  display: none;
  position: fixed;
  left: 50%;
  top: 0;
  text-align: center;
  font-weight: bold;
  background-color: #fce94f;
  border: 1px #c4a000 solid;
  border-top: 0;
  width: 8em;
  margin-left: -4em;
  padding: 0.5em 0.5em;
  z-index: 140;
}
#activity-indicator span {
  vertical-align: middle;
  line-height: 16px;
}
#activity-indicator.error {
  background-color: #ffcd9c;
  width: 28em;
  margin-left: -14em;
  background-image: none;
  padding-left: 0.6em;
}
#activity-indicator.error a {
  margin-left: 1em;
  color: #0000CC;
  text-decoration: none;
}
@media only screen and (max-width: 800px) {
  #container {
    position: relative;
    transition: 0.3s transform ease-out;
  }
}
#content_container {
  position: relative;
}
/*
 * The error information shown when an AJAX operation fails.
 */
#error div {
  background: #ffcd9c;
  border: 1px #9a4306 solid;
  margin-bottom: 10px;
  padding: 8px 10px;
}
#error h1 {
  display: inline;
  margin: 0;
  padding: 0;
}
#error input[type='submit'] {
  margin-left: 10px;
}
/*
 * The header bar at the top of the page. This contains the branding,
 * search field, and the accountnav element.
 *
 * This has the following children:
 *
 *    * #rbinfo
 *    * #accountnav
 *    * #search
 */
#headerbar {
  margin: 0;
  padding: 5px;
  height: 22px;
  vertical-align: middle;
  z-index: 50;
}
#headerbar br {
  clear: both;
  height: 0;
}
#headerbar #logo {
  position: absolute;
  top: 3px;
  left: 8px;
  z-index: 50;
}
#headerbar #nav_toggle {
  color: rgba(0, 0, 0, 0.8);
  cursor: pointer;
  display: none;
  font-size: 16px;
  padding: 8px;
  position: absolute;
  top: 0;
  left: 0;
  width: 32px;
  height: 32px;
}
#headerbar #nav_toggle .fa {
  vertical-align: middle;
}
#headerbar #title {
  color: inherit;
  display: inline;
  font-weight: normal;
  font-size: 125%;
  margin: 0;
  padding: 0;
  vertical-align: middle;
}
#headerbar #title a {
  color: inherit;
  font-size: 120%;
  text-decoration: none;
}
#headerbar #title .version {
  font-weight: normal;
  font-size: 90%;
}
#headerbar #search {
  float: right;
  margin: 0 1em;
}
#headerbar #search input {
  border: 1px #CCC solid;
  margin: 0;
  padding: 2px;
  border-radius: 6px;
  background-color: #EEEEEE;
  font-size: 1.2em;
  -webkit-appearance: textfield;
}
@media only screen and (max-width: 800px) {
  #headerbar {
    border-bottom: 1px solid;
    height: auto;
    position: relative;
    text-align: center;
    transition: 0.3s transform ease-out;
  }
  #headerbar #logo {
    position: relative;
    top: 0;
    height: 32px;
    width: 32px;
    z-index: 50;
  }
  #headerbar #nav_toggle {
    display: block;
  }
  #headerbar #search {
    box-sizing: border-box;
    float: none;
    margin: 0.5em 0.5em 0 0.5em;
  }
  #headerbar #search input {
    /*
         * Style the search input to appear more like the saerch bars on
         * most mobile apps and sites, giving more breathing room.
         */
    background-color: white;
    box-sizing: border-box;
    padding: 4px 8px;
    margin: 0;
    width: 100%;
  }
  #headerbar #title {
    margin-left: 0.5em;
  }
  #headerbar #title .version {
    display: none;
  }
}
/*
 * The branding section of the headerbar, containing the logo and versioning
 * information.
 */
#rbinfo {
  float: left;
  position: absolute;
  left: 0;
  padding-top: 0.2em;
  padding-left: 76px;
}
@media only screen and (max-width: 800px) {
  #rbinfo {
    /*
     * Reset positioning and floating so that on mobile, this will take the
     * full width of the page.
     */
    float: none;
    position: relative;
    padding: 0;
  }
}
#rbinfo img {
  display: inline;
  vertical-align: middle;
}
/*
 * An event mask overlaying the content of the page. It's shown only when
 * the mobile menu is shown. There is nothing visible, allowing the page
 * content to fully show through.
 */
#mobile_menu_mask {
  display: none;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 199;
}
/*
 * The container for the desktop navigation bar. This is not shown when in
 * mobile mode.
 */
#navbar-container {
  /*
   * Alerts embedded in the navbar area should appear flush with the
   * navigation container.
   */
}
#navbar-container a {
  font-size: 110%;
  text-decoration: none;
}
#navbar-container .rb-c-alert {
  border-left: 0;
  border-right: 0;
  border-top: 0;
  border-radius: 0;
}
/*
 * The navigation bar.
 *
 * This is the bar showing such items as "My Dashboard"< "New Review Request",
 * etc.
 */
#navbar {
  border-bottom: 1px solid;
  list-style: none;
  margin: 0;
  min-height: 1.5em;
  padding: 5px;
  padding-left: 76px;
}
#navbar li {
  display: inline;
  height: 30px;
  margin: 0 1em 0 0;
}
#navbar .newreviewrequest {
  text-align: right;
}
@media only screen and (max-width: 800px) {
  #navbar {
    display: none;
    padding-left: 10px;
    margin-top: 10px;
  }
  #navbar li {
    display: block;
  }
}
/*
 * The main container for the page's content.
 */
#page-container {
  padding: 0 1.5em 1.5em 1.5em;
  visibility: hidden;
}
body.-is-loaded #page-container {
  visibility: visible;
}
@media only screen and (max-width: 800px) {
  #page-container {
    position: relative;
    transition: 0.3s transform ease-out;
  }
}
#read-only-banner {
  background: #FFF4B0;
  border-bottom: 1px #968200 solid;
  font-size: 110%;
  padding: 5px;
  padding-left: 76px;
  vertical-align: middle;
}
#read-only-banner-header {
  display: inline;
  font-size: 100%;
  padding-right: 5px;
}
#read-only-banner-message {
  vertical-align: middle;
}
#topbar {
  margin: 0 0 1.5em 0;
}
/*
 * The box containing information on an AJAX error.
 */
.server-error-box .response-data {
  margin-top: 2em;
}
/****************************************************************************
 * Page themes
 ****************************************************************************/
/*
 * Default color scheme, used for the dashboard, My Account page, and others
 * featuring largely blue-ish colors.
 */
#accountnav .rb-c-actions__action:hover {
  border-color: #C4CFDC;
}
#accountnav .rb-c-menu {
  border-color: #C4CFDC;
}
#accountnav .rb-c-menu__item {
  background: #DAEBFF;
}
#accountnav .rb-c-menu__item:hover,
#accountnav .rb-c-menu__item:focus {
  background: #ffffff;
}
#accountnav li:hover {
  background: #ffffff;
  border-color: #d4dce5;
}
#accountnav li:hover ul {
  border-color: #C4CFDC;
}
#accountnav li:hover ul li:hover {
  background: #ffffff;
}
#accountnav li:hover ul li.menu-info-box,
#accountnav li:hover ul li.menu-info-box:hover {
  /*
             * These are currently only used in RBCommons, but may be useful
             * for future accountnav features.
             */
  background: #f4f9ff;
  border-bottom: 1px #c1ddff solid;
  padding: 1em;
}
#accountnav li:hover ul li.menu-info-box,
#accountnav li:hover ul li.menu-info-box:hover,
#accountnav li:hover ul li.menu-info-box *,
#accountnav li:hover ul li.menu-info-box:hover * {
  cursor: default;
}
#accountnav li ul {
  background: #DAEBFF;
}
#headerbar {
  border-bottom-color: #C4CFDC;
}
#headerbar #nav_toggle {
  color: rgba(0, 0, 0, 0.8);
}
#headerbar #search input {
  border-color: #C4CFDC;
}
#navbar-container {
  background: #DAEBFF;
  border-color: #C4CFDC;
}
#navbar {
  border-bottom-color: #C4CFDC;
}
#navbar a {
  color: #124BBD;
}
@media only screen and (max-width: 800px) {
  #page-sidebar {
    background-color: #DAEBFF;
    border-right-color: #C4CFDC;
  }
}
#topbar {
  background: #DAEBFF;
  color: #000000;
}
#topbar .version {
  color: #555555;
}
.rb-c-drawer__content {
  background: #DAEBFF;
  border-color: #C4CFDC;
  color: #000000;
}
#page-container .datagrid-header,
.datagrid-header-drag.datagrid-header {
  background: #DAEBFF;
}
/* Reviewable pages (review request, diff, file attachment, etc.) are brown. */
.reviewable-page #accountnav .rb-c-actions__action:hover {
  border-color: #BCA626;
}
.reviewable-page #accountnav .rb-c-menu {
  border-color: #BCA626;
}
.reviewable-page #accountnav .rb-c-menu__item {
  background: #E5D7A8;
}
.reviewable-page #accountnav .rb-c-menu__item:hover,
.reviewable-page #accountnav .rb-c-menu__item:focus {
  background: #f1e9cf;
}
.reviewable-page #accountnav li:hover {
  background: #f1e9cf;
  border-color: #d1b92a;
}
.reviewable-page #accountnav li:hover ul {
  border-color: #BCA626;
}
.reviewable-page #accountnav li:hover ul li:hover {
  background: #f1e9cf;
}
.reviewable-page #accountnav li:hover ul li.menu-info-box,
.reviewable-page #accountnav li:hover ul li.menu-info-box:hover {
  /*
             * These are currently only used in RBCommons, but may be useful
             * for future accountnav features.
             */
  background: #ebe0bc;
  border-bottom: 1px #dfce94 solid;
  padding: 1em;
}
.reviewable-page #accountnav li:hover ul li.menu-info-box,
.reviewable-page #accountnav li:hover ul li.menu-info-box:hover,
.reviewable-page #accountnav li:hover ul li.menu-info-box *,
.reviewable-page #accountnav li:hover ul li.menu-info-box:hover * {
  cursor: default;
}
.reviewable-page #accountnav li ul {
  background: #E5D7A8;
}
.reviewable-page #headerbar {
  border-bottom-color: #BCA626;
}
.reviewable-page #headerbar #nav_toggle {
  color: rgba(0, 0, 0, 0.8);
}
.reviewable-page #headerbar #search input {
  border-color: #BCA626;
}
.reviewable-page #navbar-container {
  background: #E5D7A8;
  border-color: #BCA626;
}
.reviewable-page #navbar {
  border-bottom-color: #BCA626;
}
.reviewable-page #navbar a {
  color: #124BBD;
}
@media only screen and (max-width: 800px) {
  .reviewable-page #page-sidebar {
    background-color: #E5D7A8;
    border-right-color: #BCA626;
  }
}
.reviewable-page #topbar {
  background: #E5D7A8;
  color: #000000;
}
.reviewable-page #topbar .version {
  color: #555555;
}
.reviewable-page .rb-c-drawer__content {
  background: #E5D7A8;
  border-color: #BCA626;
  color: #000000;
}
.reviewable-page #page-container .datagrid-header,
.reviewable-page .datagrid-header-drag.datagrid-header {
  background: #E5D7A8;
}
#search_results {
  margin: 3em;
}
#search_results .paginator {
  border-top: 1px #E0E0E0 solid;
  font-size: 120%;
  margin-top: 2em;
  padding-top: 2em;
}
#search_results .paginator a {
  color: blue;
  text-decoration: none;
}
#search_results .paginator a,
#search_results .paginator b {
  margin-right: 0.5em;
}
#search_results .search-results-filters {
  border-bottom: 1px #CCC solid;
  margin-bottom: 2em;
}
#search_results .search-results-filters a {
  color: #666;
  display: inline-block;
  font-size: 130%;
  text-decoration: none;
  padding: 0.5em 1em;
  border: 1px transparent solid;
  border-top-width: 2px;
}
#search_results .search-results-filters a.active {
  color: black;
  border: 1px #CCC solid;
  border-bottom: 1px white solid;
  border-top-width: 2px;
}
#search_results .search-results-stats {
  color: #444444;
  font-size: 110%;
  padding-bottom: 2em;
  margin-left: 1em;
}
#search_results .search-result {
  display: inline-block;
  line-height: 1.5;
  margin-bottom: 2em;
}
#search_results .search-result:after {
  clear: both;
  content: ".";
  display: block;
  height: 0;
  visibility: hidden;
}
#search_results .search-result:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}
#search_results .search-result a {
  text-decoration: none;
}
#search_results .search-result h2 {
  font-size: 140%;
  font-weight: normal;
  margin: 0;
}
#search_results .search-result .search-result-by {
  color: #555555;
  font-size: 85%;
  margin-top: 0.3em;
}
#search_results .search-result .search-result-body {
  float: left;
}
#search_results .search-result .search-result-excerpt {
  margin-top: 0.3em;
  width: 60em;
}
#search_results .search-result .search-result-icon {
  float: left;
  margin-right: 1em;
}
#search_results .search-result .search-result-links {
  margin-top: 1em;
}
#search_results .search-result .search-result-username {
  font-size: 120%;
}
#search_results .search-result .search-result-user-groups {
  margin-top: 1em;
}
/**
 * Styles and variables for the rb-c-alert component.
 */
/**
 * An alert box displayed on the page that warns or informs.
 *
 * This is used to show something important to the user. It can display an
 * informational message/hint, a successful result, an warning, or an error.
 * The text will be displayed alongside an icon, which is dependent on the
 * type. The information may optionally be presented with leading or
 * sectional headers.
 *
 * Modifiers:
 *     -is-error:
 *         The alert represents an error.
 *
 *     -is-info:
 *         The alert represents information useful to the user.
 *
 *     -is-success:
 *         The alert represents a successful result.
 *
 *     -is-warning:
 *         The alert represents a warning.
 *
 * Structure:
 *     <div class="rb-c-alert -is-[type]">
 *      <span class="rb-c-alert__close" role="button"
 *            aria-label="Close" tabindex="0"></span>
 *      <p class="rb-c-alert__content">...</p>
 *     </div>
 */
.rb-c-alert {
  border-radius: 4px;
  border: 1px transparent solid;
  margin: 0 0 1em 0;
  padding: 1em;
  /**
   * Content to display within the alert.
   *
   * If showing only a single paragraph of text, this should be a ``<p>`` tag.
   * If showing multiple paragraphs, or other HTML content, use a ``<div>``
   * with the content inside.
   *
   * Structure:
   *     <p class="rb-c-alert__content">...</p>
   *
   *     <div class="rb-c-alert__content">
   *      <h3 class="rb-c-alert__heading">...</h3>
   *      <p>...</p>
   *      ...
   *     </div>
   */
  /**
   * A close button for the alert.
   *
   * DOM Attributes:
   *     aria-label (string):
   *          The accessibility label for the button.
   *
   *     role (string):
   *         This must be set to ``button``.
   *
   *     tabindex (number):
   *         The tab index. This should be set to ``0`` in most cases.
   *
   *     title (string):
   *          The tooltip label for the button.
   *
   * Structure:
   *     <span class="rb-c-alert__close"
   *           aria-label="Close"
   *           role="button"
   *           tabindex="0"
   *           title="Close"></span>
   */
  /**
   * An optional header above content in the alert.
   *
   * This may be used anywhere within an ``.rb-c-alert__content`` to provide
   * a heading above some part of the content. A common usage would be to
   * provide it as the first element to create a prominent heading for the
   * alert.
   *
   * Structure:
   *     <h3 class="rb-c-alert__heading">
   *      text...
   *     </h3>
   */
}
.rb-c-alert:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  float: left;
  font-size: 18px;
  margin-right: 0.5em;
  text-align: center;
  width: 18px;
}
.rb-c-alert:last-child {
  margin-bottom: 0;
}
.rb-c-alert.-is-error {
  background: #FFE0E5;
  border-color: #ff94a5;
}
.rb-c-alert.-is-error:before {
  content: "\f06a";
}
.rb-c-alert.-is-info {
  background: #DAEBFF;
  border-color: #8ec2ff;
}
.rb-c-alert.-is-info:before {
  content: "\f05a";
}
.rb-c-alert.-is-success {
  background: #D1F5A9;
  border-color: #6dbc16;
}
.rb-c-alert.-is-success:before {
  content: "\f00c";
}
.rb-c-alert.-is-warning {
  background: #FFF4B0;
  border-color: #caad00;
}
.rb-c-alert.-is-warning:before {
  content: "\f071";
}
.rb-c-alert__content {
  margin: 0;
  padding: 0;
  overflow: hidden;
}
.rb-c-alert__content > :first-child {
  margin-top: 0;
  padding-top: 0;
}
.rb-c-alert__content > :last-child {
  margin-bottom: 0;
  padding-bottom: 0;
}
.rb-c-alert__close {
  cursor: pointer;
  float: right;
  padding: 6px;
  margin: -10px -6px -6px -6px;
}
.rb-c-alert__close:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f00d";
}
.rb-c-alert__heading {
  font-size: 100%;
  font-weight: bold;
  margin: 2em 0 1em 0;
  padding: 0;
}
/**
 * Common styles for avatars.
 */
/**
 * A standard avatar on the page.
 *
 * This will style the avatar to be shown as a circle, and help
 * vertically-align it to make it appear correctly next to text.
 */
.djblets-o-avatar {
  border-radius: 50%;
  vertical-align: middle;
}
.banner {
  background: #D1F5A9;
  border-width: 1px;
  border-color: #49BB18;
  border-style: solid;
  margin-bottom: 10px;
  padding: 10px;
  z-index: 100;
}
.banner > h1,
.banner > p {
  display: inline;
  margin-right: 0.2em;
  padding: 0;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .banner p {
    display: block;
    margin: 1em 0;
  }
}
.banner .banner-actions {
  margin-left: 1em;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .banner .banner-actions {
    display: block;
    margin-left: 0;
    margin-top: 1em;
  }
}
/**
 * The unified banner.
 *
 * This banner replaces a number of previous banners -- banners for the review
 * request draft, review draft, and review reply drafts. It's split into two
 * major parts:
 *
 * 1. The review area. This deals with reviews and drafts. It contains the main
 *    "Review" menu, publish button, mode switcher (for choosing different
 *    active drafts), and the change description field (when there's a review
 *    request update draft).
 *
 * 2. The dock area. This is currently unused, but we have plans to use this
 *    for an expandable file display on the diffviewer, as well as allow
 *    extensions to drop in their own content.
 *
 * Modifiers:
 *     -has-draft:
 *         Whether there are any drafts present.
 *
 *     -has-multiple:
 *         Whether there are multiple drafts present.
 *
 * Structure:
 *     <div class="rb-c-unified-banner">
 *      <div class="rb-c-unified-banner__review">...</div>
 *      <div class="rb-c-unified-banner__dock">...</div>
 *     </div>
 */
.rb-c-unified-banner {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  display: none;
  margin: -1.5em -1.5em 1.5em -1.5em;
  z-index: 100;
  /**
   * The main section of the review banner relating to reviews and drafts.
   *
   * Modifiers:
   *     -has-draft:
   *         Whether there's any draft objects present.
   *
   * Structure:
   *     <div class="rb-c-unified-banner__review">
   *      <div class="rb-c-unified-banner__controls">
   *      </div>
   *      <div class="rb-c-unified-banner__changedesc">...</div>
   *     </div>
   */
  /**
   * The change description field.
   *
   * Structure:
   *     <div clas="rb-c-unified-banner__changedesc">
   *      <p>
   *       <label for="field_change_description">
   *        Describe your changes (optional):
   *       </label>
   *      </p>
   *      <pre id="field_change_description" class="field field-text-area"
   *           data-field-id="field_change_description"></pre>
   *     </div>
   */
  /**
   * The block of controls relating to reviews and drafts.
   *
   * Structure:
   *     <div class="rb-c-unified-banner__controls">
   *      <div class="rb-c-unified-banner__mode-selector">
   *       ...
   *      </div>
   *      <div class="rb-c-unified-banner__draft-actions">
   *       <input type="button" id="btn-review-request-discard"
   *              value="Discard">
   *      </div>
   *      <menu class="rb-c-unified-banner__review-actions rb-c-actions"
   *            role="menu">
   *       ...
   *      </menu>
   *     </div>
   */
  /**
   * The draft mode selector.
   *
   * Structure:
   *     <div class="rb-c-unified-banner__mode-selector">
   *      <div class="rb-c-unified-banner__menu">
   *       <a class="rb-c-unified-banner__mode">
   *        <span class="rb-c-unified-banner__menu-label">...<?span>
   *       </a>
   *       <div class="rb-c-menu">...</div>
   *      </div>
   *     </div>
   */
  /**
   * The menu within the draft mode selector.
   *
   * Modifiers:
   *     -is-open:
   *         The menu is open.
   */
  /**
   * The mode label.
   */
  /**
   * The "Review" menu and other actions.
   */
  /*
   * This makes sure that items in the review menu are clickable across
   * their entire breadth.
   */
  /**
   * The link to the interdiff, if present.
   *
   * Structure:
   *     <div class="rb-c-unified-banner__interdiff-link">
   *      This draft adds a new diff.
   *      <a href="...">Show changes</a>
   *     </div>
   */
  /**
   * The "dock" portion of the unified banner.
   */
}
.rb-c-unified-banner.-has-multiple {
  box-shadow: none;
}
.rb-c-unified-banner.-has-multiple::after {
  background: #D1F5A9;
  border-color: #49BB18;
  border-style: solid;
  border-width: 0 1px 1px 1px;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.6);
  content: ' ';
  display: block;
  height: 2px;
  margin: 0 0.3em;
}
.rb-c-unified-banner a {
  color: #000000;
  cursor: pointer;
  text-decoration: none;
}
.rb-c-unified-banner__review {
  background: #FEFADF;
  border-bottom: 1px #BCA626 solid;
  display: flex;
  flex-direction: column;
  padding: 0 10px;
  position: relative;
}
.-has-draft .rb-c-unified-banner__review {
  background: #D1F5A9;
  border-bottom: 1px #49BB18 solid;
}
.rb-c-unified-banner__changedesc {
  padding-bottom: 10px;
}
.rb-c-unified-banner__changedesc > label {
  line-height: 16px;
}
.rb-c-unified-banner__changedesc > p {
  margin: 0 0 10px;
}
.rb-c-unified-banner__changedesc .rb-c-text-editor {
  margin-top: 0;
}
.rb-c-unified-banner__controls {
  align-items: baseline;
  display: flex;
  gap: 10px;
}
.rb-c-unified-banner__controls > div:not(:empty) {
  margin-right: 1em;
}
.rb-c-unified-banner__mode-selector {
  margin-left: -10px;
}
.rb-c-unified-banner__mode-selector .rb-c-menu {
  background: #D1F5A9;
  border-color: #49BB18;
  font-size: 9pt;
  font-weight: bold;
  margin-left: -1px;
  min-width: 30em;
}
.rb-c-unified-banner__mode-selector .rb-c-menu__item:not(.rb-c-button):focus,
.rb-c-unified-banner__mode-selector .rb-c-menu__item:not(.rb-c-button):hover {
  background: #aced64;
}
.rb-c-unified-banner__menu.-is-open .rb-c-unified-banner__mode {
  border-bottom: 1px #D1F5A9 solid;
  border-left: 1px #49BB18 solid;
  border-right: 1px #49BB18 solid;
  box-sizing: border-box;
  margin: 0 -1px -1px -1px;
  position: relative;
  z-index: 111;
}
.rb-c-unified-banner__review-actions {
  margin: 0;
  padding: 0;
}
.rb-c-unified-banner .rb-c-actions {
  list-style: none;
}
.rb-c-unified-banner__mode,
.rb-c-unified-banner #action-review-menu > a {
  box-sizing: border-box;
  display: block;
  font-size: 9pt;
  font-weight: bold;
  padding: 10px;
}
.rb-c-unified-banner #action-review-menu .rb-c-menu__item {
  padding: 0;
}
.rb-c-unified-banner #action-review-menu .rb-c-menu__item > a {
  display: inline-block;
  padding: 0.8em 1em;
}
.rb-c-unified-banner__interdiff-link {
  margin-top: 1em;
}
.rb-c-unified-banner__interdiff-link a {
  color: #124BBD;
}
.rb-c-unified-banner__dock:not(:empty) {
  background: #FEFADF;
  border-bottom: 1px #BCA626 solid;
  padding: 10px;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .rb-c-unified-banner__changedesc {
    padding: 0 10px 10px 10px;
  }
  .rb-c-unified-banner__controls {
    flex-wrap: wrap;
  }
  .rb-c-unified-banner__mode-selector {
    margin-left: 0;
  }
  .rb-c-unified-banner__review {
    padding: 0;
    z-index: 110;
  }
}
.box,
.modalbox {
  background-color: #FEFEFE;
  border: 1px #AAAEA1 solid;
  border-radius: 6px;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
  box-sizing: border-box;
  background-position: top left;
  background-repeat: repeat-x;
}
.box.important {
  background-color: #FDF2A0;
  background-image: url("../../images/gold_box_top_bg.png");
  border: 1px #B7A93E solid;
  padding: 0 10px;
}
.box.important .box-inner {
  background: url("../../images/important.png") no-repeat top left;
  padding: 0 0 0 50px;
}
.box.tip {
  background-color: #FDF2A0;
  background-image: url("../../images/gold_box_top_bg.png");
  border: 1px #B7A93E solid;
  padding: 0 10px;
}
.box.tip .box-inner {
  background: transparent;
}
.box.tip h1 {
  padding-left: 0;
}
.box.trophies {
  background-color: #fdf2a0;
  background-image: url('../../images/gold_box_top_bg.png');
  border: 1px #b7a93e solid;
  padding: 0 5px;
}
.box.trophies h1 {
  margin: 0;
  padding: 0 0 0 0.5em;
}
.box.trophies img {
  margin: 0;
  padding: 0;
  position: absolute;
  bottom: 0;
}
.box.trophies .box-inner {
  background: transparent;
  position: relative;
}
.box.trophies .trophy-row {
  position: relative;
  margin: 30px 0 10px 0;
}
.box.trophies .trophy-row:first-child {
  margin-top: 10px;
}
.box-head,
.modalbox-title {
  background: #D0E6FF;
  border-bottom: 1px #A5B9D0 solid;
  margin: 0;
  padding: 0.4em 0.6em;
  border-radius: 6px 6px 0 0;
}
.box-title,
.modalbox-title {
  font-size: 120%;
}
.box-title {
  margin: 0;
  padding: 0;
}
.box-main {
  padding: 1em;
}
.box-container {
  margin-bottom: 10px;
  width: 100%;
}
.box-inner,
.modalbox-inner {
  background-image: url('../../images/box_bottom_bg.png');
  background-position: bottom left;
  background-repeat: repeat-x;
  border-radius: 6px;
  padding-bottom: 1px\9;
  /* IE wants this. The \9 targets IE 7,8,9. */
}
.box-inner form {
  margin: 0;
}
.modalbox,
.modalbox-bg {
  z-index: 120;
}
/**
 * A button.
 *
 * Buttons are clickable and perform an action when clicked. They generally
 * contain text or other markup (like an embedded icon).
 *
 * This component is automatically used for ``<button>``,
 * ``<input type="submit">``, and ``<input type="button">`` elements. It
 * can be used explicitly for other elements (such as an ``<a>``), in which
 * case ``aria-role="button"`` should also be set.
 *
 * Buttons may contain a ``<span class="djblets-o-spinner"></span>`` to show
 * a spinner. This will be themed properly for the state of the button.
 *
 * They may also contain ``.rb-c-button__icon`` and ``.rb-c-button__label``
 * children to style an icon and label. These will be spaced appropriately.
 *
 * Modifiers:
 *     -is-danger:
 *         Indicates that the button performs an operation that might result
 *         in data loss (such as discarding a form or deleting data).
 *
 *     -is-disabled:
 *         Indicates that the button is disabled. This is only needed when
 *         applying the ``rb-c-button`` class to something other than a
 *         ``<button>`` or ``<input>``, which have their own ``disabled``
 *         DOM attribute.
 *
 *     -is-primary:
 *         Indicates that the button is the primary button on a form. This
 *         generally implies that the button is the default.
 *
 * DOM Attributes:
 *     aria-role (optional):
 *         Should be set to "button" if using an element other than
 *         ``<button>`` or ``<input>``.
 *
 *     data-action (optional):
 *         An action the button should perform.
 *
 *         This may be used by implementations to differentiate buttons, or to
 *         handle styling per-button (using ``&[data-action="..."]``).
 *
 *         Version Added:
 *             6.0
 *
 *     disabled (optional):
 *         Disables the button. This is used instead of the ``-is-disabled``
 *         modifier when the element is a ``<button>`` or ``<input>``.
 *
 *     role (optional):
 *         This should always be set to "button" when on an element other
 *         than ``<button>`` or ``<input>``. The exception is when using
 *         the ``-is-segmented`` modifier.
 *
 *     type (optional):
 *         Set to "button" if this is a ``<button>`` inside of a form, and
 *         you don't want it to submit the form.
 *
 * Structure:
 *     <button class="[modifiers]">...</button>
 *
 *     <button class="rb-c-button [modifiers]">...</button>
 *
 *     <button class="rb-c-button [modifiers]">
 *      <span class="rb-c-button__icon"></span>
 *      <label class="rb-c-button__label">...</label>
 *     </button>
 *
 *     <input type="submit" class="rb-c-button [modifiers]">
 *
 *     <input type="submit" class="[modifiers]">
 *
 *     <input type="button" class="rb-c-button [modifiers]">
 *
 *     <input type="button" class="[modifiers]">
 *
 *     <a class="rb-c-button [modifiers]" role="button" href="...">...</a>
 *
 *     <a class="rb-c-button [modifiers]" role="button" href="...">
 *      <span class="rb-c-button__icon"></span>
 *      <label class="rb-c-button__label">...</label>
 *     </a>
 */
.rb-c-button,
button,
input[type="button"],
input[type="submit"],
.btn,
.btn-segment {
  border: 1px #C0C0C0 solid;
  border-radius: 4px;
  color: #333333;
  cursor: pointer;
  display: inline-flex;
  gap: 0.5em;
  align-items: center;
  justify-content: center;
  font-family: Verdana, Arial, Helvetica, Sans-Serif;
  font-weight: normal;
  font-size: 13px;
  line-height: normal;
  padding: 3px 8px;
  text-decoration: none;
  transition: 0.1s linear all;
  background-color: #E9E9E9;
  background-repeat: no-repeat;
  background-image: linear-gradient(to bottom, #FFFFFF, #FFFFFF 25%, #E9E9E9);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFF', endColorstr='#E9E9E9', GradientType=0);
}
.rb-c-button:hover,
.rb-c-button.js-hover,
button:hover,
button.js-hover,
input[type="button"]:hover,
input[type="button"].js-hover,
input[type="submit"]:hover,
input[type="submit"].js-hover,
button:hover,
input[type="submit"]:hover,
.btn:hover,
.btn-segment:hover,
button .hover,
input[type="submit"] .hover,
.btn .hover,
.btn-segment .hover {
  background-position: 0 -15px;
  color: #333333;
  text-decoration: none;
}
.rb-c-button:link,
.rb-c-button:visited,
button:link,
button:visited,
input[type="button"]:link,
input[type="button"]:visited,
input[type="submit"]:link,
input[type="submit"]:visited,
button:link,
input[type="submit"]:link,
.btn:link,
.btn-segment:link,
button:visited,
input[type="submit"]:visited,
.btn:visited,
.btn-segment:visited {
  color: #333333;
}
.rb-c-button[disabled],
.rb-c-button.-is-disabled,
button[disabled],
button.-is-disabled,
input[type="button"][disabled],
input[type="button"].-is-disabled,
input[type="submit"][disabled],
input[type="submit"].-is-disabled,
button.disabled,
input[type="submit"].disabled,
.btn.disabled,
.btn-segment.disabled {
  color: #D0D0D0;
  cursor: default;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}
.rb-c-button.-is-danger,
button.-is-danger,
input[type="button"].-is-danger,
input[type="submit"].-is-danger,
button.danger,
input[type="submit"].danger,
.btn.danger,
.btn-segment.danger {
  color: #FFFFFF !important;
  background-color: #DE1717;
  background-repeat: repeat-x;
  background-image: linear-gradient(to bottom, #EA3939, #DE1717);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#EA3939', endColorstr='#DE1717', GradientType=0);
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
  border-color: #DE1717 #DE1717 #991010;
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
}
.rb-c-button.-is-primary,
button.-is-primary,
input[type="button"].-is-primary,
input[type="submit"].-is-primary,
button.default,
input[type="submit"].default,
.btn.default,
.btn-segment.default,
button.primary,
input[type="submit"].primary,
.btn.primary,
.btn-segment.primary {
  color: #FFFFFF;
  background-color: #2378DB;
  background-repeat: repeat-x;
  background-image: linear-gradient(to bottom, #4A90E2, #2378DB);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#4A90E2', endColorstr='#2378DB', GradientType=0);
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
  border-color: #2378DB #2378DB #185499;
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
}
.rb-c-button.-is-danger .djblets-o-spinner,
.rb-c-button.-is-primary .djblets-o-spinner,
button.-is-danger .djblets-o-spinner,
button.-is-primary .djblets-o-spinner,
input[type="button"].-is-danger .djblets-o-spinner,
input[type="button"].-is-primary .djblets-o-spinner,
input[type="submit"].-is-danger .djblets-o-spinner,
input[type="submit"].-is-primary .djblets-o-spinner {
  background-image: url("data:image/svg+xml,%3Csvg%20width%3D%22100%25%22%20height%3D%22100%25%22%20viewBox%3D%220%200%2016%2016%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20style%3D%22stroke-linecap%3Around%3Bstroke-linejoin%3Around%3Bstroke-miterlimit%3A1.5%3B%22%3E%0A%20%3Cpath%20d%3D%22M11.514%2C14.035c-1.032%2C0.603%20-2.233%2C0.948%20-3.514%2C0.948c-3.854%2C0%20-6.983%2C-3.129%20-6.983%2C-6.983c0%2C-3.854%203.129%2C-6.983%206.983%2C-6.983%22%20style%3D%22fill%3Anone%3Bstroke%3A%23FFF%3Bstroke-width%3A2px%3B%22%2F%3E%0A%20%3CanimateTransform%0A%20%20%20attributeName%3D%22transform%22%0A%20%20%20type%3D%22rotate%22%0A%20%20%20from%3D%220%200%200%22%0A%20%20%20to%3D%22360%200%200%22%0A%20%20%20dur%3D%221.0s%22%0A%20%20%20repeatCount%3D%22indefinite%22%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.rb-c-button > *,
button > *,
input[type="button"] > *,
input[type="submit"] > * {
  cursor: inherit;
}
/*
 * NOTE: The following are provided separately due to the use of &:extend()
 *       below, which would cause these definitions to be lost if part of
 *       ``.rb-c-button`` above.
 */
/**
 * The icon for a button.
 *
 * Consumers are responsible for styling the icon, using Review Board
 * icons, FontAwesome, or some other mechanism. This can be done by
 * attaching additional CSS classes or styling in CSS.
 *
 * If including any text-based content for the icon, consider using
 * ``aria-hidden="true"``.
 *
 * Version Added:
 *     6.0
 *
 * DOM Attributes:
 *     aria-hidden (boolean):
 *         Should always be set to ``true``.
 *
 * Structure:
 *     <span class="rb-c-button__icon [...]"
 *           aria-hidden="true">
 *      [...]
 *     </span>
 */
.rb-c-button__icon {
  min-width: 1em;
}
/**
 * The label for a button.
 *
 * This should be used when the button also contains an icon, to properly
 * handle styling of both the icon and label.
 *
 * Version Added:
 *     6.0
 *
 * Structure:
 *     <label class="rb-c-button__label">text...</label>
 */
/*
 * Give all standard buttons the .rb-c-button component by default.
 */
/**
 * A group of buttons arranged compactly in a row.
 *
 * Button groups have the appearance of one large button split into
 * multiple clickable areas. They're useful for things like buttons with
 * dropdowns and toolbars.
 *
 * Children must be ``.rb-c-button`` components or ``<button>`` elements.
 *
 * Modifiers:
 *     -is-vertical:
 *         Lays out the buttons vertically instead of horizontally.
 *
 * DOM Attributes:
 *     aria-label (required):
 *         A descriptive label for screen readers (e.g., "Text formatting").
 *
 *     role (required):
 *         This should be set to "group" in most cases. If this button
 *         group is simulating a toolbar, set this to "toolbar".
 *
 * Structure:
 *     <div class="rb-c-button-group [modifiers]" role="..."
 *          aria-label="...">
 *      <button class="rb-c-button">...</button>
 *      ...
 *     </div>
 */
.rb-c-button-group,
.btn-segmented,
.split-btn .split-btn-alternatives {
  border: 1px #C0C0C0 solid;
  border-radius: 4px;
  display: inline-flex;
  /* Make sure there's no space between buttons. */
  font-size: 0;
}
.rb-c-button-group:not(.-is-vertical),
.btn-segmented,
.split-btn .split-btn-alternatives {
  /* Default horizontal layouts. */
}
.rb-c-button-group:not(.-is-vertical) > .btn-segment,
.rb-c-button-group:not(.-is-vertical) > button,
.rb-c-button-group:not(.-is-vertical) > .rb-c-button,
.rb-c-button-group:not(.-is-vertical) > button,
.rb-c-button-group:not(.-is-vertical) > input[type="button"],
.rb-c-button-group:not(.-is-vertical) > input[type="submit"],
.btn-segment {
  /*
       * Set these based on a defaut horizontal orientation. We'll round out
       * the corners of the first and last buttons, and add borders in-between
       * each.
       */
  border-top: 0;
  border-right: 0;
  border-bottom: 0;
  border-left: inherit;
  border-radius: 0;
}
.rb-c-button-group:not(.-is-vertical) > .btn-segment:first-child,
.rb-c-button-group:not(.-is-vertical) > button:first-child,
.rb-c-button-group:not(.-is-vertical) > .rb-c-button:first-child,
.rb-c-button-group:not(.-is-vertical) > button:first-child,
.rb-c-button-group:not(.-is-vertical) > input[type="button"]:first-child,
.rb-c-button-group:not(.-is-vertical) > input[type="submit"]:first-child,
.btn-segment:first-child {
  border-left: 0;
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}
.rb-c-button-group:not(.-is-vertical) > .btn-segment:last-child,
.rb-c-button-group:not(.-is-vertical) > button:last-child,
.rb-c-button-group:not(.-is-vertical) > .rb-c-button:last-child,
.rb-c-button-group:not(.-is-vertical) > button:last-child,
.rb-c-button-group:not(.-is-vertical) > input[type="button"]:last-child,
.rb-c-button-group:not(.-is-vertical) > input[type="submit"]:last-child,
.btn-segment:last-child {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}
.rb-c-button-group.-is-vertical > .btn-segment,
.rb-c-button-group.-is-vertical > button,
.rb-c-button-group.-is-vertical > .rb-c-button,
.rb-c-button-group.-is-vertical > button,
.rb-c-button-group.-is-vertical > input[type="button"],
.rb-c-button-group.-is-vertical > input[type="submit"],
.split-btn .split-btn-alternatives .btn {
  border-top: inherit;
  border-left: 0;
  border-right: 0;
  border-bottom: 0;
  border-radius: 0;
  display: block;
  text-align: left;
  width: 100%;
}
.rb-c-button-group.-is-vertical > .btn-segment:first-child,
.rb-c-button-group.-is-vertical > button:first-child,
.rb-c-button-group.-is-vertical > .rb-c-button:first-child,
.rb-c-button-group.-is-vertical > button:first-child,
.rb-c-button-group.-is-vertical > input[type="button"]:first-child,
.rb-c-button-group.-is-vertical > input[type="submit"]:first-child,
.split-btn .split-btn-alternatives .btn:first-child {
  border-top: 0;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.rb-c-button-group.-is-vertical > .btn-segment:last-child,
.rb-c-button-group.-is-vertical > button:last-child,
.rb-c-button-group.-is-vertical > .rb-c-button:last-child,
.rb-c-button-group.-is-vertical > button:last-child,
.rb-c-button-group.-is-vertical > input[type="button"]:last-child,
.rb-c-button-group.-is-vertical > input[type="submit"]:last-child,
.split-btn .split-btn-alternatives .btn:last-child {
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
/**
 * A button that displays a drop-down menu.
 *
 * Menu buttons consist of either a single button or a button group that,
 * when clicked, displays a drop-down (or drop-up) menu.
 *
 * The menu can optionally be a list of buttons, when mixing in a
 * ``.rb-c-button-group`` into the ``.rb-c-menu`` element and ``.rb-c-button``
 * into the ``.rb-c-menu__item`` elements.
 *
 * DOM Attributes:
 *     role (required):
 *         This should be set to "group".
 *
 * Structure:
 *     <div class="rb-c-menu-button" role="group">
 *      <button class="rb-c-button rb-c-menu-button__toggle"
 *              id="<label ID>"
 *              aria-controls="<menu ID>"
 *              aria-haspopup="true"
 *              aria-label="...">
 *       ...
 *      </button>
 *      <div class="rb-c-menu" role="menu" tabindex="-1" id="<menu ID>"
 *           aria-labelledby="<label ID>">
 *       ...
 *      </div>
 *     </div>
 *
 *     <div class="rb-c-menu-button" role="group">
 *      <div class="rb-c-button-group" role="group">
 *       <button class="rb-c-button rb-c-menu-button__primary">...</button>
 *       <button class="rb-c-button rb-c-menu-button__toggle"
 *               id="<label ID>"
 *               aria-controls="<menu ID>"
 *               aria-haspopup="true"
 *               aria-label="...">
 *        ...
 *       </button>
 *      </div>
 *      <div class="rb-c-menu" role="menu" tabindex="-1" id="<menu ID>"
 *           aria-labelledby="<label ID>">
 *       ...
 *      </ul>
 *     </div>
 */
.rb-c-menu-button,
.split-btn {
  border-radius: 4px 4px 0 0;
  display: inline-block;
  position: relative;
  transition: 0.25s linear border;
  /**
   * A primary action button, for split menu buttons.
   *
   * Structure:
   *     <button class="rb-c-menu-button__primary rb-c-button"
   *             type="button">
   *      text or icon...
   *     </button>
   */
  /**
   * The button that toggles the display of a menu.
   *
   * Structure:
   *     <button class="rb-c-menu-button__toggle rb-c-button"
   *             id="<label id>" aria-haspopup="true" type="button">
   *      [text...]
   *      <span class="rb-icon rb-icon-dropdown-arrow"></span>
   *     </button>
   */
}
.rb-c-menu-button:not(.-opens-up) {
  /* Default drop-down styling. */
}
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > .btn-segment,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > .rb-c-button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > input[type="button"],
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu > input[type="submit"] {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > .btn-segment,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > .rb-c-button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > button,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > input[type="button"],
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > input[type="submit"] {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > .btn-segment:first-child,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > button:first-child,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > .rb-c-button:first-child,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > button:first-child,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > input[type="button"]:first-child,
.rb-c-menu-button:not(.-opens-up) > .rb-c-menu.-is-vertical > input[type="submit"]:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button.-opens-up > .rb-c-menu {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.-opens-up > .rb-c-menu > .btn-segment,
.rb-c-menu-button.-opens-up > .rb-c-menu > button,
.rb-c-menu-button.-opens-up > .rb-c-menu > .rb-c-button,
.rb-c-menu-button.-opens-up > .rb-c-menu > button,
.rb-c-menu-button.-opens-up > .rb-c-menu > input[type="button"],
.rb-c-menu-button.-opens-up > .rb-c-menu > input[type="submit"] {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > .btn-segment,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > button,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > .rb-c-button,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > button,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > input[type="button"],
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > input[type="submit"] {
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > .btn-segment:last-child,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > button:last-child,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > .rb-c-button:last-child,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > button:last-child,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > input[type="button"]:last-child,
.rb-c-menu-button.-opens-up > .rb-c-menu.-is-vertical > input[type="submit"]:last-child {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.js-open:not(.-opens-up) {
  /* Default drop-down styling. */
}
.rb-c-menu-button.js-open:not(.-opens-up) > .btn-segment,
.rb-c-menu-button.js-open:not(.-opens-up) > button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button,
.rb-c-menu-button.js-open:not(.-opens-up) > button,
.rb-c-menu-button.js-open:not(.-opens-up) > input[type="button"],
.rb-c-menu-button.js-open:not(.-opens-up) > input[type="submit"] {
  border-bottom: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu),
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu),
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > .btn-segment,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > .rb-c-button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > input[type="button"],
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu) > input[type="submit"],
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu) > .btn-segment,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu) > button,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu) > .rb-c-button,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > .btn-segment,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > button,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > .rb-c-button {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .btn-segment,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .rb-c-button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="button"],
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="submit"],
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .btn-segment,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > button,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .rb-c-button,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .btn-segment,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > button,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .rb-c-button {
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .btn-segment:last-child,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button:last-child,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .rb-c-button:last-child,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button:last-child,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="button"]:last-child,
.rb-c-menu-button.js-open:not(.-opens-up) > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="submit"]:last-child,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .btn-segment:last-child,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > button:last-child,
.split-btn.drop-down-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .rb-c-button:last-child,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .btn-segment:last-child,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > button:last-child,
.split-btn.drop-down-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .rb-c-button:last-child {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.rb-c-menu-button.js-open.-opens-up > .btn-segment,
.rb-c-menu-button.js-open.-opens-up > button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button,
.rb-c-menu-button.js-open.-opens-up > button,
.rb-c-menu-button.js-open.-opens-up > input[type="button"],
.rb-c-menu-button.js-open.-opens-up > input[type="submit"] {
  border-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu),
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu),
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > .btn-segment,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > .rb-c-button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > input[type="button"],
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu) > input[type="submit"],
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu) > .btn-segment,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu) > button,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu) > .rb-c-button,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > .btn-segment,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > button,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu) > .rb-c-button {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .btn-segment,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .rb-c-button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="button"],
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="submit"],
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .btn-segment,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > button,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .rb-c-button,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .btn-segment,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > button,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .rb-c-button {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .btn-segment:first-child,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button:first-child,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > .rb-c-button:first-child,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > button:first-child,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="button"]:first-child,
.rb-c-menu-button.js-open.-opens-up > .rb-c-button-group:not(.rb-c-menu).-is-vertical > input[type="submit"]:first-child,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .btn-segment:first-child,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > button:first-child,
.split-btn.drop-up-shown .btn-segmented:not(.rb-c-menu).-is-vertical > .rb-c-button:first-child,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .btn-segment:first-child,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > button:first-child,
.split-btn.drop-up-shown .split-btn .split-btn-alternatives:not(.rb-c-menu).-is-vertical > .rb-c-button:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rb-c-menu-button > .rb-c-button,
.rb-c-menu-button > .rb-c-button-group .rb-c-button,
.rb-c-menu-button > button,
.rb-c-menu-button > .rb-c-button-group button,
.rb-c-menu-button > input[type="button"],
.rb-c-menu-button > .rb-c-button-group input[type="button"],
.rb-c-menu-button > input[type="submit"],
.rb-c-menu-button > .rb-c-button-group input[type="submit"] {
  border-bottom: transparent;
  margin: 0;
}
.rb-c-menu-button > .rb-c-menu,
.split-btn .split-btn-alternatives {
  position: absolute;
  white-space: nowrap;
}
.rb-c-menu-button > .rb-c-menu.-is-open {
  visibility: visible;
}
/**
 * Deprecated styling variables for buttons.
 *
 * Deprecated:
 *     4.0:
 *     These have been replaced by definitions in ``#rb-ns-ui.buttons``.
 */
/**
 * Old style for buttons.
 *
 * Deprecated:
 *     4.0:
 *     This has been replaced with ``.rb-c-button``, and will be removed
 *     in a future release.
 */
/**
 * Old style for segmented button groups.
 *
 * Deprecated:
 *     4.0:
 *     This has been replaced with ``.rb-c-button-group``, and will be
 *     removed in a future release.
 */
.btn-segmented,
.split-btn .split-btn-alternatives {
  /* Override .btn styles. */
  background: none;
  padding: 0;
}
/**
 * Old style for button segments.
 *
 * Deprecated:
 *     4.0:
 *     This has been replaced with ``.rb-c-button`` nested inside of a
 *     ``.rb-c-button-group``, and will be removed in a future release.
 */
.split-btn .split-btn-alternatives {
  background: #FFFFFF;
  border: 1px #C0C0C0 solid;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.05);
  display: none;
  list-style: none;
  opacity: 0;
  margin: 0;
  padding: 0;
  position: absolute;
  transition: opacity 0.2s linear;
  visibility: hidden;
  z-index: 110;
  /**
   * A menu item.
   *
   * This may contain any content needed in the menu item, but will usually
   * consist of text.
   *
   * The element type may be anything, and will depend on the parent
   * ``.rb-c-menu``. It will most commonly be a ``<li>``, ``<a>``, ``<div>``,
   * or ``<button>``.
   *
   * If displaying a button-based menu, this must have ``.rb-c-button`` mixed
   * in.
   *
   * Consumers are responsible for marking a menu item as focused in response
   * to keyboard navigation or mouse movements, in order to convey the active
   * item.
   *
   * DOM Attributes:
   *     role (required):
   *         This must be set to "menuitem".
   *
   *     tabindex (required):
   *         This must be set to -1, allowing the menu to be focused
   *         programmatically but not through tabbing. Consumers should provide
   *         keep
   *
   * Structure:
   *     <li class="rb-c-menu__item" role="menuitem" tabindex="-1">...</li>
   *
   *     <a class="rb-c-menu__item" role="menuitem" tabindex="-1">...</a>
   *
   *     <button class="rb-c-menu__item rb-c-button" role="menuitem"
   *             type="button" tabindex="-1">
   *      ...
   *     </button>
   */
  /**
   * A menu separator.
   */
}
.split-btn .split-btn-alternatives.-is-open {
  display: block;
  opacity: 1;
  visibility: visible;
}
.split-btn .split-btn-alternatives.js-no-animation {
  transition: none;
}
.split-btn .split-btn-alternatives__item {
  cursor: pointer;
  display: block;
  list-display: none;
  margin: 0;
}
.split-btn .split-btn-alternatives__item.rb-c-button:focus,
.split-btn .split-btn-alternatives__itembutton:focus,
.split-btn .split-btn-alternatives__iteminput[type="button"]:focus,
.split-btn .split-btn-alternatives__iteminput[type="submit"]:focus {
  background: #DAEBFF;
  outline: 0;
}
.split-btn .split-btn-alternatives__item:not(.rb-c-button) {
  /*
       * We want to apply padding to standard list items, but button list
       * items should retain button padding.
       */
  padding: 0.8em 1em;
}
.split-btn .split-btn-alternatives__item:not(.rb-c-button):focus,
.split-btn .split-btn-alternatives__item:not(.rb-c-button):hover {
  background: #DAEBFF;
  outline: 0;
}
.split-btn .split-btn-alternatives__separator {
  border-bottom: 1px #C0C0C0 solid;
}
button.large,
input[type="submit"].large,
.btn.large,
.btn-segment.large {
  font-size: 130%;
  line-height: normal;
  padding: 9px 14px 9px;
  border-radius: 6px;
}
button.small,
input[type="submit"].small,
.btn.small,
.btn-segment.small {
  padding: 7px 9px 7px;
  font-size: 11px;
}
/**
 * Styles, variables, and mixins for the rb-c-content-header component.
 */
/**
 * Header area for a section of content.
 *
 * This provides a consistent header above an area of content. This may be
 * above the main content area for a page, above a section of list items, or
 * any other part of the UI.
 *
 * Modifiers:
 *     -is-main:
 *         Whether this is the main header for the page. This will use a
 *         slightly larger font size and provide additional padding/margins.
 *
 * Structure:
 *     <header class="rb-c-content-header -is-main">
 *      <h1 class="rb-c-content-header__title">...</h1>
 *      <div class="rb-c-content-header__actions">...</div>
 *     </header>
 */
.rb-c-content-header {
  padding: 0;
  margin: 0;
  position: relative;
  vertical-align: middle;
  /**
   * An actions area, shown just to the right of the title.
   *
   * This can be used to place icons or text that can perform actions when
   * clicked. It is up to the consumer to handle any rendering of the actions.
   *
   * Structure:
   *     <div class="rb-c-content-header__actions">
   *      <div class="rb-c-content-header__action">...</div>
   *      ...
   *     </div>
   */
  /**
   * An action shown in the header's actions area.
   *
   * The content and implementation of the action is dependent on the consumer.
   *
   * Structure:
   *     <div class="rb-c-content-header__action">...</div>
   */
  /**
   * The title for the header.
   *
   * This should use a standard ``<h1>``, ``<h2>``, etc. element as appropriate
   * for the position on the page, for semantic reasons. There are no
   * differences in how they are rendered, though.
   *
   * Structure:
   *     <h2 class="rb-c-content-header__title">...</h2>
   */
}
.rb-c-content-header__actions {
  display: inline-block;
}
.rb-c-content-header__action {
  display: inline-block;
  margin-left: 1em;
}
.rb-c-content-header__title {
  color: #444444;
  font-size: 110%;
  font-weight: bold;
  text-transform: uppercase;
  display: inline-block;
  margin: 0;
  padding: 0;
}
/*
 * Applies to the body tag, and prepares the page for a datagrid that can
 * fit the contents of the page.
 */
body.datagrid-page #page-container #content table:after {
  clear: both;
}
body.datagrid-page #page-container #content .datagrid-body-container {
  overflow-y: auto;
}
body.datagrid-page #page-container #content .datagrid-wrapper {
  height: 100%;
}
body.datagrid-page #page-container #content .main {
  padding: 0;
}
.datagrid tr,
.datagrid tr:hover {
  background: #FFFFFF;
}
.datagrid tr.even,
.datagrid tr.even:hover {
  background: #FBFBFB;
}
.datagrid tbody td,
.datagrid tbody th {
  padding: 0.75em;
  vertical-align: middle;
}
.datagrid tbody td:last-child,
.datagrid tbody th:last-child {
  border-right: 0 !important;
}
.datagrid tbody tr:first-child td,
.datagrid tbody tr:first-child th {
  border-top: 0 !important;
}
.datagrid tbody tr {
  background: #FEFEFE;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .datagrid tbody tr.even th:first-child {
    background: #E3E3E3;
  }
  .datagrid tbody tr.odd th:first-child {
    background: #EEE;
  }
  .datagrid tbody tr td,
  .datagrid tbody tr th {
    padding-top: 10px;
    border-bottom-width: 2px;
  }
  .datagrid tbody tr th:first-child {
    border-right: 1px #CCC solid;
    border-bottom: 0;
    font-weight: normal;
    color: #444;
    padding-left: 10px;
  }
  .datagrid tbody tr.mobile-only-row td,
  .datagrid tbody tr.mobile-only-row th {
    padding-top: 0.75em;
  }
}
.datagrid td,
.datagrid th {
  text-align: left;
}
.datagrid td tbody a,
.datagrid th tbody a,
.datagrid td tbody a:link,
.datagrid th tbody a:link,
.datagrid td tbody a:visited,
.datagrid th tbody a:visited {
  color: #124BBD;
}
.datagrid-body-container {
  background: #FEFEFE;
}
/*
 * Give both the fixed header table and the (eventually) hidden headers
 * row in the body table a matching background and border style.
 */
.datagrid-head,
.datagrid-body .datagrid-headers {
  background: #D0E6FF;
  border-bottom: 1px #AAAEA1 solid;
  border-radius: 6px 6px 0 0;
}
.datagrid-headers {
  border-collapse: collapse;
  border-spacing: 0;
  overflow: hidden;
}
.datagrid-header {
  padding: 0.5em 0.75em;
}
.datagrid-header a {
  color: inherit;
}
.datagrid-header .rb-icon-datagrid-column-shipits-issues {
  margin-left: 4px;
}
.datagrid-main {
  border: 1px #AAAEA1 solid;
  border-radius: 6px;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
  box-sizing: border-box;
  overflow: hidden;
  z-index: 1;
}
.datagrid-menu {
  /*
   * Override the Edit Columns menu to only show a border on the left.
   * The menu should be flush with the top, bottom, and right of the
   * table.
   */
  border: 0;
  border-left: 1px #AAAEA1 solid;
  margin-top: 1px;
  /*
   * Override the default style for the "checkboxes" to not show a border.
   * The actual checkmarks will be indication enough.
   *
   * Note that we still retain a faint hover style, showing a light grey
   * box where the checkbox is.
   */
}
.datagrid-menu a {
  color: inherit;
}
.datagrid-menu .datagrid-menu-checkbox {
  border: 0;
}
.datagrid-title-tabs {
  display: inline-block;
  list-style: none;
  /*
   * Position the tabs immediately above the header, so that the active
   * tab can sit directly on top of the border.
   */
  margin: 0 0 0 4em;
  padding: 0;
  position: relative;
  vertical-align: middle;
  z-index: 20;
}
.datagrid-title-tabs .datagrid-tab {
  background: white;
  border: 1px #AAAEA1 solid;
  border-right-width: 0;
  float: left;
  padding: 0;
  /*
     * Position the bottom of the tab so it's sitting right on the header's
     * border. We'll then turn off the border for the active tab below,
     * so it's flush with the header.
     */
  margin: 0 0 -1px 0;
}
.datagrid-title-tabs .datagrid-tab:first-child {
  border-top-left-radius: 6px;
}
.datagrid-title-tabs .datagrid-tab:last-child {
  border-top-right-radius: 6px;
  border-right-width: 1px;
}
.datagrid-title-tabs .datagrid-tab.active {
  background: #D0E6FF;
  border-bottom-color: transparent;
}
.datagrid-title-tabs .datagrid-tab a {
  color: black;
  display: inline-block;
  font-size: 110%;
  text-decoration: none;
  padding: 0.8em 1em;
}
.datagrid-title-tabs .datagrid-showclosed,
.datagrid-title-tabs .datagrid-showarchived {
  padding: 2px 0 0 10px;
}
.datagrid-wrapper .datagrid-titlebox {
  /* Turn off the default styles from Djblet's datagrid stylesheet. */
  background: none;
  border-bottom: 0;
  /*
     * Set the titlebox to be aligned properly with any content that
     * comes immediately before it in .datagrid-main. This may be tabs,
     * for instance.
     */
  display: inline-block;
  margin: 1em 0.5em;
  padding: 0;
  vertical-align: middle;
}
.datagrid-wrapper .datagrid-titlebox .datagrid-title {
  background: transparent;
  border-bottom: 0;
  color: #444;
  text-transform: uppercase;
}
.datagrid-wrapper .datagrid-top-filters {
  display: inline-block;
  top: -1em;
  right: 0;
}
.datagrid-wrapper .datagrid-top-filters a {
  color: #124BBD;
  text-decoration: none;
}
.datagrid-wrapper .datagrid-top-filters a:hover {
  text-decoration: underline;
}
.datagrid-wrapper .datagrid-top-filters .datagrid-filters {
  list-style: none;
  margin: 0 0 0 0;
  padding: 0;
}
.datagrid-wrapper .datagrid-top-filters .datagrid-filters > li {
  display: inline-block;
  margin: 0 0 0 1em;
  padding: 0;
}
.datagrid-wrapper .datagrid-top-filters .datagrid-filters-menu {
  display: none;
  border: 1px transparent solid;
  border-bottom: 0;
  position: relative;
  text-align: center;
  padding: 1em;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .datagrid-wrapper .datagrid-top-filters .datagrid-filters-menu {
    display: block;
  }
}
.datagrid-wrapper .datagrid-top-filters .datagrid-filters-menu .fa {
  color: #333;
  font-size: 1.5em;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .datagrid-wrapper .datagrid-top-filters {
    position: absolute;
    right: 0;
  }
  .datagrid-wrapper .datagrid-top-filters:hover .datagrid-filters {
    opacity: 1;
    visibility: visible;
    /* Overlap the border of the action. */
    margin-top: -1px;
  }
  .datagrid-wrapper .datagrid-top-filters:hover .datagrid-filters-menu {
    background: #FFFFE0;
    border-color: #939300;
    border-radius: 6px 6px 0 0;
    transition: 0.1s border-color linear, 0.1s background linear;
    z-index: 111;
  }
  .datagrid-wrapper .datagrid-top-filters .datagrid-filters {
    background: #FFFFE0;
    border: 1px #939300 solid;
    border-radius: 6px 0 6px 6px;
    opacity: 0;
    position: absolute;
    right: 0;
    transition: 0.1s opacity linear;
    visibility: hidden;
    z-index: 110;
  }
  .datagrid-wrapper .datagrid-top-filters .datagrid-filters li {
    white-space: nowrap;
  }
  .datagrid-wrapper .datagrid-top-filters .datagrid-filters li a {
    color: black;
    display: block;
    padding: 1em;
  }
  .datagrid-wrapper .datagrid-top-filters .datagrid-filters li a:hover {
    text-decoration: none;
  }
}
.datagrid-wrapper .paginator {
  background: #EEEEEE;
  border-top: 1px #BBBBBB solid;
  padding: 0 0 0 1em;
}
.datagrid-wrapper .paginator a:hover {
  background: none;
  color: black;
}
.datagrid-wrapper .paginator a,
.datagrid-wrapper .paginator span {
  display: inline-block;
}
.datagrid-wrapper .paginator a,
.datagrid-wrapper .paginator .current-page {
  border: 0;
  color: #999;
  font-weight: bold;
  min-width: 1em;
  text-align: center;
}
.datagrid-wrapper .paginator a,
.datagrid-wrapper .paginator .current-page,
.datagrid-wrapper .paginator .page-count {
  padding: 0.75em;
}
.datagrid-wrapper .paginator .current-letter {
  background: none;
  border: 0;
  padding: 0;
}
.datagrid-wrapper .paginator .current-letter,
.datagrid-wrapper .paginator .current-page {
  background: none;
  color: black;
}
.datagrid-wrapper .paginator .current-page {
  border-bottom: 3px #777 solid;
}
.datagrid-wrapper .paginator .page-count {
  color: #666;
  font-weight: normal;
  padding-left: 0;
  padding-right: 0;
}
/*
 * Set some common styles for the datagrid header cells.
 *
 * Borders will be turned off by default and the background will match that
 * of the header. When a header is being dragged, the left and right borders
 * will turn on again, to help provide a guide as to boundaries of the
 * column.
 */
#page-container .datagrid-header,
.datagrid-header-drag.datagrid-header {
  background: #D0E6FF;
  border: 0;
}
.datagrid-header-drag.datagrid-header {
  border: 1px #999999 solid;
  border-top: 0;
  border-bottom: 0;
  z-index: 20;
}
.edit-columns .djblets-o-spinner {
  font-size: 16px;
  text-align: center;
}
/****************************************************************************
 * Formal datagrid components
 ****************************************************************************/
/**
 * Page header for a datagrid.
 *
 * This builds upon the ``.rb-c-content-header`` component to offer support
 * for tabs.
 *
 * Tab support currently requires use of the ``.datagrid-title-tabs`` class,
 * which does not meet our current component styles.
 *
 * Modifiers:
 *     -has-tabs:
 *         The header has tabs. This will remove the padding at the bottom
 *         of the header, allowing tabs to be flush.
 *
 * Structure:
 *     <header class="rb-c-datagrid-header rb-c-content-header -is-main">
 *      <h1 class="rb-c-content-header__title">...</h1>
 *      <div class="rb-c-content-header__actions">...</div>
 *     </header>
 *
 *     <header class="rb-c-datagrid-header rb-c-content-header -is-main
 *                    -has-tabs">
 *      <ul class="datagrid-title-tabs">...</ul>
 *      <div class="rb-c-content-header__actions">...</div>
 *     </header>
 */
.rb-c-datagrid-header.-has-tabs {
  margin-bottom: 0;
  padding-bottom: 0;
}
/****************************************************************************
 * Column-specific styles
 ****************************************************************************/
#page-container .datagrid .datagrid-body tr:first-child .age1,
#page-container .datagrid .datagrid-body tr:first-child .age2,
#page-container .datagrid .datagrid-body tr:first-child .age3,
#page-container .datagrid .datagrid-body tr:first-child .age4,
#page-container .datagrid .datagrid-body tr:first-child .age5 {
  border-top: 0 !important;
}
#page-container .datagrid .age1 {
  background-color: #beedbc;
  border: 1px #8bbd5c solid !important;
  white-space: nowrap;
}
#page-container .datagrid tr.even .age1 {
  background-color: #b4e3b2;
}
#page-container .datagrid .age2 {
  background-color: #ddfa8e;
  border: 1px #a3e266 solid !important;
  white-space: nowrap;
}
#page-container .datagrid tr.even .age2 {
  background-color: #d3f084;
}
#page-container .datagrid .age3 {
  background-color: #fdf18c;
  border: 1px #d8c158 solid !important;
  white-space: nowrap;
}
#page-container .datagrid tr.even .age3 {
  background-color: #f3e782;
}
#page-container .datagrid .age4 {
  background-color: #fed3a9;
  border: 1px #d49659 solid !important;
  white-space: nowrap;
}
#page-container .datagrid tr.even .age4 {
  background-color: #f4c99f;
}
#page-container .datagrid .age5 {
  background-color: #fbc4c4;
  border: 1px #f89393 solid !important;
  white-space: nowrap;
}
#page-container .datagrid tr.even .age5 {
  background-color: #f2b9b9;
}
#page-container .datagrid td.bugs {
  cursor: text;
}
#page-container .datagrid td.bugs a.bug {
  text-decoration: underline;
  color: #124BBD;
}
#page-container .datagrid td.bugs .bug {
  white-space: nowrap;
}
#page-container .datagrid .diff-size-column {
  font-size: 90%;
}
#page-container .datagrid .diff-size-column.delete {
  color: darkred;
}
#page-container .datagrid .diff-size-column.insert {
  color: darkgreen;
}
#page-container .datagrid .month {
  background-color: #E9E9E9;
}
#page-container .datagrid .issue-count-container,
#page-container .datagrid .shipit-count-container {
  border-radius: 10px;
  display: inline-block;
  font-weight: bold;
  overflow: hidden;
  vertical-align: bottom;
  white-space: nowrap;
}
#page-container .datagrid .issue-count,
#page-container .datagrid .issue-verifying-count,
#page-container .datagrid .shipit-count {
  display: inline-block;
  padding: 0.05em 0.8em;
  vertical-align: bottom;
}
#page-container .datagrid .issue-count + .issue-verifying-count {
  padding-left: 0;
}
#page-container .datagrid .issue-count-container {
  border: 1px #b09700 solid;
  color: #205003;
  background-color: #ffdf17;
  background-repeat: no-repeat;
  background-image: linear-gradient(to bottom, #FFF4B0, #FFF4B0 25%, #ffdf17);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFF4B0', endColorstr='#ffdf17', GradientType=0);
}
#page-container .datagrid .issue-count-container .rb-icon-datagrid-open-issues {
  margin: 2px 3px 2px 0;
}
#page-container .datagrid .issue-count-container .rb-icon-datagrid-issue-verifying {
  margin: 0 3px 0 0;
}
#page-container .datagrid .shipit-count-container {
  border: 1px #478a06 solid;
  color: #202003;
  background-color: #6bc511;
  background-repeat: no-repeat;
  background-image: linear-gradient(to bottom, #7feb14, #7feb14 25%, #6bc511);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#7feb14', endColorstr='#6bc511', GradientType=0);
}
#page-container .datagrid .shipit-count-container.-is-stale {
  border-color: #777777;
  background-color: #bcbcbc;
  background-repeat: no-repeat;
  background-image: linear-gradient(to bottom, #D0D0D0, #D0D0D0 25%, #bcbcbc);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#D0D0D0', endColorstr='#bcbcbc', GradientType=0);
}
#page-container .datagrid .shipit-count-container .rb-icon-datagrid-shipit {
  margin: 1px 4px 1px 0;
}
#page-container .datagrid .repository-column,
#page-container .datagrid .submitter-column {
  white-space: nowrap;
}
#page-container .datagrid .submitter-column {
  padding-top: 0;
  padding-bottom: 0;
}
#page-container .datagrid .summary {
  cursor: pointer;
  position: relative;
  /*
     * The summary text.
     *
     * We're forcing this to be a block, and then setting overflow: hidden,
     * which, along with the float: left in the label above, will cause the
     * text to stay together and wrap as a cohesive block, without part of
     * the text wrapping below the label.
     *
     * Yes, CSS is weird.
     */
}
#page-container .datagrid .summary .no-summary {
  color: #888;
  font-style: italic;
}
#page-container .datagrid .summary label {
  border-radius: 4px;
  display: inline;
  float: left;
  margin-right: 0.6em;
  padding: 0 4px;
  line-height: 1.4;
}
#page-container .datagrid .summary label.label-draft {
  background: #D1F5A9;
  border: 1px #49BB18 solid;
  color: #005500;
}
#page-container .datagrid .summary label.label-submitted {
  background: #FFFFD0;
  border: 1px #b6b600 solid;
  color: #777700;
}
#page-container .datagrid .summary label.label-discarded {
  background: #DDDDDD;
  border: 1px #9d9d9d solid;
  color: #555555;
}
#page-container .datagrid .summary label.label-archived {
  background: #FAFAFA;
  border: 1px #bababa solid;
  color: #555555;
}
#page-container .datagrid .summary label.label-muted {
  background: #DDDDDD;
  border: 1px #9d9d9d solid;
  color: #555555;
}
#page-container .datagrid .summary span {
  display: block;
  overflow: hidden;
  line-height: 1.5;
}
/****************************************************************************
 * Styles for the User page
 ****************************************************************************/
.datagrid-page #user_page_profile {
  margin-bottom: 1em;
  text-align: center;
}
.datagrid-page #user_page_profile .nickname {
  font-size: 1.4em;
  margin-bottom: 0;
  padding-bottom: 0;
}
.datagrid-page #user_page_profile .email,
.datagrid-page #user_page_profile .group {
  color: #0000C0;
}
.datagrid-page #user_page_profile .fn,
.datagrid-page #user_page_profile .email {
  font-size: 1.2em;
}
.datagrid-page #user_page_profile .logged-in {
  margin-top: 1.5em;
}
/**
 * A button used to collapse expanded regions of diffs.
 *
 * This is designed to float over an expanded section of a diff. Pressing the
 * button will collapse the expanded lines.
 *
 * It's up to the consumer to handle positioning of the button. This component
 * only handles styling.
 *
 * Version Added:
 *     6.0
 *
 * DOM Attributes:
 *     aria-label (string):
 *         A description of the button.
 *
 *     data-lines-of-context (string, optional):
 *         A chunk line range to collapse to.
 *
 *         This should be ``0`` or ``0,0``.
 *
 *     role (string):
 *         ``button``, always.
 *
 *     tabindex (number):
 *         ``0``, always.
 *
 *     title (string):
 *         A tooltip for the button.
 *
 *     data-chunk-index (number, optional):
 *         The index of the chunk that was expanded.
 *
 *     data-comment-id (number, optional):
 *         An ID of a comment associated with the expanded diff.
 *
 * Structure:
 *     <div class="rb-c-diff-collapse-button"
 *          role="button"
 *          tabindex="0"
 *          aria-label="..."
 *          title="..."
 *          data-lines-of-context="..."
 *          [data-chunk-index="..."]
 *          [data-comment-id="..."]>
 *     <span class="rb-c-diff-collapse-button__icon" ...></span>
 *     <label class="rb-c-diff-collapse-button__label" ...>...</label>
 *    </div>
 */
.rb-c-diff-collapse-button {
  background: #DAEBFF;
  border: 1px #597595 solid;
  border-radius: 4px;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
  padding: 0.5em;
  cursor: pointer;
  -webkit-user-select: none;
          user-select: none;
  z-index: 90;
  /**
   * The icon for the collapse button.
   *
   * Structure:
   *     <span class="rb-c-diff-collapse-button__icon" aria-hidden="true">
   *     </span>
   */
  /**
   * The label for the collapse button.
   *
   * Structure:
   *     <label class="rb-c-diff-collapse-button__label" aria-hidden="true">
   *      text...
   *     </label>
   */
}
.rb-c-diff-collapse-button:hover {
  background: #e9f3ff;
}
.rb-c-diff-collapse-button__icon {
  background-repeat: no-repeat;
  display: inline-block;
  overflow: hidden;
  text-indent: -99999px;
  vertical-align: middle;
  /* Set up the default image and size. */
  background-image: url('../../images/icons.png');
  background-size: 155px 150px;
  /*
   * If there are 2 or more ratio levels, loop through and create media
   * selectors for each.
   */
  /*
   * If SVG is enabled, create a media selector for it based on the max
   * ratio.
   */
  background-position: -22px -49px;
  width: 14px;
  height: 14px;
  cursor: inherit;
  vertical-align: top;
}
@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  .rb-c-diff-collapse-button__icon {
    background-image: url(../../images/icons@2x.png);
    background-size: 155px 150px;
  }
}
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .rb-c-diff-collapse-button__icon {
    background-image: url(../../images/icons@2x.png);
    background-size: 155px 150px;
  }
}
@media (-webkit-min-device-pixel-ratio: 3), (min-resolution: 288dpi) {
  .rb-c-diff-collapse-button__icon {
    background-image: url(../../images/icons.svg);
    background-size: 155px 150px;
  }
}
.rb-c-diff-collapse-button__label {
  cursor: inherit;
}
/**
 * Styles for the Drawer UI component.
 */
/**
 * A slide-out drawer for info and actions that overlay a sidebar.
 *
 * Drawers are used to provide optional UI elements that aren't shown by
 * default, but can be activated by some action (a button click or item
 * selections). They're useful for multi-selection DataGrids.
 *
 * These can only be used on pages with a sidebar, as they overlay the
 * sidebar area.
 *
 * The drawer will display when the ``<body>`` tag is given a
 * ``js-rb-c-drawer-is-shown`` CSS class. This is used instead of a modifier
 * on the component due to other page-level changes that need to occur
 * simultaneously.
 *
 * Note that drawer colors (background, border colors, text color) are all
 * set by the page theme.
 *
 * Structure:
 *     <div class="rb-c-drawer">
 *      <div class="rb-c-drawer__content">
 *       ...
 *      </div>
 *     </div>
 */
.rb-c-drawer {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
  pointer-events: none;
  /**
   * A container of actions that can be performed.
   *
   * This contains one or more action groups, which provide visually-separated
   * lists of actions that can be performed.
   *
   * Structure:
   *     <div class="rb-c-drawer__actions">
   *      <ul class="rb-c-drawer__action-group">
   *       ...
   *      </ul>
   *      ...
   *     </div>
   */
  /**
   * A group of actions in a drawer.
   *
   * Structure:
   *     <ul class="rb-c-drawer__action-group">
   *      <li class="rb-c-drawer__action">...</li>
   *      ...
   *     </ul>
   */
  /**
   * An action that can be performed.
   *
   * The contents are generally expected to be text, with event handlers
   * attached to this element.
   *
   * Structure:
   *     <li class="rb-c-drawer__action">...</li>
   */
  /**
   * The main content area of a drawer.
   *
   * Structure:
   *     <div class="rb-c-drawer__content">
   *      <p class="rb-c-drawer__summary">...</p>
   *      <div class="rb-c-drawer__actions">...</div>
   *     </div>
   */
  /**
   * Summary text shown before any actions.
   *
   * This can be used to show how many items are selected, for example.
   *
   * Structure:
   *     <p class="rb-c-drawer__summary">...</p>
   */
}
@media only screen and (min-width: 801px) {
  .rb-c-drawer {
    top: 0;
    right: 1px;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-drawer {
    height: 15em;
    transform: translateY(100%);
  }
  .rb-c-drawer .rb-c-drawer__actions {
    display: flex;
  }
  .rb-c-drawer .rb-c-drawer__action-group {
    flex: auto;
    flex-direction: row;
    text-align: center;
    margin: 0;
  }
  .rb-c-drawer .rb-c-drawer__action {
    flex: auto;
    flex-direction: column;
    margin: 0;
    padding: 1em;
  }
  .rb-c-drawer .rb-c-drawer__content {
    padding: 1em;
  }
  .rb-c-drawer .rb-c-drawer__summary {
    margin: 1em 0 2em 0;
  }
}
.rb-c-drawer__actions {
  font-size: 110%;
  margin: 0;
  padding: 0;
}
.rb-c-drawer__action-group {
  margin: 3em 0 0 0;
  padding: 0;
  list-style: none;
  text-align: right;
}
.rb-c-drawer__action {
  cursor: pointer;
  margin: 1em 0;
  padding: 0;
}
.rb-c-drawer__action a {
  color: inherit;
  text-decoration: none;
}
.rb-c-drawer__content {
  box-sizing: border-box;
  padding: 2em;
  position: absolute;
  left: 0;
  right: 0;
  transition: 0.2s linear transform;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
@media only screen and (min-width: 801px) {
  .rb-c-drawer__content {
    border-width: 1px;
    border-style: solid;
    border-right: 0;
    border-radius: 6px 0 0 6px;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    left: 2em;
    top: 7em;
    bottom: 6em;
    transform: translateX(100%);
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-drawer__content {
    border-top-width: 1px;
    border-top-style: solid;
    height: 100%;
  }
}
.rb-c-drawer__summary {
  margin: 0 0 2em 0;
  padding: 0;
  text-align: center;
}
body.js-rb-c-drawer-is-shown .rb-c-drawer {
  pointer-events: all;
}
@media only screen and (min-width: 801px) {
  body.js-rb-c-drawer-is-shown .rb-c-drawer__content {
    transform: translateX(0);
  }
}
@media only screen and (max-width: 800px) {
  body.js-rb-c-drawer-is-shown .rb-c-drawer {
    transform: translateY(0);
    z-index: 100;
  }
}
/**
 * Styles for the rich text formatting toolbar.
 */
/**
 * The rich text formatting toolbar.
 */
.rb-c-formatting-toolbar {
  background: #F9F9F9;
  bottom: 0px;
  display: flex;
  margin: 0;
  padding: 0;
}
.rb-c-formatting-toolbar a,
.rb-c-formatting-toolbar label {
  color: #000000;
}
.rb-c-formatting-toolbar__btn-group {
  display: flex;
  margin: 0.5em;
}
.rb-c-formatting-toolbar__btn {
  background: none;
  border: 0;
  border-radius: 2px;
  box-sizing: content-box;
  font-size: 120%;
  margin: 0 0.1em;
  width: 14px;
  height: 14px;
  padding: 0.5em;
  text-align: center;
}
.rb-c-formatting-toolbar__btn::before {
  vertical-align: top;
}
.rb-c-formatting-toolbar__btn:hover,
.rb-c-formatting-toolbar__btn:focus {
  background-color: #E9E9E9;
  color: #000000;
}
.rb-c-formatting-toolbar__btn-bold:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f032";
}
.rb-c-formatting-toolbar__btn-code:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f121";
}
.rb-c-formatting-toolbar__btn-image:hover {
  cursor: pointer;
}
.rb-c-formatting-toolbar__btn-image:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f03e";
}
.rb-c-formatting-toolbar__btn-italic:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f033";
}
.rb-c-formatting-toolbar__btn-link:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f0c1";
}
.rb-c-formatting-toolbar__btn-list-ol:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f0cb";
}
.rb-c-formatting-toolbar__btn-list-ul:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f0ca";
}
.rb-c-formatting-toolbar__btn-strikethrough:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f0cc";
}
/**
 * Styles for forms and form fields.
 */
input[type=email],
input[type=number],
input[type=password],
input[type=search],
input[type=text],
input[type=url] {
  border: 1px #C0C0C0 solid;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: inherit;
  padding: 4px 8px;
}
textarea {
  border: 1px #C0C0C0 solid;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 13px;
}
.CodeMirror {
  border: 1px #C0C0C0 solid;
  border-radius: 4px;
  cursor: text;
}
/**
 * Django form validation error list.
 *
 * These are some default styles for errorlists that provide a default look
 * when in typical forms.
 *
 * Note:
 *     The ``.rb-c-form-field`` component specializes this, changing the
 *     presentation to better fit in with the rest of the enhanced form UI.
 *     It's recommended that consumers make use of that component.
 *
 * Structure:
 *     <ul class="errorlist">
 *      <li>...</li>
 *      ...
 *     </ul>
 */
.errorlist {
  color: #DD0000;
  display: inline;
  font-weight: bold;
  margin: 0 0 0 15px;
  padding: 4px 8px;
}
.errorlist li {
  display: inline;
}
/**
 * A standard form.
 *
 * This provides consistent styling for forms, providing modifiers to easily
 * make form inputs (and related content, like help text and errors) line up
 * to the right of labels.
 *
 * When placed in a standard ``.rb-c-content-box``, it's recommended that
 * you set ``<body class="-is-content-flush-on-mobile">`` and
 * ``<div class="rb-c-content-box -is-content-flush">``.
 *
 * Modifiers:
 *     -is-aligned:
 *         Aligns inputs, help text, errors, and similar content for all fields
 *         into the column, positioned right of a column of labels.
 *
 * Structure:
 *     <form class="rb-c-form [modifiers]">
 *      <fieldset class="rb-c-form-fieldset">...</fieldset>
 *      ...
 *
 *      <div class="rb-c-form__actions">
 *       ...
 *      </div>
 *     </form>
 */
.rb-c-form {
  margin: 0;
  padding: 0;
  /**
   * An action that can be taken on a form.
   *
   * This is used for things like submit buttons, or for links that in some
   * way interact with the form.
   *
   * Structure:
   *     <input class="rb-c-form__action" type="submit">
   *     <button class="rb-c-form__action">Delete</button>
   *     <a href="#" class="rb-c-form__action">Frobnicate</button>
   */
  /**
   * The action area for a form.
   *
   * This contains up to two action areas: A primary set of actions (required),
   * and a secondary set of actions (optional).
   *
   * This is usually positioned at the bottom of the form.
   *
   * Structure:
   *     <div class="rb-c-form__actions">
   *      <div class="rb-c-form__actions-primary">...</div>
   *      <div class="rb-c-form__actions-secondary">...</div>
   *     </div>
   */
  /**
   * The primary set of actions for a form.
   *
   * This is intended to contain form submission buttons and any other
   * prominent actions that the user may want to invoke.
   *
   * This is displayed on the left of the action area.
   *
   * Structure:
   *     <div class="rb-c-form__actions-primary">
   *      <input class="rb-c-form__action" type="submit">
   *      <button class="rb-c-form__action">...</button>
   *      ...
   *     </div>
   */
  /**
   * A secondary set of actions for a form.
   *
   * This is intended to contain form submission buttons and any other
   * prominent actions that the user may want to invoke.
   *
   * This is displayed on the right of the action area.
   *
   * Structure:
   *     <div class="rb-c-form__actions-secondary">
   *      <button class="rb-c-form__action">...</button>
   *      <a href="rb-c-form__action">...</a>
   *      ...
   *     </div>
   */
}
.rb-c-form.-is-aligned {
  /*
     * The goal is to align the fields alongside the labels without the
     * input/help text area wrapping below the label when that content wraps.
     * We want to keep that area aligned.
     *
     * The very easiest, safest way to do this is to use table-based layout,
     * which will turn on table's alignment and wrapping rules.
     *
     * We only need to set `display: table-cell` for the aligned parts:
     * .rb-c-form-field__label and .rb-c-form-field__input.
     */
}
@media only screen and (min-width: 1024px) {
  .rb-c-form.-is-aligned .rb-c-form-field__label {
    /*
         * We're using min/max-width to force this width to stick when the
         * .rb-c-form-field__input is set to 100%. If we just used `width:`,
         * these would collapse down to a minimum width.
         */
    min-width: 160px;
    max-width: 160px;
  }
  .rb-c-form.-is-aligned .rb-c-form-fieldset.-is-wide .rb-c-form-field__label {
    /*
         * We're using min/max-width to force this width to stick when the
         * .rb-c-form-field__input is set to 100%. If we just used `width:`,
         * these would collapse down to a minimum width.
         */
    min-width: 200px;
    max-width: 200px;
  }
  .rb-c-form.-is-aligned .rb-c-form-field.-has-input-first {
    display: block;
  }
  .rb-c-form.-is-aligned .rb-c-form-field.-has-input-first .rb-c-form-field__input {
    display: inline-block;
  }
  .rb-c-form.-is-aligned .rb-c-form-field.-has-input-first .rb-c-form-field__label {
    display: inline-block;
    min-width: 0;
    max-width: none;
    margin-top: 0;
  }
  .rb-c-form.-is-aligned .rb-c-form-field__label {
    display: table-cell;
    margin-bottom: 0;
    /* Help align the labels with most input content. */
    margin-top: 4px;
  }
  .rb-c-form.-is-aligned .rb-c-form-field__input {
    display: table-cell;
  }
}
.rb-c-form__action {
  box-sizing: border-box;
  font-size: 13px;
  text-align: center;
  /*
     * See the comment for &__actions below to see how we're handling the
     * spacing around actions.
     */
}
@media only screen and (min-width: 801px) {
  .rb-c-form__action {
    margin: 1em 1em 0 0;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-form__action {
    margin: 1em 0 0 0;
    width: 100%;
    /* Force one action per line. */
    float: left;
    clear: left;
  }
}
.rb-c-form__actions {
  display: inline-block;
  display: block;
  /*
     * In order to ensure proper spacing along the sides and between each
     * action (when in one row and when wrapped), we need to divvy up which
     * element is responsible for which part of the padding.
     *
     * On desktop, the bottom and left of this container will contain padding.
     * The top and right of each action will contain a margin with the same
     * padding value. In the end, this creates a consistent padding across all
     * actions and the container.
     *
     * Mobile is similar, but each action on mobile gets a full width and its
     * own row, so we're going to want to let this container own the padding
     * on both sides.
     */
}
.rb-c-form__actions:after {
  clear: both;
  content: ".";
  display: block;
  height: 0;
  visibility: hidden;
}
.rb-c-form__actions:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}
@media only screen and (min-width: 801px) {
  .rb-c-form__actions {
    margin: 1em 0 1em 1em;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-form__actions {
    margin: 1em;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-form__actions-primary {
    float: left;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-form__actions-secondary {
    float: right;
  }
}
.rb-c-form__actions-primary,
.rb-c-form__actions-secondary {
  /* Remove any extra whitespace gaps between actions. */
  font-size: 0;
}
/**
 * A field on a form.
 *
 * Form fields contain a label, input widget, help text, and errors. Their
 * presentation depends on the display modifiers set on the parent
 * ``.rb-c-form``.
 *
 * Modifiers:
 *     -has-errors:
 *         This field has errors.
 *
 *     -has-input-first:
 *         The field input is before the label. This is intended for field
 *         inputs like checkboxes or radio buttons.
 *
 *     -is-required:
 *         Whether the field is required. This will place a visual marker
 *         after the label.
 *
 *         Inputs should also have their ``required`` attribute set.
 *
 * Structure:
 *     <div class="rb-c-form-field [modifiers]">
 *      <div class="rb-c-form-field__errors">...</div>
 *      <label class="rb-c-form-field__label" for="...">...</label>
 *      <div class="rb-c-form-field__input">...</div>
 *     </div>
 */
.rb-c-form-field {
  /**
   * Errors shown for the field.
   *
   * This is shown before the row containing the label and input. It's meant
   * to contain a Django ``ul.errorlist``.
   *
   * Structure:
   *     <div class="rb-c-form-field__errors">
   *      <ul class="errorlist">...</ul>
   *     </div>
   */
  /**
   * Help text offering guidance for the field.
   *
   * Structure:
   *     <div class="rb-c-form-field__help">
   *      ...
   *     </div>
   */
  /**
   * The container for an input widget for the field.
   *
   * This may contain a standard field input, like ``<input>`` or
   * ``<textarea>``, or a potentially more complex custom widget.
   * It may also contain help text.
   *
   * Structure:
   *     <div class="rb-c-form-field__input">
   *      <input ...>
   *      <div class="rb-c-form-field__help">...</div>
   *     </div>
   */
  /**
   * The field's label.
   *
   * Structure:
   *     <label class="rb-c-form-field__label" for="...">...</label>
   */
  /**
   * The read-only value for a field.
   *
   * This is used in place of an input when the field is representing a
   * read-only value.
   *
   * Structure:
   *     <div class="rb-c-form-field__readonly-value">...</div>
   */
}
.rb-c-form-field.-has-errors .rb-c-form-field__label {
  color: #DE1717;
}
.rb-c-form-field.-has-errors .rb-c-form-field__input input,
.rb-c-form-field.-has-errors .rb-c-form-field__input select,
.rb-c-form-field.-has-errors .rb-c-form-field__input textarea {
  border-color: #DE1717;
}
.rb-c-form-field.-has-input-first .rb-c-form-field__input {
  /*
       * We'll be setting this to not wrap, and then setting the label to
       * wrap, so that if the label is long (which may easily happen on
       * mobile), it won't wrap below the checkbox/radio input. If we didn't
       * do this, the entire label would move below the input.
       */
  white-space: nowrap;
}
.rb-c-form-field.-has-input-first .rb-c-form-field__label {
  display: inline-block;
  font-weight: normal;
  margin-bottom: 0;
  margin-top: 0;
  white-space: normal;
}
.rb-c-form-field.-is-required .rb-c-form-field__label:after,
label.required:after {
  color: #DE1717;
  content: ' *';
  font-size: 10px;
  font-weight: bold;
}
.rb-c-form-field__errors {
  border-radius: 4px;
  border: 1px transparent solid;
  margin: 0 0 1em 0;
  padding: 1em;
  /**
   * Content to display within the alert.
   *
   * If showing only a single paragraph of text, this should be a ``<p>`` tag.
   * If showing multiple paragraphs, or other HTML content, use a ``<div>``
   * with the content inside.
   *
   * Structure:
   *     <p class="rb-c-alert__content">...</p>
   *
   *     <div class="rb-c-alert__content">
   *      <h3 class="rb-c-alert__heading">...</h3>
   *      <p>...</p>
   *      ...
   *     </div>
   */
  /**
   * A close button for the alert.
   *
   * DOM Attributes:
   *     aria-label (string):
   *          The accessibility label for the button.
   *
   *     role (string):
   *         This must be set to ``button``.
   *
   *     tabindex (number):
   *         The tab index. This should be set to ``0`` in most cases.
   *
   *     title (string):
   *          The tooltip label for the button.
   *
   * Structure:
   *     <span class="rb-c-alert__close"
   *           aria-label="Close"
   *           role="button"
   *           tabindex="0"
   *           title="Close"></span>
   */
  /**
   * An optional header above content in the alert.
   *
   * This may be used anywhere within an ``.rb-c-alert__content`` to provide
   * a heading above some part of the content. A common usage would be to
   * provide it as the first element to create a prominent heading for the
   * alert.
   *
   * Structure:
   *     <h3 class="rb-c-alert__heading">
   *      text...
   *     </h3>
   */
  background: #FFE0E5;
  border-color: #ff94a5;
}
.rb-c-form-field__errors:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  float: left;
  font-size: 18px;
  margin-right: 0.5em;
  text-align: center;
  width: 18px;
}
.rb-c-form-field__errors:last-child {
  margin-bottom: 0;
}
.rb-c-form-field__errors.-is-error {
  background: #FFE0E5;
  border-color: #ff94a5;
}
.rb-c-form-field__errors.-is-error:before {
  content: "\f06a";
}
.rb-c-form-field__errors.-is-info {
  background: #DAEBFF;
  border-color: #8ec2ff;
}
.rb-c-form-field__errors.-is-info:before {
  content: "\f05a";
}
.rb-c-form-field__errors.-is-success {
  background: #D1F5A9;
  border-color: #6dbc16;
}
.rb-c-form-field__errors.-is-success:before {
  content: "\f00c";
}
.rb-c-form-field__errors.-is-warning {
  background: #FFF4B0;
  border-color: #caad00;
}
.rb-c-form-field__errors.-is-warning:before {
  content: "\f071";
}
.rb-c-form-field__errors__content {
  margin: 0;
  padding: 0;
  overflow: hidden;
}
.rb-c-form-field__errors__content > :first-child {
  margin-top: 0;
  padding-top: 0;
}
.rb-c-form-field__errors__content > :last-child {
  margin-bottom: 0;
  padding-bottom: 0;
}
.rb-c-form-field__errors__close {
  cursor: pointer;
  float: right;
  padding: 6px;
  margin: -10px -6px -6px -6px;
}
.rb-c-form-field__errors__close:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f00d";
}
.rb-c-form-field__errors__heading {
  font-size: 100%;
  font-weight: bold;
  margin: 2em 0 1em 0;
  padding: 0;
}
.rb-c-form-field__errors:before {
  content: "\f06a";
}
.rb-c-form-field__errors .errorlist,
.djblets-c-config-forms-page__content .rb-c-form-field__errors .errorlist {
  color: inherit;
  display: inline;
  font-weight: bold;
  margin: 0;
  padding: 0;
}
.rb-c-form-field__errors .errorlist li,
.djblets-c-config-forms-page__content .rb-c-form-field__errors .errorlist li {
  display: inline;
}
.rb-c-form-field__help {
  color: #555555;
  font-size: 10px;
  margin: 0;
  padding: 8px 0 8px 18px;
  position: relative;
}
.rb-c-form-field__help:before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f059";
  color: #2378DB;
  font-size: 14px;
  position: absolute;
  left: 0;
}
.rb-c-form-field__input {
  display: inline-block;
  vertical-align: top;
  /*
     * Make sure this gets as much space as possible, so that any widgets
     * nested within will not be constrained.
     */
  width: 100%;
  /* Radio buttons and multi-select checkboxes. */
}
.rb-c-form-field__input > ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
.rb-c-form-field__input > ul > li {
  list-style: none;
  margin: 0;
  padding: 0;
}
.rb-c-form-field__input > ul > li + li {
  margin-top: 1em;
}
.rb-c-form-field__input input[type=checkbox],
.rb-c-form-field__input input[type=radio] {
  /* Help these inputs align with their labels and help text. */
  margin: 0;
}
.rb-c-form-field__label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.5em;
  vertical-align: top;
  word-wrap: break-word;
}
/**
 * A fieldset containing an optional title and one or more rows of fields.
 *
 * Fieldsets can optionally be collapsable, allowing more advanced fields
 * to be hidden by default.
 *
 * DOM Attributes:
 *     data-subform-group (string):
 *         The group that this subform belongs to, if using ``-is-subform``.
 *         All subforms that are part of the same location in the form or
 *         should be considered together for visibility purposes should have
 *         the same group.
 *
 *         This should not be specified if ``data-subform-controller` is set.
 *
 *     data-subform-controller (string):
 *         A selector for a ``<select>`` (or another element that returns
 *         a value) that controls the presence of this subform, if using
 *         ``-is-subform``. The input should have a ``data-subform-group``
 *         attribute set.
 *
 *     data-subform-id (string):
 *         A unique ID for this subform, if using ``-is-subform``. This
 *         must be unique within the group (see ``data-subform-group``).
 *
 *     disabled:
 *         Disable the fieldset, preventing fields from being sent to the
 *         server.
 *
 *         This should be used along with ``hidden`` if using the
 *         ``-is-subform`` modifier and the subform is not intended to be
 *         shown.
 *
 *     hidden:
 *         Hides the fieldset.
 *
 *         This should be used along with ``disabled`` if using the
 *         ``-is-subform`` modifier and the subform is not intended to be
 *         shown.
 *
 * Modifiers:
 *     -is-collapsed:
 *         Collapses the fieldset by default, requiring it to be uncollapsed
 *         manually before fields can be shown and modified.
 *
 *     -is-subform:
 *         Marks this as a subform, which is a set of fields within a form
 *         that may be conditionally hidden or shown based on another
 *         condition or value within the form. Users of this should set
 *         the ``hidden`` and ``disabled`` attributes to hide the subform and
 *         prevent its contents from being sent to the server, and should
 *         provide the appropriate ``data-`` attributes.
 *
 *         Subforms must have a <fieldset> within it.
 *
 * Structure:
 *     <fieldset class="rb-c-form-fieldset [modifiers]">
 *      <legend class="rb-c-form-fieldset__name">...</legend>
 *      <div class="rb-c-form-fieldset__content">...</div>
 *     </fieldset>
 *
 *     <fieldset class="rb-c-form-fieldset -is-subform"
 *               data-subform-controller="..."
 *               data-subform-id="...">"
 *      <legend class="rb-c-form-fieldset__name">...</legend>
 *      <div class="rb-c-form-fieldset__content">...</div>
 *     </fieldset>
 *
 *     <fieldset class="rb-c-form-fieldset -is-subform"
 *               data-subform-group="..."
 *               data-subform-id="...">"
 *      <legend class="rb-c-form-fieldset__name">...</legend>
 *      <div class="rb-c-form-fieldset__content">...</div>
 *     </fieldset>
 */
.rb-c-form-fieldset {
  border: 0;
  border-top: 1px #C0C0C0 solid;
  margin: 0;
  padding: 0 1em;
  /**
   * The content area of a fieldset.
   *
   * This contains any descriptive content and the container for the fields.
   *
   * Structure:
   *     <div class="rb-c-form-fieldset__content">
   *      <div class="rb-c-form-fieldset__description">...</div>
   *      <div class="rb-c-form-fieldset__fields">...</div>
   *     </div>
   */
  /**
   * The description of the fields in a fieldset.
   *
   * Structure:
   *     <div class="rb-c-form-fieldset__description">
   *      ...
   *     </div>
   */
  /**
   * The fields that make up the fieldset.
   *
   * Structure:
   *     <div class="rb-c-form-fieldset__fields">
   *      <div class="rb-c-form-row">...</div>
   *      ...
   *     </div>
   */
  /**
   * The name of the form.
   *
   * This is shown at the top of the fieldset.
   *
   * Structure:
   *     <legend class="rb-c-form-fieldset__name">
   *      text...
   *      <a href="#" class="rb-c-form-fieldset__toggle">...</a>
   *     </legend>
   */
  /**
   * The toggle for expanding or collapsing a fieldset.
   *
   * Structure:
   *     <a href="#" class="rb-c-form-fieldset__toggle">...</a>
   */
}
.rb-c-form-fieldset:first-of-type {
  margin-top: 0;
  border-top: 0;
}
.rb-c-form-fieldset:first-of-type > .rb-c-form-fieldset__name {
  padding-top: 0;
}
.rb-c-form-fieldset.-can-collapse .rb-c-form-fieldset__name {
  margin: 1em 0;
}
.rb-c-form-fieldset.-is-collapsed {
  background: #E9E9E9;
  border-top: 1px #C0C0C0 solid;
  border-bottom: 1px #C0C0C0 solid;
}
.rb-c-form-fieldset.-is-collapsed + .rb-c-form-fieldset {
  border-top: 0;
  margin-top: 0;
}
.rb-c-form-fieldset.-is-collapsed > .rb-c-form-fieldset__content {
  display: none;
}
.rb-c-form-fieldset.-is-collapsed > .rb-c-form-fieldset__name {
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
}
.rb-c-form-fieldset.-is-subform > .rb-c-form-fieldset__content > .rb-c-form-fieldset__fields {
  /*
       * Subform fieldsets themselves have nested fields, and those have
       * their own margins. We want to collapse down the outer-most fields.
       */
  margin: 0;
}
.rb-c-form-fieldset.-is-subform .rb-c-form-fieldset {
  padding-left: 0;
  padding-right: 0;
  margin-left: 0;
  margin-right: 0;
}
.rb-c-form-fieldset__content {
  clear: both;
  overflow-y: hidden;
}
.rb-c-form-fieldset__description {
  padding: 0;
  margin: 1em 0 2em 0;
}
.rb-c-form-fieldset__fields {
  margin: 2em 0;
}
.rb-c-form-fieldset__name {
  color: #444444;
  font-size: 110%;
  font-weight: bold;
  text-transform: uppercase;
  /*
     * Browsers render <legend> in such a way where it overlaps the border.
     * The fixes for these are all a bit hacky, but one solution is to
     * float and apply a clearfix.
     */
  float: left;
  display: inline-block;
  margin: 1em 0 0 0;
  padding: 0;
  width: 100%;
}
.rb-c-form-fieldset__name:after {
  clear: both;
  content: ".";
  display: block;
  height: 0;
  visibility: hidden;
}
.rb-c-form-fieldset__name:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}
.rb-c-form-fieldset__toggle {
  font-size: 80%;
  font-weight: normal;
  margin-left: 1em;
}
/**
 * A row in a form containing a field.
 *
 * Structure:
 *  <div class="rb-c-form-row">
 *   <div class="rb-c-form-field">...</div>
 *  </div>
 */
.rb-c-form-row,
.djblets-c-config-forms-page__content .rb-c-form-row.fields-row,
.config-forms-page-content .rb-c-form-row.fields-row {
  margin: 2em 0 0 0;
  padding: 0;
}
/* Legacy styles. */
form td {
  padding: 8px 8px 4px 4px;
}
form td.label {
  text-align: right;
  font-weight: bold;
}
form th {
  text-align: right;
  vertical-align: top;
}
td.help {
  font-size: 10px;
  color: #333;
  padding-top: 0;
}
/****************************************************************************
 * Shared rules for all infoboxes
 ****************************************************************************/
.infobox {
  background: #F9F9F9;
  border: 1px #666666 solid;
  border-radius: 3px;
  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);
  display: block;
  font-size: 12px;
  overflow: hidden;
  position: absolute;
  min-width: 40em;
  max-width: 50em;
  min-height: 10em;
  z-index: 120;
}
.infobox a {
  text-decoration: none;
}
.infobox a:hover {
  text-decoration: underline;
}
.infobox h2,
.infobox .infobox-header-text {
  color: inherit;
  font-size: 1.4em;
  font-weight: bold;
  margin: 0 0 0.5em 0;
  padding: 0;
  vertical-align: top;
}
.infobox h2 a,
.infobox .infobox-header-text a {
  color: inherit;
}
.infobox p {
  margin: 0.5em 0;
  padding: 0;
}
.infobox-extra {
  box-sizing: border-box;
  padding: 0.5em;
  width: 100%;
}
.infobox-hover-item,
.infobox-item {
  margin: 0.5em 0;
}
.infobox-hover-item .fa,
.infobox-item .fa {
  min-width: 16px;
  text-align: right;
}
.infobox-hover-item {
  position: relative;
}
.infobox-hover-item.infobox-hover-item-anchor-has-small-icon .infobox-hover-item-content {
  padding-left: 26px;
  padding-right: 26px;
}
.infobox-hover-item.infobox-hover-item-opened .infobox-hover-item-content,
.infobox-hover-item.infobox-hover-item-opened .infobox-hover-item-anchor {
  z-index: 121;
}
.infobox-hover-item.infobox-hover-item-opened .infobox-hover-item-content {
  display: block;
}
.infobox-hover-item-content {
  border: 1px solid #666;
  background-color: white;
  display: none;
  margin: -4px 0 0 -6px;
  padding: 24px 6px 4px 6px;
  position: absolute;
  top: 0;
  left: 0;
}
.infobox-hover-item-anchor {
  cursor: pointer;
  position: relative;
}
.infobox-hover-item-anchor label {
  border-bottom: 1px dotted #666;
}
.infobox-links a {
  color: #124BBD;
  margin-right: 2em;
}
.infobox-pic {
  display: inline-block;
  vertical-align: top;
}
.infobox-pic img {
  border-radius: 2px 0 0 2px;
}
.infobox-scrollable-section {
  padding-left: 20px;
  position: relative;
}
.infobox-scrollable-section:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2em;
  background: linear-gradient(to bottom, rgba(249, 249, 249, 0), rgba(249, 249, 249, 0.6) 100%);
}
.infobox-scrollable-section:hover:after {
  display: none;
}
.infobox-scrollable-section:hover .infobox-scrollable-section-content {
  overflow-y: scroll;
}
.infobox-scrollable-section .infobox-scrollable-section-content {
  max-height: 8em;
  overflow: hidden;
}
.infobox-small-detail {
  font-size: 10px;
}
.infobox-text {
  box-sizing: border-box;
  display: inline-block;
  padding: 0.75em;
  position: relative;
  vertical-align: top;
  width: 100%;
  word-wrap: break-word;
}
.infobox-text-section {
  margin-top: 1.5em;
}
.infobox-text-section > pre {
  font-size: 12px;
  white-space: pre-wrap;
}
/****************************************************************************
 * User infobox
 ****************************************************************************/
.user-infobox {
  min-height: 128px;
  /*
   * If there's extra content provided by extensions, the avatar image should
   * have a flat bottom. If not, round the bottom-left as well as the top-left.
   */
}
.user-infobox .infobox-pic {
  height: 128px;
  width: 128px;
}
.user-infobox .has-extra-content .infobox-pic img {
  border-radius: 2px 0 0 0;
}
.user-infobox .infobox-extra {
  border-top: 1px solid #666;
}
.user-infobox .infobox-text {
  min-height: 128px;
  min-width: 20em;
  max-width: 40em;
  width: auto;
}
.user-infobox .infobox-text .infobox-links {
  position: absolute;
  bottom: 0.75em;
}
.user-infobox h2 .username {
  color: #888888;
  font-size: 12px;
  font-weight: normal;
}
/****************************************************************************
 * Bug infobox
 ****************************************************************************/
.bug-infobox .bug-infobox-id {
  float: right;
}
.bug-infobox .bug-infobox-id a {
  color: #888;
  font-size: 90%;
  font-weight: normal;
}
/****************************************************************************
 * Review Request infobox
 ****************************************************************************/
.review-request-infobox .infobox-pic {
  border-radius: 0;
  vertical-align: middle;
}
.review-request-infobox .review-request-infobox-header {
  margin-bottom: 1em;
}
.review-request-infobox .review-request-infobox-id {
  float: right;
}
.review-request-infobox .review-request-infobox-id a {
  color: #888;
  font-size: 90%;
  font-weight: normal;
}
.review-request-infobox .review-request-infobox-label-draft {
  background-color: #D1F5A9;
  border: 1px #49BB18 solid;
  border-radius: 5px;
  color: #005500;
  font-size: 75%;
  font-weight: normal;
  padding: 0.1em 0.35em 0.25em 0.35em;
}
.review-request-infobox .review-request-infobox-label-submitted {
  background-color: #FFFFD0;
  border: 1px #b6b600 solid;
  border-radius: 5px;
  color: #777700;
  font-size: 75%;
  font-weight: normal;
  padding: 0.1em 0.35em 0.25em 0.35em;
}
.review-request-infobox .review-request-infobox-label-discarded {
  background-color: #DDDDDD;
  border: 1px #9d9d9d solid;
  border-radius: 5px;
  color: #555555;
  font-size: 75%;
  font-weight: normal;
  padding: 0.1em 0.35em 0.25em 0.35em;
}
.review-request-infobox .review-request-infobox-review-summary {
  background: #F0F0F0;
  border-top: 1px #CCC solid;
  border-radius: 0 0 2px 2px;
  margin-left: -0.75em;
  margin-right: -0.75em;
  margin-bottom: -0.75em;
  padding: 0.75em;
}
.review-request-infobox .review-request-infobox-review-summary.has-ship-its {
  background: #bcf592;
  border-color: #8fd051;
}
.review-request-infobox .review-request-infobox-review-summary.has-issues {
  background: #FFF4B0;
  border-color: #E0CF7B;
}
.review-request-infobox .review-request-infobox-review-summary a {
  color: #124BBD;
}
.review-request-infobox .review-request-infobox-review-summary ul {
  list-style: none;
  margin: 0;
  padding: 0;
  vertical-align: bottom;
}
.review-request-infobox .review-request-infobox-review-summary li {
  display: inline-block;
  padding-left: 1.5em;
}
.review-request-infobox .review-request-infobox-review-summary li:first-child {
  padding-left: 0;
}
.review-request-infobox .review-request-infobox-review-summary li .rb-icon {
  vertical-align: text-top;
}
/**
 * The inline editor component.
 *
 * This wraps a piece of displayed content (generally text) that, when clicked,
 * displays an editor for changing that content.
 *
 * They contain a wrapper for the edit field and a list of buttons or other
 * actions that apply to that content.
 *
 * Inline editors can be in one of two modes:
 *
 * 1. **Single-line:** The editor field and save/cancel buttons will displayed
 *    in a single line.
 *
 * 2. **Multi-line:** The editor field will be displayed in one line, and
 *    buttons in a separate line.
 *
 * Buttons can also be shortened to only show icons, for areas where space is
 * at a premium.
 *
 * Inline editors are managed by :js:class:`RB.InlineEditorView` and subclasses.
 *
 * Version Added:
 *     6.0
 *
 * DOM Attributes:
 *     id (string):
 *         The ID of the inline editor.
 *
 *         This must be referenced by the ``.rb-c-inline-editor-edit-icon``.
 *
 * Modifiers:
 *     -is-multi-line:
 *         The inline editor is in multi-line mode.
 *
 *     -is-single-line:
 *         The inline editor is in single-line mode.
 *
 *     -has-short-buttons:
 *         The Save/Cancel buttons will show icons but no text.
 *
 * Structure:
 *     <form class="rb-c-inline-editor [modifiers]"
 *           id="...">
 *      <div class="rb-c-inline-editor__field">...</div>
 *      <div class="rb-c-inline-editor__actions">...</div>
 *     </form>
 *     rendered_field_html...
 *     <a class="rb-c-inline-editor-edit-icon" ...>...</a>
 */
.rb-c-inline-editor {
  margin: 0;
  padding: 0;
  white-space: nowrap;
  gap: 0.5em;
  /**
   * The actions available for the inline editor.
   *
   * This will always have at minimum a Save and a Cancel button, but may
   * also contain other actions.
   *
   * Support for Markdown-related actions are built-in to the component.
   *
   * Structure:
   *     <div class="rb-c-inline-editor__actions">
   *      <button class="rb-c-button" data-action="save">...</button>
   *      <button class="rb-c-button" data-action="cancel">...</button>
   *      ...
   *     </div>
   */
  /**
   * A wrapper for the field used to edit the content.
   *
   * This will usually contain a ``<textarea>``, ``<input>``, or
   * ``.rb-c-text-editor``.
   *
   * Structure:
   *     <div class="rb-c-inline-editor__field">
   *      <textarea>...</textarea>
   *     </div>
   *
   *     <div class="rb-c-inline-editor__field">
   *      <input type="...">
   *     </div>
   *
   *     <div class="rb-c-inline-editor__field">
   *      <div class="rb-c-text-editor">...</div>
   *     </div>
   */
}
.rb-c-inline-editor.-is-multi-line {
  display: flex;
  flex-direction: column;
}
.rb-c-inline-editor.-is-single-line {
  display: inline-flex;
  flex-direction: row;
}
.rb-c-inline-editor.-has-short-buttons .rb-c-button[data-action="cancel"],
.rb-c-inline-editor.-has-short-buttons .rb-c-button[data-action="save"],
.rb-c-inline-editor.-has-short-buttons button[data-action="cancel"],
.rb-c-inline-editor.-has-short-buttons button[data-action="save"],
.rb-c-inline-editor.-has-short-buttons input[type="button"][data-action="cancel"],
.rb-c-inline-editor.-has-short-buttons input[type="button"][data-action="save"],
.rb-c-inline-editor.-has-short-buttons input[type="submit"][data-action="cancel"],
.rb-c-inline-editor.-has-short-buttons input[type="submit"][data-action="save"] {
  /* Save space by making these icon-only. */
  padding: 3px 6px;
}
.rb-c-inline-editor.-has-short-buttons .rb-c-button[data-action="cancel"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons .rb-c-button[data-action="save"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons button[data-action="cancel"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons button[data-action="save"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons input[type="button"][data-action="cancel"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons input[type="button"][data-action="save"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons input[type="submit"][data-action="cancel"] > .rb-c-button__label,
.rb-c-inline-editor.-has-short-buttons input[type="submit"][data-action="save"] > .rb-c-button__label {
  display: none;
}
.rb-c-inline-editor__actions {
  display: flex;
  align-items: center;
  gap: 0.5em;
  white-space: normal;
}
.rb-c-inline-editor__actions > .markdown-info {
  margin-left: auto;
}
.rb-c-inline-editor__actions > .rb-c-button,
.rb-c-inline-editor__actions > button,
.rb-c-inline-editor__actions > input[type="button"],
.rb-c-inline-editor__actions > input[type="submit"] {
  margin: 0;
}
.rb-c-inline-editor__actions > .rb-c-button[data-action="cancel"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > button[data-action="cancel"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > input[type="button"][data-action="cancel"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > input[type="submit"][data-action="cancel"] > .rb-c-button__icon::before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f00d";
}
.rb-c-inline-editor__actions > .rb-c-button[data-action="save"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > button[data-action="save"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > input[type="button"][data-action="save"] > .rb-c-button__icon::before,
.rb-c-inline-editor__actions > input[type="submit"][data-action="save"] > .rb-c-button__icon::before {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "\f00c";
}
.rb-c-inline-editor__field {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
}
.rb-c-inline-editor__field > * {
  flex-grow: 1;
  width: 100%;
}
.rb-c-inline-editor__field > input[type='text']:not(:focus) {
  box-shadow: 0px 0px 4px rgba(255, 0, 0, 0.75);
}
/**
 * An edit icon used to open an inline editor.
 *
 * This will exist outside of the inline editor component. It will trigger
 * opening the inline editor when clicked.
 *
 * Version Added:
 *     6.0
 *
 * DOM Attributes:
 *     aria-controls (string):
 *         The ID of the ``.rb-c-inline-editor`` that this controls.
 *
 *     aria-label (string):
 *         A label describing the action performed by this icon.
 *
 *     role (string):
 *         This should be "button".
 *
 *     tabindex (number):
 *         This should be 0.
 *
 *     title (string):
 *         A tooltip describing the action performed by this icon.
 *
 * Structure:
 *     rendered...
 *     <a class="rb-c-inline-editor-edit-icon"
 *        aria-controls="..."
 *        aria-label="..."
 *        href="#"
 *        role="button"
 *        tabindex="0"
 *        title="...">
 *      <div class="rb-icon rb-icon-edit" aria-hidden="true"></div>
 *     </a>
 */
.rb-c-inline-editor-edit-icon {
  display: inline-block;
  margin-left: 4px;
  text-decoration: none;
}
.rb-c-inline-editor-edit-icon:hover {
  text-decoration: none;
}
.rb-c-inline-editor-edit-icon .rb-icon {
  vertical-align: text-bottom;
}
.rb-c-inline-editor-edit-icon .required-flag {
  vertical-align: top;
}
/****************************************************************************
 * Rich text
 ****************************************************************************/
.rich-text {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  line-height: 17px;
  /*
   * NOTE: See .cm-rb-markdown-code in pages/reviews.less for details on
   *       how we're approaching displaying borders.
   *
   *       Much of this should eventually be moved back into Djblets.
   */
}
.rich-text * {
  margin: 0;
  padding: 0;
  line-height: inherit;
  text-rendering: inherit;
  white-space: normal;
}
.rich-text * br {
  display: block;
}
.rich-text h1,
.rich-text h2,
.rich-text h3,
.rich-text h4,
.rich-text h5,
.rich-text h6 {
  font-size: 100%;
}
.rich-text p {
  white-space: inherit;
  /* Don't show both the <br> and the blank line. */
}
.rich-text p br {
  display: none;
}
.rich-text ul,
.rich-text ol {
  line-height: 0;
  margin: 0;
  padding: 0;
}
.rich-text ul p,
.rich-text ol p {
  /*
       * <p> tags in a list do not preserve whitespace, since there's
       * mandatory leading whitespace before the content.
       */
}
.rich-text ul p br,
.rich-text ol p br {
  display: block;
}
.rich-text ul ul,
.rich-text ol ul,
.rich-text ul ol,
.rich-text ol ol {
  margin-left: 2ch;
}
.rich-text ol {
  /*
     * We want to keep wrapped text within the confines of the list item. So:
     *
     * 1. This is long text that
     *    wraps like this.
     *
     * Instead of:
     *
     * 1. This is long text that
     * wraps like this.
     *
     * To do this, we need to use display: table and display: table-cell.
     * However, that loses item counter rendering, so we have to do counters
     * ourselves. In combination with StyledOListBlockProcessor in
     * reviewboard/reviews/markdown_extensions.py, this maintains compatibility
     * with the start= attribute.
     */
  counter-reset: li;
  display: table;
  list-style-position: inside;
}
.rich-text ol > li {
  counter-increment: li;
  display: table;
}
.rich-text ol > li::before {
  content: counter(li) ". ";
  padding-right: 1ch;
  display: table-cell;
  text-align: right;
}
.rich-text ul {
  list-style-position: outside;
  list-style: disc;
  margin-left: 2ch;
}
.rich-text li {
  line-height: 17px;
}
.rich-text li ~ li:last-child p:last-child {
  margin-bottom: 0;
}
.rich-text li p {
  margin-bottom: 17px;
  /*
       * If the list item ends up with a sole <p>, just remove the margins.
       * Depending on neighboring elements, Python Markdown will sometimes
       * create list items this way.
       */
}
.rich-text li p:first-child:last-child {
  margin: 0;
}
.rich-text table {
  border-collapse: collapse;
  margin-left: 4px;
}
.rich-text table td,
.rich-text table th {
  padding: 0.2em 1em;
}
.rich-text table td {
  border: 1px solid #bbbbbb;
}
.rich-text table th {
  border-bottom: 1px solid #000000;
  border-left: 1px solid #bbbbbb;
  border-right: 1px solid #bbbbbb;
}
.rich-text table thead tr:last-child th {
  padding-bottom: 0.5em;
}
.rich-text table tbody tr:first-child td {
  padding-top: 0.5em;
}
.rich-text table tbody tr:last-child td {
  border-bottom: none;
}
.rich-text code {
  background-color: #FBFAF8;
  border: 1px solid #E3E3E3;
  border-radius: 3px;
  color: #BB1144;
  display: inline-block;
  margin: -1px;
  /*
     * Add just enough spacing to represent the backtick (`) before and after
     * the code block, so we can leave room there. The goal is to align the
     * content the best we can, so there's a more predictable width for the
     * line.
     */
}
.rich-text code:before,
.rich-text code:after {
  content: "`";
  visibility: hidden;
}
.rich-text pre {
  font-size: inherit;
  margin-left: 2.5em;
  white-space: pre-wrap;
}
.rich-text pre * {
  white-space: pre-wrap;
}
.rich-text blockquote {
  border-left: 1px solid #bbb;
  padding-left: 1em;
  margin-left: 0.5em;
}
.rich-text hr {
  border: 1px solid #ddd;
}
.rich-text .codehilite {
  background-color: #FBFAF8;
  border: 1px solid #DDD;
  border-radius: 3px;
  margin: -4px -11px;
  padding: 3px 10px;
}
.rich-text .codehilite code {
  /*
       * Undo all the rules above. This is necessary with Python-Markdown 3.2+,
       * which places a <code> around the code block. Previous versions did
       * not do this.
       */
  background: none;
  border: none;
  border-radius: 0;
  color: inherit;
  display: inline;
  margin: 0;
}
.rich-text .codehilite code:before,
.rich-text .codehilite code:after {
  content: none;
}
.rich-text .codehilite pre {
  margin-left: 0;
  padding: 0;
}
.rich-text .codehilite.codehilite-multiline-start {
  border-bottom: 0;
  border-radius: 3px 3px 0 0;
}
.rich-text .codehilite.codehilite-multiline-middle {
  border-top: 0;
  border-bottom: 0;
  border-radius: 0;
}
.rich-text .codehilite.codehilite-multiline-end {
  border-top: 0;
  border-radius: 0 0 3px 3px;
}
.rich-text .codehilite {
  border: 0;
  border-radius: 0;
  position: relative;
  margin: 0;
  padding: 0;
}
.rich-text .codehilite:before {
  content: "";
  position: absolute;
  background: inherit;
  border: 1px #DDD solid;
  border-radius: 3px;
  top: -1px;
  left: -10px;
  right: -10px;
  bottom: -1px;
}
.rich-text .codehilite code {
  /* Undo the default `code` border rules below. */
  padding: 0;
}
.rich-text .codehilite code:after,
.rich-text .codehilite code:before {
  display: none;
}
.rich-text code {
  white-space: pre-wrap;
  border: 0;
  border-radius: 0;
  margin: 0;
  padding-left: 1ch;
  padding-right: 1ch;
  position: relative;
}
.rich-text code:after {
  content: "";
}
.rich-text code:before {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 1px #E3E3E3 solid;
  border-radius: 3px;
  visibility: visible;
}
.rich-text img {
  max-width: 100%;
  height: auto;
}
.rich-text .emoji {
  width: auto;
  height: 1rem;
  vertical-align: text-top;
}
/**
 * A drop-down menu.
 *
 * This is shown as a result of clicking another piece of UI (such as a
 * ``.rb-c-menu-button``).
 *
 * Drop-down menus may contain lists of items that perform actions or
 * manipulate state. This may be represented as a ``<ul>`` tag, with each
 * item as a ``<li>``. It may also be represented as a ``<div>`` tag, with
 * each item as a ``<a>``, ``<button>``, or ``<div>``.
 *
 * They may also contain lists of buttons, when a ``.rb-c-button-group`` is
 * mixed in. In this case, ``.rb-c-button` should also be mixed in to each
 * ``.rb-c-menu__item``.
 *
 * :js:class:`RB.MenuView` provides a standard implementation of this
 * component.
 *
 * Accessibility Notes:
 *     Implementations of this component should implement keyboard navigation
 *     behavior for accessing items in the menu.
 *
 *     The following keys should be supported:
 *
 *     Enter:
 *         Trigger a click event on the selected item.
 *
 *     Escape, Tab:
 *         Close the menu and return focus to the controlling element that
 *         opened it.
 *
 *     Up:
 *         Move focus up one item. If focus was previously on the first item
 *         in the menu, focus should move to the last item.
 *
 *     Down:
 *         Move focus down one item. If focus was previously on the last item
 *         in the menu, focus should move to the first item.
 *
 *     Home, Page Up:
 *         Move focus to the first item.
 *
 *     End, Page Down:
 *         Move focus to the last item.
 *
 *     The menu and items should not be able to be focused via the Tab key.
 *     Instead, focus should be brought to the first menu item when opened
 *     via keyboard navigation.
 *
 *     Mouse movement over a menu item should also switch focus to that item.
 *     There is no ``:hover`` styling for menu items, so that all highlighting
 *     can standardize on ``:focus``.
 *
 * DOM Attributes:
 *     aria-labelledby (required):
 *         A reference to the element (or an element related to the element)
 *         that opened this menu. It must contain a descriptive label.
 *
 *     role (required):
 *         This must be set to "menu".
 *
 *     tabindex (required):
 *         This must be set to -1, allowing the menu to be focused
 *         programmatically but not through tabbing. Consumers must provide
 *         keyboard/mouse navigation.
 *
 * Structure:
 *     <ul class="rb-c-menu" role="menu" tabindex="-1" aria-labelledby="...">
 *      <li class="rb-c-menu__item" role="menuitem" tabindex="-1">...</li>
 *      ...
 *     </ul>
 *
 *     <div class="rb-c-menu" role="menu" tabindex="-1" aria-labelledby="...">
 *      <div class="rb-c-menu__item" role="menuitem">...</div>
 *      <div class="rb-c-menu__separator" role="separator"></div>
 *      ...
 *     </div>
 *
 *     <div class="rb-c-menu rb-c-button-group -is-vertical" role="menu"
 *          aria-labelledby="...">
 *      <button class="rb-c-menu__item rb-c-button" role="menuitem"
 *              type="button" tabindex="-1">...</div>
 *      ...
 *     </div>
 */
.rb-c-menu {
  background: #FFFFFF;
  border: 1px #C0C0C0 solid;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.05);
  display: none;
  list-style: none;
  opacity: 0;
  margin: 0;
  padding: 0;
  position: absolute;
  transition: opacity 0.2s linear;
  visibility: hidden;
  z-index: 110;
  /**
   * A menu item.
   *
   * This may contain any content needed in the menu item, but will usually
   * consist of text.
   *
   * The element type may be anything, and will depend on the parent
   * ``.rb-c-menu``. It will most commonly be a ``<li>``, ``<a>``, ``<div>``,
   * or ``<button>``.
   *
   * If displaying a button-based menu, this must have ``.rb-c-button`` mixed
   * in.
   *
   * Consumers are responsible for marking a menu item as focused in response
   * to keyboard navigation or mouse movements, in order to convey the active
   * item.
   *
   * DOM Attributes:
   *     role (required):
   *         This must be set to "menuitem".
   *
   *     tabindex (required):
   *         This must be set to -1, allowing the menu to be focused
   *         programmatically but not through tabbing. Consumers should provide
   *         keep
   *
   * Structure:
   *     <li class="rb-c-menu__item" role="menuitem" tabindex="-1">...</li>
   *
   *     <a class="rb-c-menu__item" role="menuitem" tabindex="-1">...</a>
   *
   *     <button class="rb-c-menu__item rb-c-button" role="menuitem"
   *             type="button" tabindex="-1">
   *      ...
   *     </button>
   */
  /**
   * A menu separator.
   */
}
.rb-c-menu.-is-open {
  display: block;
  opacity: 1;
  visibility: visible;
}
.rb-c-menu.js-no-animation {
  transition: none;
}
.rb-c-menu__item {
  cursor: pointer;
  display: block;
  list-display: none;
  margin: 0;
}
.rb-c-menu__item.rb-c-button:focus,
.rb-c-menu__itembutton:focus,
.rb-c-menu__iteminput[type="button"]:focus,
.rb-c-menu__iteminput[type="submit"]:focus {
  background: #DAEBFF;
  outline: 0;
}
.rb-c-menu__item:not(.rb-c-button) {
  /*
       * We want to apply padding to standard list items, but button list
       * items should retain button padding.
       */
  padding: 0.8em 1em;
}
.rb-c-menu__item:not(.rb-c-button):focus,
.rb-c-menu__item:not(.rb-c-button):hover {
  background: #DAEBFF;
  outline: 0;
}
.rb-c-menu__separator {
  border-bottom: 1px #C0C0C0 solid;
}
/**
 * Converts an element into a pop-up menu.
 *
 * Deprecated:
 *     4.0:
 *     Elements should mix in ``.rb-c-menu`` instead.
 */
/**
 * Indicates that an element will display a menu on hover.
 *
 * Deprecated:
 *     4.0:
 *     Consumers should use a more specific component class instead.
 */
.has-menu .menu {
  background: #FFFFFF;
  border: 1px #C0C0C0 solid;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.05);
  display: none;
  list-style: none;
  opacity: 0;
  margin: 0;
  padding: 0;
  position: absolute;
  transition: opacity 0.2s linear;
  visibility: hidden;
  z-index: 110;
  /**
   * A menu item.
   *
   * This may contain any content needed in the menu item, but will usually
   * consist of text.
   *
   * The element type may be anything, and will depend on the parent
   * ``.rb-c-menu``. It will most commonly be a ``<li>``, ``<a>``, ``<div>``,
   * or ``<button>``.
   *
   * If displaying a button-based menu, this must have ``.rb-c-button`` mixed
   * in.
   *
   * Consumers are responsible for marking a menu item as focused in response
   * to keyboard navigation or mouse movements, in order to convey the active
   * item.
   *
   * DOM Attributes:
   *     role (required):
   *         This must be set to "menuitem".
   *
   *     tabindex (required):
   *         This must be set to -1, allowing the menu to be focused
   *         programmatically but not through tabbing. Consumers should provide
   *         keep
   *
   * Structure:
   *     <li class="rb-c-menu__item" role="menuitem" tabindex="-1">...</li>
   *
   *     <a class="rb-c-menu__item" role="menuitem" tabindex="-1">...</a>
   *
   *     <button class="rb-c-menu__item rb-c-button" role="menuitem"
   *             type="button" tabindex="-1">
   *      ...
   *     </button>
   */
  /**
   * A menu separator.
   */
}
.has-menu .menu.-is-open {
  display: block;
  opacity: 1;
  visibility: visible;
}
.has-menu .menu.js-no-animation {
  transition: none;
}
.has-menu .menu__item {
  cursor: pointer;
  display: block;
  list-display: none;
  margin: 0;
}
.has-menu .menu__item.rb-c-button:focus,
.has-menu .menu__itembutton:focus,
.has-menu .menu__iteminput[type="button"]:focus,
.has-menu .menu__iteminput[type="submit"]:focus {
  background: #DAEBFF;
  outline: 0;
}
.has-menu .menu__item:not(.rb-c-button) {
  /*
       * We want to apply padding to standard list items, but button list
       * items should retain button padding.
       */
  padding: 0.8em 1em;
}
.has-menu .menu__item:not(.rb-c-button):focus,
.has-menu .menu__item:not(.rb-c-button):hover {
  background: #DAEBFF;
  outline: 0;
}
.has-menu .menu__separator {
  border-bottom: 1px #C0C0C0 solid;
}
.has-menu:hover > .menu {
  display: block;
  opacity: 1;
  visibility: visible;
}
.rb-c-event-overlay {
  background-color: black;
  height: 100%;
  left: 0;
  opacity: 20%;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 109;
}
/**
 * Styles and mixins for the rb-c-page-content-box component.
 */
/**
 * A main content box on the page.
 *
 * In desktop mode, this will show a border around the content area, with
 * padding in-between. In mobile mode, this will have no decoration or
 * additional padding, allowing the content to take the maximum amount of
 * space available.
 *
 * Modifiers:
 *     -is-content-flush:
 *         The content is expected to be flush with the boundaries of the box.
 *         This will remove any padding inside the box in desktop mode.
 *
 * Structure:
 *     <div class="rb-c-page-content-box">
 *      ...
 *     </div>
 */
.rb-c-page-content-box.-is-content-flush {
  padding: 0;
}
/**
 * Main sidebar for the page.
 *
 * This component comprises the main part of the UI shell controlling the
 * layout of page sidebars and their inclusion in mobile mode's hamburger
 * menu.
 */
/**
 * The main sidebar and mobile navigation menu shown on a page.
 *
 * This houses one or more sidebar panes, which may be shown on the page
 * in desktop mode (if ``<body>`` has the ``-has-sidebar`` CSS modifier
 * class applied) or when in mobile mode. Only one pane should be shown at
 * a time.
 *
 * When ``<body>`` has the ``-is-content-full-page`` CSS modifier class
 * applied, the main page sidebar will be scrollable. This is managed in
 * :file:`css/pages/base.less`.
 *
 * The page sidebar can transition between a desktop mode (where the sidebar
 * is shown on the left-hand side of the page) and a mobile mode (where it
 * comprises the entirety of the hamburger menu). Some of the elements used in
 * this component are specific to the mobile mode, and are hidden in desktop
 * mode.
 *
 * Modifiers:
 *     -is-connected:
 *         Whether the sidebar items are connected directly to a content box
 *         on the right. This will provide a visual indicator associating the
 *         active sidebar entry with the content.
 *
 * Structure:
 *     <div class="rb-c-page-sidebar">
 *      <header class="rb-c-page-sidebar__mobile-header">...</header>
 *      <div class="rb-c-page-sidebar__panes">...</div>
 *      <footer class="rb-c-page-sidebar__mobile-footer">...</footer>
 *     </div>
 */
.rb-c-page-sidebar {
  box-sizing: border-box;
  position: absolute;
  transition: 0.3s transform ease-out;
  z-index: 20;
  /**
   * Footer shown at the bottom of the mobile menu.
   *
   * Structure:
   *     <footer class="rb-c-page-sidebar__mobile-footer">
   *      <ul>
   *       <li><a href="...">...</a></li>
   *      </ul>
   *     </footer>
   */
  /**
   * Header shown at the top of the mobile menu.
   *
   * Structure:
   *     <header class="rb-c-page-sidebar__mobile-header">
   *      <img class="djblets-o-avatar" ...>
   *      <span class="rb-c-page-sidebar__mobile-username">...</span>
   *      <ul class="rb-c-page-sidebar__mobile-user-actions">
   *       <li>...</li>
   *      </ul>
   *     </header>
   */
  /**
   * The current user's username.
   *
   * Structure:
   *     <span class="rb-c-page-sidebar__mobile-username">...</span>
   */
  /**
   * A collection of panes in the sidebar.
   *
   * This is used primarily for pane placement and lookup purposes, and does
   * not include any styling.
   *
   * Structure:
   *     <div class="rb-c-page-sidebar__panes">
   *      <div class="rb-c-page-sidebar__pane">...</div>
   *      ...
   *     </div>
   */
  /**
   * A layered pane in the sidebar.
   *
   * Panes can scroll if there's too much content to display (and the page is
   * set up to constrain the height of ``.rb-c-page-sidebar``). The outer pane
   * handles the scrolling and basic state, and the
   * ``.rb-c-page-sidebar__pane-content` child element contains any content to
   * show in the pane.
   *
   * Panes can be shown or hidden. Only one pane should be shown at a time. By
   * default, transitioning that state will result in a fade-in/out effect,
   * though specialized panes can provide their own transition effect.
   *
   * Modifiers:
   *     -is-shown:
   *         The pane is currently shown on the screen.
   *
   * Structure:
   *     <div class="rb-c-page-sidebar__pane -is-shown">
   *      <div class="rb-c-page-sidebar__pane-content">
   *       ...
   *      </div>
   *     </div>
   */
  /**
   * Content shown in a sidebar pane.
   *
   * This is generally going to have a ``.rb-c-sidebar`` component inside of
   * it, but can display any form of content appropriate for the page.
   *
   * Structure:
   *     <div class="rb-c-page-sidebar__pane-content">
   *      ...
   *     </div>
   */
}
@media only screen and (max-width: 800px) {
  .rb-c-page-sidebar {
    /* Note: Colors here are going to be set by the theme. */
    box-sizing: border-box;
    border: 0;
    border-right: 1px transparent solid;
    top: 0;
    left: -300px;
    height: 100%;
    width: 300px;
  }
  .rb-c-page-sidebar .rb-c-sidebar__nav-item:hover,
  .rb-c-page-sidebar .rb-c-sidebar__nav-section-header:hover,
  .rb-c-page-sidebar .rb-c-sidebar__nav-item.-is-active,
  .rb-c-page-sidebar .rb-c-sidebar__nav-section-header.-is-active,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.active .page-sidebar-row,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .rb-c-page-sidebar .rb-c-sidebar__nav-item:hover,
  .rb-c-page-sidebar .rb-c-sidebar__nav-section-header:hover,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
    border-right: 1px #AAAEA1 solid;
  }
  .rb-c-page-sidebar .rb-c-sidebar__nav-item.-is-active,
  .rb-c-page-sidebar .rb-c-sidebar__nav-section-header.-is-active,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.active .page-sidebar-row,
  .rb-c-page-sidebar #page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row {
    border-right: 1px transparent solid;
  }
  .rb-c-page-sidebar .rb-c-page-sidebar__pane {
    padding-right: 0;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-page-sidebar {
    margin: 0 0 1.5em 1px;
  }
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-item:hover,
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-section-header:hover,
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-item.-is-active,
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-section-header.-is-active,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.active .page-sidebar-row,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-item:hover,
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-section-header:hover,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
    border-right: 1px #AAAEA1 solid;
  }
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-item.-is-active,
  .rb-c-page-sidebar.-is-connected .rb-c-sidebar__nav-section-header.-is-active,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.active .page-sidebar-row,
  .rb-c-page-sidebar.-is-connected #page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row {
    border-right: 1px transparent solid;
  }
  .rb-c-page-sidebar.-is-connected .rb-c-page-sidebar__pane {
    padding-right: 0;
  }
}
.rb-c-page-sidebar__mobile-footer {
  font-size: 0;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0;
  padding: 0;
}
@media only screen and (max-width: 800px) {
  .rb-c-page-sidebar__mobile-footer {
    display: flex;
    justify-content: space-evenly;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-page-sidebar__mobile-footer {
    display: none;
  }
}
.rb-c-page-sidebar__mobile-footer li {
  display: inline-block;
  font-size: 12px;
  text-align: center;
}
.rb-c-page-sidebar__mobile-footer li a {
  box-sizing: border-box;
  color: inherit;
  display: block;
  height: 100%;
  padding: 1em;
}
.rb-c-page-sidebar__mobile-footer ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
.rb-c-page-sidebar__mobile-header {
  font-size: 120%;
  height: 50px;
  overflow: hidden;
  padding: 5px;
  white-space: nowrap;
  vertical-align: middle;
  /**
     * A list of account-related actions the user can perform.
     *
     * This will be shown alongside the avatar and username (or below it if
     * the username is too long).
     *
     * Structure:
     *     <ul class="rb-c-page-sidebar__mobile-user-actions">
     *      <li>...</li>
     *     </ul>
     */
}
@media only screen and (max-width: 800px) {
  .rb-c-page-sidebar__mobile-header {
    display: block;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-page-sidebar__mobile-header {
    display: none;
  }
}
.rb-c-page-sidebar__mobile-header .djblets-o-avatar {
  display: inline-block;
  vertical-align: middle;
}
.rb-c-page-sidebar__mobile-header .rb-c-page-sidebar__mobile-user-actions {
  float: right;
  font-size: 10px;
  line-height: inherit;
  list-style: none;
  margin: 4px 8px 0 0;
  padding: 0;
  white-space: nowrap;
}
.rb-c-page-sidebar__mobile-header .rb-c-page-sidebar__mobile-user-actions li {
  display: inline-block;
  margin: 0 0 0 2em;
  padding: 4px 0;
  text-align: center;
}
.rb-c-page-sidebar__mobile-header .rb-c-page-sidebar__mobile-user-actions li a {
  color: inherit;
}
.rb-c-page-sidebar__mobile-header .rb-c-page-sidebar__mobile-user-actions li span {
  line-height: inherit;
}
.rb-c-page-sidebar__mobile-header .rb-c-page-sidebar__mobile-user-actions li .fa {
  font-size: 18px;
  vertical-align: middle;
}
.rb-c-page-sidebar__mobile-username {
  vertical-align: middle;
}
.rb-c-page-sidebar__pane {
  box-sizing: border-box;
  opacity: 0;
  transition: 0.2s linear opacity, 0.2s linear visibility;
  visibility: hidden;
}
@media only screen and (max-width: 800px) {
  .rb-c-page-sidebar__pane {
    position: absolute;
    top: 50px;
    bottom: 50px;
    left: 0;
    right: -1px;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-page-sidebar__pane {
    direction: rtl;
    /* Position the scrollbar on the left. */
    padding: 3em 1em 0 1em;
  }
  .rb-c-page-sidebar__pane .rb-c-page-sidebar__pane-content {
    direction: ltr;
    /* Restore the default direction of the content. */
  }
}
.rb-c-page-sidebar__pane.-is-shown {
  opacity: 1;
  visibility: visible;
}
@media only screen and (max-width: 800px) {
  .rb-c-page-sidebar__pane-content .rb-c-sidebar,
  .rb-c-page-sidebar__pane-content #page_sidebar {
    /*
         * Give the sidebar some breathing room so it's not overlapping the
         * top or bottom set of links in the mobile sidebar.
         */
    padding: 0.5em 0 0.5em 0.5em;
    width: 100%;
    /*
         * We might have a nested deprecated sidebar element. Fix its styling
         * here so that it may properly fit within the page.
         */
  }
  .rb-c-page-sidebar__pane-content .rb-c-sidebar #page_sidebar,
  .rb-c-page-sidebar__pane-content #page_sidebar #page_sidebar {
    position: relative;
    margin: 0;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-page-sidebar__pane-content .rb-c-sidebar,
  .rb-c-page-sidebar__pane-content #page_sidebar {
    position: relative;
  }
}
body.full-page-content,
body.-is-content-full-page {
  /*
   * Make sure the sidebar is scrollable in order to allow the user to
   * access any parts of it.
   */
}
body.full-page-content .rb-c-page-sidebar__pane,
body.-is-content-full-page .rb-c-page-sidebar__pane {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
@media only screen and (max-width: 800px) {
  /* On mobile, the sidebar must always be scrollable. */
  .rb-c-page-sidebar__pane {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
}
/* Set a default width for the sidebar. */
@media only screen and (min-width: 801px) {
  /*
         * This may be called as a top-level rule, or as part of a CSS class
         * on ``<body>``. Support both.
         */
  body.-has-sidebar #content,
  body.has-sidebar #content {
    margin-left: 21em;
  }
  .rb-c-page-sidebar {
    width: 21em;
  }
}
/** A standardized search field with an icon. */
/**
 * A field for searching or filtering content.
 *
 * Structure:
 *     <div class="rb-c-search-field">
 *      <span class="fa fa-search"></span>
 *      <input class="rb-c-search-field__input" type="search">
 *     </div>
 */
.rb-c-search-field {
  position: relative;
  /**
   * The text input field.
   *
   * Structure:
   *     <input class="rb-c-search-field__input">
   */
}
.rb-c-search-field .fa {
  color: #999999;
  font-size: 14px;
  position: absolute;
  left: 5px;
  top: 3px;
}
.rb-c-search-field__input {
  /* Avoid input[type=...] taking precedence. */
}
.rb-c-search-field__input,
.rb-c-search-field__input[type=search],
.rb-c-search-field__input[type=text],
.djblets-c-config-forms-page__content .rb-c-search-field__input[type=search],
.djblets-c-config-forms-page__content .rb-c-search-field__input[type=text] {
  border: 1px solid #999999;
  border-radius: 6px;
  box-sizing: border-box;
  padding: 2px 4px 4px 22px;
  width: 100%;
}
/**
 * Defines a sidebar on the page.
 *
 * Sidebars allow for navigation between pages or within a page. They're
 * composed of items organized by sections. Each item can display a label,
 * along with an optional icon and value.
 *
 * Pages displaying a sidebar should set the ``-has-sidebar`` class on
 * ``<body>``.
 *
 * Accessibility Notes:
 *     Consumers of this component should generally use either ``<nav>`` or
 *     ``<section>``, in order to define a suitable landmark for the sidebar
 *     content.
 *
 *     Using ``<nav>`` will communicate to screen readers that there are
 *     navigation items available in the sidebar. Using ``<section>`` instead
 *     will communicate a general landmark.
 *
 *     Sidebars should always use an ``aria-label`` to distinguish between
 *     them.
 *
 * DOM Attributes:
 *     aria-label (string):
 *         A label describing this sidebar. This may simply be "Sidebar", but
 *         if the page makes use of multiple sidebars (such as a slide-out
 *         sidebar), there should be distinct labels.
 *
 * Modifiers:
 *     -has-icons:
 *         Items may have icons. This provides sufficient spacing for icons
 *         on the left of all items in the sidebar.
 *
 * Structure:
 *     <nav class="rb-c-sidebar" aria-label="...">
 *      <ul class="rb-c-sidebar__items">
 *       <li class="rb-c-sidebar__section">
 *        ...
 *       </li>
 *       ...
 *      </ul>
 *     </nav>
 *
 *     <section class="rb-c-sidebar" aria-label="...">...</section>
 */
.rb-c-sidebar,
#page_sidebar {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
.rb-c-sidebar a,
.rb-c-sidebar a:link,
.rb-c-sidebar a:visited,
#page_sidebar a,
#page_sidebar a:link,
#page_sidebar a:visited {
  color: inherit;
  display: block;
  text-decoration: none;
}
/**
 * A list of items/sections in a sidebar's top level or in a section.
 *
 * These should contain a list of ``<li class="rb-c-sidebar__item">`` or
 * ``<li class="rb-c-sidebar__section">`` elements.
 *
 * Two of these can be placed adjacent to each other to create a visual
 * separation within a section.
 *
 * Structure:
 *     <ul class="rb-c-sidebar__items">
 *      <li class="rb-c-sidebar__item">
 *       ...
 *      </li>
 *      ...
 *     </ul>
 */
.rb-c-sidebar__items,
#page_sidebar .page-sidebar-items,
#page_sidebar .page-sidebar-items li ul {
  list-style: none;
  margin: 0;
  /*
   * Prevent the shadow from going off the right-hand side (so the overlap
   * onto the content is correct), but ensure it doesn't disappear below the
   * last item in the section.
   */
  padding: 0 0 6px 0;
  overflow-x: hidden;
}
.rb-c-sidebar__items + .rb-c-sidebar__items {
  /* New subsection */
  margin-bottom: 1em;
}
/**
 * An item in a sidebar.
 *
 * These must contain a ``.rb-c-sidebar__item-label`` child, and may also
 * contain an icon (``.rb-c-sidebar__icon``) and/or value
 * (``.rb-c-sidebar__item-value``).
 *
 * For navigating to a page, the more specific ``.rb-c-sidebar__nav-item``
 * may be used.
 *
 * Structure:
 *     <li class="rb-c-sidebar__item">
 *      <div class="rb-c-sidebar__icon rb-icon rb-icon-edit"></div>
 *      <span class="rb-c-sidebar__item-label">Label</a>
 *      <span class="rb-c-sidebar__item-value">42</span>
 *     </li>
 */
.rb-c-sidebar__item,
.rb-c-sidebar__nav-item,
.rb-c-sidebar__section-header,
#page_sidebar .page-sidebar-items li,
.rb-c-sidebar__nav-section-header,
#page_sidebar .page-sidebar-items li.has-url,
#page_sidebar .page-sidebar-items li.section > .page-sidebar-row .label {
  display: block;
  line-height: 20px;
  list-style: none;
  margin: 0;
  position: relative;
  text-align: left;
  word-break: break-all;
  /* Match the border on the active row, to prevent content jumps. */
  border: 1px transparent solid;
}
/**
 * A navigation item in a sidebar.
 *
 * These must contain a ``.rb-c-sidebar__item-label`` child, and may also
 * contain an icon (``.rb-c-sidebar__icon``) and/or value
 * (``.rb-c-sidebar__item-value``).
 *
 * Labels should use an ``<a href="...">`` tag.
 *
 * Modifiers:
 *     -is-active:
 *         This item represents the current page view.
 *
 * Structure:
 *     <li class="rb-c-sidebar__nav-item">
 *      <div class="rb-icon rb-icon-edit"></div>
 *      <a class="rb-c-sidebar__item-label" href="/page/">Label</a>
 *      <span class="rb-c-sidebar__item-value">42</span>
 *     </li>
 */
/**
 * An icon for an item in the sidebar.
 *
 * This can be an ``<img>``, ``.rb-icon``, or any other class. The size
 * should be 20x20 pixels or smaller.
 *
 * If used, the parent ``.rb-c-sidebar`` or ``.rb-c-sidebar__section`` must
 * use the ``.-has-icons`` modifier.
 *
 * Structure:
 *     <span class="rb-c-sidebar__icon rb-icon rb-icon-edit"></span>
 */
.rb-c-sidebar__icon,
#page_sidebar .page-sidebar-items li .rb-icon {
  position: absolute;
  display: inline-block;
  vertical-align: middle;
  left: 10px;
  pointer-events: none;
  /* This trick will properly center-align our icon. */
  top: 50%;
  transform: translateY(-50%);
}
a.rb-c-sidebar__icon,
a#page_sidebar .page-sidebar-items li .rb-icon {
  pointer-events: all;
}
/**
 * A label for an item in the sidebar.
 *
 * If this is a navigation item, this should be a ``<a href="...">``.
 *
 * Structure:
 *     <a class="rb-c-sidebar__item-label" href="/page/">Label</a>
 */
.rb-c-sidebar__item-label,
#page_sidebar .page-sidebar-items li a {
  display: block;
  padding: 5px 10px;
}
/**
 * The value shown in a sidebar item.
 *
 * This can be used to show a short value, such as a number of a boolean,
 * indicating the item's state.
 *
 * If the value is an empty/disabled sort of value (like 0 or false), then
 * this can use the ``.-is-dimmed`` class to dim the appearance.
 *
 * Modifiers:
 *     -is-dimmed:
 *         Dims the display of the value.
 *
 * Structure:
 *     <span class="rb-c-sidebar__item-value">42</span>
 *
 *     <span class="rb-c-sidebar__item-value -is-dimmed">0</span>
 */
.rb-c-sidebar__item-value,
.rb-c-sidebar__nav-section-header:after,
#page_sidebar .page-sidebar-items li .count {
  color: #124BBD;
  position: absolute;
  right: 20px;
  font-size: 95%;
  padding: 0px 0 0px 8px;
  margin-top: 0px;
  /* Make sure we can click through the value. */
  pointer-events: none;
  /* Vertically-align the value. */
  top: 50%;
  transform: translateY(-50%);
}
.rb-c-sidebar__item-value.-is-dimmed,
#page_sidebar .page-sidebar-items li .count.count-zero {
  color: #C0C0C0;
}
/**
 * A section in a sidebar.
 *
 * Sections must have a section header (``.rb-c-sidebar__section-header``)
 * and should have a list of items (``.rb-c-sidebar__items``).
 *
 * Modifiers:
 *     -has-icons:
 *         Items may have icons. This provides sufficient spacing for icons
 *         on the left of all items in the section.
 *
 *     -is-desktop-only:
 *         The section will only be displayed if the page shell is in desktop
 *         mode.
 *
 *     -is-mobile-only:
 *         The section will only be displayed if the page shell is in mobile
 *         mode.
 *
 * Structure:
 *     <li class="rb-c-sidebar__section">
 *      <header class="rb-c-sidebar__section-header">Header</header>
 *      <ul class="rb-c-sidebar__items">
 *       ...
 *      </ul>
 *     </li>
 */
.rb-c-sidebar__section,
#page_sidebar .page-sidebar-items li.section {
  list-style: none;
  margin: 0 0 1em 0;
}
@media only screen and (max-width: 800px) {
  .rb-c-sidebar__section.-is-mobile-only {
    display: list-item;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-sidebar__section.-is-mobile-only {
    display: none;
  }
}
@media only screen and (max-width: 800px) {
  .rb-c-sidebar__section.-is-desktop-only {
    display: none;
  }
}
@media only screen and (min-width: 801px) {
  .rb-c-sidebar__section.-is-desktop-only {
    display: list-item;
  }
}
/**
 * The header for a section.
 *
 * Modifiers:
 *     -is-active:
 *         This section header represents the current page view. This is
 *         used for section headers that double as navigation elements.
 *
 * Structure:
 *     <header class="rb-c-sidebar__section-header">Header</header>
 */
.rb-c-sidebar__section-header,
.rb-c-sidebar__nav-section-header,
#page_sidebar .page-sidebar-items li.section > .page-sidebar-row .label {
  color: #444444;
  font-size: 110%;
  font-weight: bold;
  text-transform: uppercase;
  padding-left: 10px;
}
/**
 * A section header that works as a navigation item.
 *
 * This allows a header to have the same visuals that a nav item would have,
 * and to shoe as active when it matches the current page.
 *
 * Structure:
 *     <header class="rb-c-sidebar__nav-section-header">
 *      <a href="/page/">Label</a>
 *     </header>
 */
.rb-c-sidebar__nav-section-header {
  display: block;
  padding: 5px 10px 5px 10px;
}
.rb-c-sidebar__nav-section-header:after {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: inherit;
  content: "\f0da";
}
/* Modifier options common to the sidebar and sections. */
.rb-c-sidebar.-has-icons .rb-c-sidebar__item-label,
.rb-c-sidebar__section.-has-icons .rb-c-sidebar__item-label,
#page_sidebar.-has-icons .rb-c-sidebar__item-label {
  padding-left: 30px;
}
/* Navigation visuals for nav items and section headers. */
.rb-c-sidebar__nav-item,
.rb-c-sidebar__nav-section-header,
#page_sidebar .page-sidebar-items li.has-url {
  cursor: pointer;
}
.rb-c-sidebar__nav-item:hover,
.rb-c-sidebar__nav-section-header:hover,
#page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
  background: #ffffff;
  border: 1px #f4f5f3 solid;
}
.rb-c-sidebar__nav-item:hover,
.rb-c-sidebar__nav-section-header:hover,
.rb-c-sidebar__nav-item.-is-active,
.rb-c-sidebar__nav-section-header.-is-active,
#page_sidebar .page-sidebar-items li.active .page-sidebar-row,
#page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row,
#page_sidebar .page-sidebar-items li.has-url:hover .page-sidebar-row {
  border-radius: 15px;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
}
.rb-c-sidebar__nav-item.-is-active,
.rb-c-sidebar__nav-section-header.-is-active,
#page_sidebar .page-sidebar-items li.active .page-sidebar-row,
#page_sidebar .page-sidebar-items li.active.has-url:hover .page-sidebar-row {
  background: #FFFFFF;
  border: 1px #AAAEA1 solid;
}
/****************************************************************************
 * Deprecated styles
 ****************************************************************************/
#page_sidebar {
  /*
   * We're using the same basic positioning and styling that we used in 3.0
   * for the legacy page_sidebar, to ensure presentation is correct for any
   * extensions that are setting up their own sidebars. They'll likely base
   * other layout requirements on these values. We don't want to use the
   * modern ones we're defining for a page sidebar, for this reason.
   */
  direction: rtl;
  /* Position the scrollbar on the left. */
  position: absolute;
  top: 0;
  bottom: 1px;
  margin: 3em -1px 0 1px;
  padding: 1em 0;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
#page_sidebar .page-sidebar-items li {
  border: 0;
}
#page_sidebar .page-sidebar-items li.has-url {
  border: 0;
}
#page_sidebar .page-sidebar-items li.new-subsection {
  margin-top: 10px;
}
#page_sidebar .page-sidebar-items li.section > .page-sidebar-row .label {
  margin: 0;
}
#page_sidebar .page-sidebar-items li .label {
  border: 0;
}
#page_sidebar .page-sidebar-items li .page-sidebar-row {
  border: 1px transparent solid;
  position: relative;
}
#page_sidebar .page-sidebar-items li .page-sidebar-row.overview-section-row {
  line-height: normal;
  vertical-align: middle;
}
#page_sidebar .page-sidebar-items li .page-sidebar-row.overview-section-row a {
  padding-left: 10px;
}
#page_sidebar .page-sidebar-items li .page-sidebar-row.overview-section-row .label {
  padding-left: 0;
}
#page_sidebar .page-sidebar-items li .overview-count {
  font-size: 135%;
  padding-right: 0;
}
/**
 * A slideshow for navigating and cycling between content.
 *
 * Slideshows can automatically cycle between content periodically, up to
 * a maximum number of time. Users can choose to navigate to specific pages,
 * which will turn off the automatic navigation.
 *
 * An animation will play when transitioning slides. This defaults to a
 * sliding animation. If the user's system/browser preferences is set to
 * prefer reduced motion, it will instead be a simple fade.
 *
 * This is meant to be used with the :js:class:`RBWS.UI.SlideshowView` view,
 * for event handling and automatic cycling.
 *
 * DOM Attributes:
 *     aria-label (string):
 *         Set to a label describing this slideshow.
 *
 *     aria-roledescription (string):
 *         Set to ``carousel``.
 *
 * Modifiers:
 *     -is-auto-cycled:
 *         If set, the slideshow will automatically cycle between content.
 *
 * Structure:
 *     <div class="rb-c-slideshow"
 *          aria-label="..."
 *          aria-roledescription="carousel">
 *      <nav class="rb-c-slideshow__nav">
 *       ...
 *      </nav>
 *      <ul class="rb-c-slideshow__slides ..." ...>
 *       ...
 *      </ul>
 *     </div>
 */
.rb-c-slideshow {
  overflow-x: hidden;
  /**
   * The navigation links for the slideshow.
   *
   * Structure:
   *     <nav class="rb-c-slideshow__nav">
   *      <a class="rb-c-slideshow__nav-item" ...>...</a>
   *      ...
   *     </nav>
   *
   *     Alternatively, the slideshow can use next and previous buttons:
   *
   *     <nav class="rb-c-slideshow__nav">
   *      <a class="rb-c-slideshow__nav-prev" ...>...</a>
   *      <a class="rb-c-slideshow__nav-next" ...>...</a>
   *     </nav>
   */
  /**
   * Next and previous buttons for the slideshow.
   *
   * DOM Attributes:
   *     aria-label (string):
   *          The accessibility label for the button.
   *
   *     role (string):
   *         This must be set to ``button``.
   *
   *     title (string):
   *          The tooltip label for the button.
   *
   * Structure:
   *     <a class="rb-c-slideshow__nav-prev"
   *        aria-label="Previous"
   *        href="#"
   *        role="button"
   *        title="Previous">
   *      <span class="fa fa-caret-left"></span>
   *     </a>
   */
  /**
   * A navigation link pointing to a particular slide.
   *
   * DOM Attributes:
   *     aria-controls (string):
   *         The ID of the ``rb-c-slideshow__slides`` element.
   *
   *     aria-selected (boolean):
   *         ``true`` for the current slide's navigation item and ``false``
   *         for all others.
   *
   *     href (string):
   *         The anchor name pointing to ID of the corresponding
   *         ``rb-c-slideshow__slide`` element.
   *
   *     id (string):
   *         A unique ID that can be referenced by the
   *         ``rb-c-slideshow__slide`` element.
   *
   * Structure:
   *     <a id="nav_id..."
   *        class="rb-c-slideshow__nav-item"
   *        href="#slide-id..."
   *        aria-controls="slides_id..."
   *        aria-selected="true|false">
   *      title...
   *     </a>
   */
  /**
   * A slide.
   *
   * The content within the slide will be scrollable along the X axis, if it
   * doesn't fit. Only one slide is ever shown at a time.
   *
   * DOM Attributes:
   *     aria-hidden (boolean):
   *         ``false`` for the current slide, and ``true`` for all others.
   *
   *     aria-labelledby (string):
   *         The ID of the corresponding ``rb-c-slideshow__nav-item``
   *         element.
   *
   *     aria-roledescription (string):
   *         Set to ``slide``.
   *
   *     id (string):
   *         A unique ID that can referenced by the
   *         ``rb-c-slideshow__nav-item`` element.
   *
   *     role (string):
   *         Set to ``group``.
   *
   *     data-last-animation (string, optional):
   *         The name of the last animation that would play on a slide, if
   *         the slide contains animations. Cycling will only occur after
   *         the named animation has ended.
   *
   * Structure:
   *     <li id="slide_id..."
   *         class="rb-c-slideshow__slide"
   *         role="group"
   *         aria-hidden="true|false"
   *         aria-roledescription="slide"
   *         aria-labelledby="nav_id...">
   *      <div class="rb-c-slideshow__slide-content">
   *       ...
   *      </div>
   *     </li>
   */
  /**
   * The displayed content within a slide.
   *
   * Structure:
   *     <div class="rb-c-slideshow__slide-content">
   *      ...
   *     </div>
   */
  /**
   * The collection of slides.
   *
   * DOM Attributes:
   *     aria-live (string):
   *         Set to ``off``. This will then be managed automatically by
   *         the JavaScript side.
   *
   *     id (string):
   *         A unique ID that can be referenced by
   *         ``rb-c-slideshow__nav-item``'s ``aria-controls=`` attribute.
   *
   * Structure:
   *     <ul id="..."
   *         class="rb-c-slideshow__slides ..."
   *         aria-live="off">
   *      <li class="rb-c-slideshow__slide ...">...</li>
   *      ...
   *     </ul>
   */
}
.rb-c-slideshow__nav {
  font-size: 120%;
  margin: 1em 0 0.5em 0;
  text-align: center;
}
.rb-c-slideshow__nav-next,
.rb-c-slideshow__nav-prev {
  display: block;
  padding: 0.5em 0.25em;
  margin: -0.5em 0;
}
.rb-c-slideshow__nav-item {
  color: #124BBD;
  display: inline-block;
  border-bottom: 2px transparent solid;
  font-weight: normal;
  margin: 1em;
  text-align: center;
  padding-bottom: 3px;
}
.rb-c-slideshow__nav-item[aria-selected="true"] {
  border-bottom-color: #124BBD;
}
@media only screen and (max-width: 800px) {
  .rb-c-slideshow__nav-item {
    margin: 0.5em;
  }
}
.rb-c-slideshow__slide {
  display: inline-block;
  flex: 0 0 100%;
  margin: 0;
  padding: 0;
  overflow-x: auto;
  position: relative;
  width: 100%;
  height: 100%;
  transition: 0.4s ease-in-out opacity;
}
.rb-c-slideshow__slide[aria-hidden="true"] {
  opacity: 0;
}
.rb-c-slideshow__slide[aria-hidden="false"] {
  opacity: 1;
}
.rb-c-slideshow__slide-content {
  display: inline-block;
  margin: 0 auto;
  position: relative;
}
.rb-c-slideshow__slides {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
  transition: 0.4s ease-in-out all;
  will-change: transform;
}
@media (prefers-reduced-motion) {
  .rb-c-slideshow__slides {
    transition: none;
  }
}
/**
 * A CSS component for tabbed navigation.
 */
/**
 * A list of tabs.
 *
 * Each tab within supports an ``-is-active`` modifier class indicating if
 * the tab is currently active.
 *
 * Tab labels may also have responsive content by providing a ``<label>``
 * with multiple ``<span>`` tags within using ``-is-full-label`` and
 * ``-is-short-label`` modifier classes.
 *
 * Structure:
 *     <ul class="rb-c-tabs">
 *      <li class="rb-c-tabs__tab -is-active">
 *       <label class="rb-c-tabs__tab-label">...</label>
 *      </li>
 *      <li class="rb-c-tabs__tab">
 *       <label class="rb-c-tabs__tab-label">
 *        <span class="rb-c-tabs__tab-label-full">...</span>
 *        <span class="rb-c-tabs__tab-label-short">...</span>
 *       </label>
 *      </li>
 *      ...
 *     </ul>
 */
.rb-c-tabs {
  list-style: none;
  margin: 0;
  padding: 0;
  /**
   * A tab containing a label.
   *
   * Modifiers:
   *     -is-active:
   *         The tab is the currently active tab. This should only be set on
   *         one tab at a time.
   */
  /**
   * The label for a tab.
   *
   * This can contain text, icons, or other content.
   *
   * A shorter, mobile-friendly label can be set by providing two sets of label
   * content inside ``<span>`` tags, like so::
   *
   *     <span class="rb-c-tabs__tab-label-full">...</span>
   *     <span class="rb-c-tabs__tab-label-short">...</span>
   *
   * If providing only a full label, this is not needed.
   */
  /**
   * Short label content for small screens.
   */
  /**
   * Full label content for larger screens.
   */
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .rb-c-tabs {
    /*
     * Keep the tabs at one row and make it scrollable horizontally. On mobile
     * devices, there won't be a scrollbar getting in the way.
     *
     * Since the overflow will normally cut off part of the tab, we also need
     * just a bit of padding above the tabs.
     */
    overflow-x: auto;
    padding-top: 1px;
    white-space: nowrap;
  }
}
.rb-c-tabs__tab {
  border: 1px transparent solid;
  border-radius: 6px 6px 0 0;
  cursor: pointer;
  display: inline-block;
  margin: 0 0.5em 0 0;
  padding: 5px 10px 5px 10px;
  vertical-align: bottom;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .rb-c-tabs__tab {
    margin-right: 0;
  }
}
.rb-c-tabs__tab * {
  cursor: pointer;
  vertical-align: middle;
}
.rb-c-tabs__tab-label {
  color: black;
  display: inline;
  font-weight: normal;
  line-height: 16px;
  vertical-align: middle;
}
.rb-c-tabs__tab-label-short {
  display: none;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .rb-c-tabs__tab-label-short {
    display: inline;
  }
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .rb-c-tabs__tab-label-full {
    display: none;
  }
}
/* Make tabs grey by default. */
.rb-c-tabs__tab:hover {
  background: #dcdcdc;
  border-color: #cdcdcd;
}
.rb-c-tabs__tab.-is-active {
  background: #E9E9E9;
  border-color: #C0C0C0;
}
/**
 * A text editor for plain and Markdown text input.
 *
 * Text editors (backed by :js:class:`RB.TextEditorView`) can contain a plain
 * ``<textarea>`` for plain text input or a CodeMirror widget and formatting
 * toolbar for rich text input.
 *
 * The ``.rb-c-text-editor__textarea`` and ``.rb-c-formatting-toolbar`` should
 * be managed and added/removed as necessary when changing edit modes.
 *
 * Structure:
 *     <div class="rb-c-text-editor">
 *      <textarea class="rb-c-text-editor__textarea -is-plain">...</textarea>
 *     </div>
 *
 *     <div class="rb-c-text-editor">
 *      <div class="rb-c-text-editor__textarea -is-rich CodeMirror">...</div>
 *      <div class="rb-c-formatting-toolbar" ...>...</div>
 *     </div>
 */
.rb-c-text-editor {
  background: white;
  border: 1px #C0C0C0 solid;
  display: flex;
  flex-direction: column;
  margin: 10px 0 0 0;
  position: relative;
  /**
   * The text area in the editor.
   *
   * The type of text area is designated by the ``.-is-plain`` or ``.-is-rich``
   * modifiers.
   *
   * Modifiers:
   *     -is-plain:
   *         This is a plain text area, using a ``<textarea>`` widget.
   *
   *     -is-rich:
   *         This is a rich text area, using CodeMirror.
   *
   *         When set, there should be a ``.rb-c-formatting-toolbar``
   *         component added below this.
   *
   * Structure:
   *     <textarea class="rb-c-text-editor__textarea -is-plain">...</textarea>
   *
   *     <div class="rb-c-text-editor__textarea -is-rich CodeMirror">...</div>
   */
}
.rb-c-text-editor__textarea {
  flex-grow: 1;
  /* Make sure we override any default rules for .CodeMirror here. */
}
textarea.rb-c-text-editor__textarea,
.rb-c-text-editor__textarea.CodeMirror {
  background: transparent;
  border: 0;
  border-radius: 0;
  margin: 0;
}
.rb-c-text-editor__textarea.-is-plain {
  box-sizing: border-box;
  margin: 0;
  outline: none;
  padding: 10px;
  /*
       * This prevents extra spacing below a text area in different browsers.
       * See http://stackoverflow.com/questions/7144843/extra-space-under-textarea-differs-along-browsers
       */
  vertical-align: top;
}
.rb-c-text-editor__textarea.-is-rich .CodeMirror-scroll {
  margin-bottom: -2em !important;
}
.loading img {
  margin-right: 4px;
  vertical-align: text-bottom;
}
.box .star {
  cursor: pointer;
}
/****************************************************************************
 * Modal Boxes
 ****************************************************************************/
.modalbox {
  margin: 10px;
}
.modalbox .modalbox-contents {
  margin: 10px;
  position: relative;
  /* Makes this the offsetParent for calculations. */
}
.modalbox .modalbox-buttons {
  position: absolute;
  margin: 10px;
  text-align: right;
  bottom: 0;
  right: 0;
}
.modalbox .modalbox-buttons input,
.modalbox .modalbox-buttons .split-btn {
  margin-left: 10px;
}
/****************************************************************************
 * Forms
 ****************************************************************************/
.formdlg tr {
  padding-top: 4px;
}
.formdlg td.label {
  white-space: nowrap;
}
.formdlg .error {
  color: #DD0000;
  font-weight: bold;
  margin-bottom: 10px;
  padding: 4px 8px;
}
.formdlg .errorlist {
  display: block;
  list-style: none;
  margin: 0;
  padding: 0;
}
.formdlg .errorlist li {
  display: list-item;
  padding: 2px 4px;
}
.formdlg .spinner {
  float: left;
}
.formdlg .spinner img {
  vertical-align: top;
}
.formdlg .spinner h1 {
  display: inline;
  margin-left: 10px;
}
/****************************************************************************
 * Account page
 ****************************************************************************/
.section {
  margin-bottom: 20px;
}
.section .title {
  background: #DDDDDD;
  border: 1px black solid;
  padding: 4px 8px;
}
.section .body {
  margin-left: 20px;
  padding: 10px;
}
#manual-updates {
  padding-top: 1em;
}
#manual-updates .box-main {
  padding: 1em;
}
#manual-updates .box-main h1,
#manual-updates .box-main h2 {
  margin-top: 2em;
}
#manual-updates p {
  font-size: 9pt;
}
/****************************************************************************
 * Login/Register pages
 ****************************************************************************/
#auth_container {
  font-size: 120%;
  margin: 7em 0 0 0;
  text-align: center;
}
#auth_container input[type="text"],
#auth_container input[type="password"],
#auth_container input[type="number"],
#auth_container input[type="email"] {
  border: 1px #aaa solid;
  border-radius: 6px;
  box-sizing: border-box;
  font-size: inherit;
  margin: 0;
  padding: 0.5em;
  width: 16em;
}
#auth_container .auth-button-container {
  width: 16em;
}
#auth_container .auth-button-container button,
#auth_container .auth-button-container input {
  font-size: 120%;
  margin: 0 0 0.5em;
  padding: 0.6em;
  width: 100%;
  box-sizing: border-box;
}
#auth_container .auth-button-container a {
  font-size: inherit;
}
#auth_container .auth-form-row {
  clear: both;
  margin: 1.5em 0;
  padding-left: 12em;
}
#auth_container .auth-form-row.auth-field-row:not(.checkbox-row) {
  padding-left: 0;
}
#auth_container .auth-form-row.auth-field-row:not(.checkbox-row) label {
  float: left;
  font-weight: normal;
  padding: 0.5em 1em 0.5em 0.5em;
  text-align: right;
  width: 12em;
  box-sizing: border-box;
}
#auth_container .auth-form-row.auth-field-row:not(.checkbox-row) .errorlist {
  display: block;
  margin: 0.5em 0 0 12em;
  width: 16em;
}
#auth_container .auth-form-row.auth-field-row:not(.checkbox-row) .errorlist li {
  font-weight: normal;
  font-size: 9pt;
}
#auth_container .auth-form-row.auth-field-row.checkbox-row input {
  vertical-align: top;
}
#auth_container .auth-form-row.auth-field-row.checkbox-row label {
  display: inline-block;
  width: 16em;
}
#auth_container .auth-header {
  margin: 0 auto 1em auto;
  max-width: 60em;
}
#auth_container .auth-header h1 {
  font-size: 120%;
  margin: 1em 0;
  padding: 0;
}
#auth_container .auth-header p {
  color: #444;
  margin: 1em 0;
}
#auth_container .auth-header .errorbox {
  display: inline-block;
  text-align: center;
}
#auth_container .auth-header .errorbox .errorlist {
  text-align: left;
}
#auth_container .auth-section {
  display: inline-block;
  margin: 0 2em;
  text-align: left;
  vertical-align: top;
}
#auth_container .auth-section.main-auth-section {
  margin-left: -10em;
}
#auth_container .errorlist {
  margin: 0;
  padding: 0;
}
#auth_container .errorlist li {
  display: block;
  font-weight: normal;
  margin: 0 0 1em 0;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  #auth_container {
    /* Waste less vertical space on mobile devices. */
    margin-top: 3em;
  }
  #auth_container .auth-form-row {
    /* Change the labels to appear above the fields and not to the side. */
    padding-left: 0;
  }
  #auth_container .auth-form-row.auth-field-row label,
  #auth_container .auth-form-row.auth-field-row:not(.checkbox-row) label {
    display: block;
    float: none;
    padding: 0.5em 0;
    text-align: left;
    width: auto;
  }
  #auth_container .auth-form-row.auth-field-row .errorlist,
  #auth_container .auth-form-row.auth-field-row:not(.checkbox-row) .errorlist {
    margin-left: 0;
  }
  #auth_container .auth-header p {
    margin-left: 1.5em;
    margin-right: 1.5em;
  }
  #auth_container .auth-section.main-auth-section {
    /* Reset the margin that was providing room for the side labels. */
    margin-left: 0;
    margin-right: 0;
  }
}
#auth_container #login_form .login-links {
  margin-top: 2em;
  text-align: center;
}
#auth_container #login_form .login-links p {
  width: 16em;
}
#auth_container #login_form .login-links p a {
  color: blue;
  text-decoration: none;
}
#auth_container .register-captcha-row {
  float: right;
  padding-left: 0;
}
/****************************************************************************
 * Auto-complete widget
 ****************************************************************************/
.ui-autocomplete-results {
  background: #ffffff;
  border: 1px solid #808080;
  overflow: hidden;
  position: absolute;
  width: 100%;
  z-index: 110;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .ui-autocomplete-results.search-results {
    /*
       * On mobile, set the autoresults list to take up the entire size of
       * the #page-container, overriding anything set by the widget.
       */
    left: 0 !important;
    top: -1.5em !important;
    width: 100% !important;
    height: 100%;
    border: 0;
    overflow-y: auto;
  }
}
.ui-autocomplete-results ul {
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .ui-autocomplete-results ul {
    max-height: none !important;
  }
}
.ui-autocomplete-results ul li {
  cursor: pointer;
  margin: 0;
  padding: 3px 6px;
  position: relative;
  white-space: nowrap;
}
@media screen and (max-width: 720px), screen and (max-device-width: 720px) and (orientation: landscape) {
  .ui-autocomplete-results ul li {
    /*
         * Give each item a border and more padding to help define the click
         * area (and to fit in with typical search results on mobile devices.
         */
    border-top: 1px #EEE solid;
    margin: 0 1em;
    padding: 1.5em;
  }
}
.ui-autocomplete-results ul li span {
  margin-left: 6px;
  position: absolute;
  right: 6px;
}
.ui-autocomplete-results .ui-autocomplete-over {
  background: #71a5db;
  color: #FFF;
}
.ui-autocomplete-footer {
  background: #ECECEC;
  border-top: 1px #C0C0C0 solid;
  padding: 3px 6px;
}
#submitter {
  position: relative;
}
/****************************************************************************
 * New Review Request
 ****************************************************************************/
#id_basedir #id_diff_path,
#id_parent_diff_path {
  width: 100%;
}
/****************************************************************************
 * clearfix hacks
 ****************************************************************************/
/*
 * clearfix hack. See http://www.webtoolkit.info/css-clearfix.html
 */
.clearfix {
  display: inline-block;
}
.clearfix:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}
html[xmlns] .clearfix {
  display: block;
}
* html .clearfix {
  height: 1%;
}
/*# sourceMappingURL=common.css.map */