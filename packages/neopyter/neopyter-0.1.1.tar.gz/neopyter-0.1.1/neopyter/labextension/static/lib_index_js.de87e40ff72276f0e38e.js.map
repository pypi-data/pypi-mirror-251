{"version":3,"file":"lib_index_js.de87e40ff72276f0e38e.js","mappings":"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","sources":["webpack://neopyter/./src/error.ts","webpack://neopyter/./src/icons.ts","webpack://neopyter/./src/index.ts","webpack://neopyter/./src/msgpackRpcProtocol.ts","webpack://neopyter/./src/rpcServer.ts","webpack://neopyter/./src/statusidepanel.ts","webpack://neopyter/./src/transport/base.ts","webpack://neopyter/./src/transport/websocketTransport.ts"],"sourcesContent":["export class RPCError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RPCError';\n  }\n}\n","import { LabIcon } from '@jupyterlab/ui-components';\nimport statusStr from '../style/icons/statuspage.svg';\n\nexport const statusPageIcon = new LabIcon({\n  name: 'neopyter:status-page',\n  svgstr: statusStr\n});\n","import { Kernel, ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ReadonlyPartialJSONObject } from '@lumino/coreutils';\nimport { ILayoutRestorer, JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { Notebook, INotebookTracker, NotebookActions, NotebookPanel } from '@jupyterlab/notebook';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport * as R from 'remeda';\n\nimport { RpcServer, Dispatcher } from './rpcServer';\nimport { WebsocketTransport } from './transport';\nimport { StatusSidePanel } from './statusidepanel';\nimport { statusPageIcon } from './icons';\nimport { WindowedList } from '@jupyterlab/ui-components';\n\n// Transfer Data\ntype TCell = {\n  cell_type: string;\n  source: string;\n};\n\n/**\n * Initialization data for the neopyter extension. */\nconst neopyterPlugin: JupyterFrontEndPlugin<void> = {\n  id: 'neopyter',\n  description: 'A JupyterLab extension.',\n  autoStart: true,\n  requires: [IDocumentManager, INotebookTracker, ILayoutRestorer],\n  activate: (\n    app: JupyterFrontEnd,\n    docmanager: IDocumentManager,\n    nbtracker: INotebookTracker,\n    restorer: ILayoutRestorer\n  ) => {\n    console.log('JupyterLab extension noejupy is activated!');\n\n    const sidebar = new StatusSidePanel();\n    sidebar.title.caption = 'Neopyter';\n    sidebar.title.icon = statusPageIcon;\n    app.shell.add(sidebar, 'right');\n\n    if (restorer) {\n      restorer.add(sidebar, '@neopyter/graphsidebar');\n    }\n\n    const settings = ServerConnection.makeSettings();\n    const url = URLExt.join(settings.wsUrl, 'neopyter', 'channel');\n    const getCurrentNotebook = () => {\n      const widget = nbtracker.currentWidget;\n      if (widget) {\n        app.shell.activateById(widget.id);\n      }\n      return widget?.content;\n    };\n    const getNotebookModel = (path: string) => {\n      const notebookPanel = docmanager.findWidget(path) as NotebookPanel;\n      let notebook = notebookPanel?.content as Notebook | undefined;\n      if (nbtracker.currentWidget?.isUntitled) {\n        notebook = nbtracker.currentWidget.content;\n      }\n      const sharedModel = notebook?.model?.sharedModel;\n\n      if (!notebookPanel || !sharedModel || !notebook) {\n        throw `Can't find ${path} or select untitled ipynb`;\n      }\n      return {\n        notebookPanel,\n        notebook,\n        sharedModel\n      };\n    };\n\n    const getCellModel = (path: string, cellIdx: number) => {\n      const { notebook, sharedModel: sharedNotebookModel } = getNotebookModel(path);\n      const sharedModel = sharedNotebookModel.getCell(cellIdx);\n      return {\n        notebook,\n        sharedNotebookModel,\n        sharedModel\n      };\n    };\n\n    const dispatcher: Dispatcher = {\n      echo: (message: string) => {\n        const msg = `hello: ${message}`;\n        return msg;\n      },\n      executeCommand: async (command: string, args?: ReadonlyPartialJSONObject) => {\n        await app.commands.execute(command, args);\n      }\n    };\n    const docmanagerDispatcher = {\n      getCurrentNotebook: () => {\n        const notebookPanel = nbtracker.currentWidget;\n        if (notebookPanel) {\n          const context = docmanager.contextForWidget(notebookPanel);\n          return context?.localPath;\n        }\n      },\n      isFileOpen: (path: string) => {\n        return !!docmanager.findWidget(path);\n      },\n      isFileExist: async (path: string) => {\n        try {\n          return !!(await docmanager.services.contents.get(path));\n        } catch (e) {\n          if ((e as { response: Response }).response.status !== 404) {\n            throw e;\n          }\n          return false;\n        }\n      },\n      createNew: (path: string, widgetName?: string, kernel?: Kernel.IModel) => {\n        return docmanager.createNew(path, widgetName, kernel);\n      },\n      openFile: (path: string) => {\n        return !!docmanager.open(path);\n      },\n      openOrReveal: (path: string) => {\n        return !!docmanager.openOrReveal(path);\n      },\n      closeFile: async (path: string) => {\n        return await docmanager.closeFile(path);\n      },\n      selectAbove: () => {\n        const notebook = getCurrentNotebook();\n        notebook && NotebookActions.selectBelow(notebook);\n      },\n      selectBelow: () => {\n        const notebook = getCurrentNotebook();\n        notebook && NotebookActions.selectBelow(notebook);\n      }\n    };\n\n    const notebookDispatcher = {\n      getCellNum: (path: string) => {\n        return getNotebookModel(path).sharedModel.cells.length;\n      },\n      setCellNum: (path: string, num: number) => {\n        const { notebook, sharedModel } = getNotebookModel(path);\n        const currentNum = sharedModel.cells.length;\n        if (num > currentNum) {\n          sharedModel.insertCells(\n            currentNum,\n            R.range(0, num - currentNum).map(() => ({\n              cell_type: notebook.notebookConfig.defaultCell,\n              metadata: notebook.notebookConfig.defaultCell === 'code' ? { trusted: true } : {}\n            }))\n          );\n          return;\n        }\n        while (num < sharedModel.cells.length) {\n          sharedModel.deleteCell(sharedModel.cells.length - 1);\n        }\n      },\n\n      getCell: (path: string, index: number) => {\n        const { sharedModel } = getCellModel(path, index);\n        return sharedModel.toJSON();\n      },\n\n      deleteCell: (path: string, index: number) => {\n        return getNotebookModel(path).sharedModel.deleteCell(index);\n      },\n      insertCell: (path: string, index: number) => {\n        const { notebook, sharedModel } = getNotebookModel(path);\n        return sharedModel.insertCell(index, {\n          cell_type: notebook.notebookConfig.defaultCell,\n          metadata: notebook.notebookConfig.defaultCell === 'code' ? { trusted: true } : {}\n        });\n      },\n      activateCell: (path: string, index: number) => {\n        const { notebook } = getNotebookModel(path);\n        notebook.activeCellIndex = index;\n      },\n      scrollToItem: (path: string, index: number, align?: WindowedList.ScrollToAlign, margin?: number) => {\n        const { notebook } = getNotebookModel(path);\n        notebook.scrollToItem(index, align, margin);\n      },\n      syncCells: (path: string, from: number, cells: TCell[]) => {\n        const { notebook, sharedModel: sharedNotebookModel } = getNotebookModel(path);\n        cells.forEach((cell, idx) => {\n          const index = from + idx;\n          const cellModel = sharedNotebookModel.getCell(index);\n          if (cellModel) {\n            if (cell.cell_type === undefined || cellModel.cell_type === cell.cell_type) {\n              cellModel.setSource(cell.source);\n            } else {\n              sharedNotebookModel.deleteCell(idx);\n              sharedNotebookModel.insertCell(idx, {\n                cell_type: cell.cell_type,\n                source: cell.source,\n                metadata: cellModel.getMetadata()\n              });\n            }\n            return;\n          }\n          sharedNotebookModel.insertCell(index, {\n            cell_type: cell.cell_type,\n            source: cell.source,\n            metadata:\n              notebook.notebookConfig.defaultCell === 'code'\n                ? {\n                    // This is an empty cell created by user, thus is trusted\n                    trusted: true\n                  }\n                : {}\n          });\n        });\n      },\n      save: async (path: string) => {\n        const { notebookPanel } = getNotebookModel(path);\n        const context = docmanager.contextForWidget(notebookPanel);\n        context?.path;\n        return await context?.save();\n      },\n      runSelectedCell: async (path: string) => {\n        return await app.commands.execute('notebook:run-cell');\n      },\n      runAllAbove: async (path: string) => {\n        return await app.commands.execute('notebook:run-all-above');\n      },\n      runAllBelow: async (path: string) => {\n        return await app.commands.execute('notebook:run-all-below');\n      },\n      runAll: async (path: string) => {\n        return await app.commands.execute('notebook:run-all-cells');\n      },\n      restartKernel: async (path: string) => {\n        const { notebookPanel } = getNotebookModel(path);\n        return await notebookPanel.sessionContext.restartKernel();\n      },\n      restartRunAll: async (path: string) => {\n        const { notebookPanel } = getNotebookModel(path);\n        await notebookPanel.sessionContext.restartKernel();\n        return await app.commands.execute('notebook:run-all-cells');\n      }\n    };\n    const cellDispatcher = {\n      setCellSource: (path: string, cellIdx: number, source: string) => {\n        const { sharedModel } = getCellModel(path, cellIdx);\n        sharedModel.setSource(source);\n      },\n      setCellType: (path: string, cellIdx: number, type: string) => {\n        const { sharedNotebookModel, sharedModel } = getCellModel(path, cellIdx);\n        if (sharedModel.cell_type !== type) {\n          sharedNotebookModel.deleteCell(cellIdx);\n          sharedNotebookModel.insertCell(cellIdx, {\n            cell_type: type,\n            source: sharedModel.getSource(),\n            metadata: sharedModel.getMetadata()\n          });\n        }\n      }\n    };\n\n    Object.assign(dispatcher, docmanagerDispatcher);\n    Object.assign(dispatcher, notebookDispatcher);\n    Object.assign(dispatcher, cellDispatcher);\n    const server = new RpcServer(dispatcher);\n    server.start(WebsocketTransport, url);\n  }\n};\n\nexport default [neopyterPlugin];\n","import { decode, decodeMultiStream, encode } from '@msgpack/msgpack';\nimport { RPCError } from './error';\n\nconst errorRef = 'https://github.com/msgpack-rpc/msgpack-rpc/blob/master/spec.md';\n\nexport enum MessageType {\n  Request = 0,\n  Response = 1,\n  Notification = 2\n}\n\nexport type RequestMessage = {\n  type: MessageType.Request;\n  msgid: number; // 32-bit unsigned integer number.\n  method: string;\n  params: unknown[];\n};\n\nexport type ResponseMessage = {\n  type: MessageType.Response;\n  msgid: number; // 32-bit unsigned integer number.\n  error?: Error;\n  result?: unknown[];\n};\n\nexport type NotificationMessage = {\n  type: MessageType.Notification;\n  method: string;\n  params: unknown[];\n};\n\nexport type Message = RequestMessage | ResponseMessage | NotificationMessage;\n\nexport function deserializeMessage(data: Uint8Array): Message {\n  const message = decode(data);\n  if (!Array.isArray(message) || (message.length !== 4 && message.length !== 3)) {\n    throw new RPCError(`Invalid msgpack-rpc message: ${JSON.stringify(message)}, please reference ${errorRef}`);\n  }\n  const msgType = message[0];\n  if (msgType !== 0 && msgType !== 1 && msgType !== 2) {\n    throw new RPCError(`Invalid msgpack-rpc message: ${JSON.stringify(message)}, please reference ${errorRef}`);\n  }\n\n  if (msgType === MessageType.Request) {\n    return { type: MessageType.Request, msgid: message[1], method: message[2], params: message[3] };\n  } else if (msgType === MessageType.Response) {\n    return { type: MessageType.Response, msgid: message[1], error: message[2], result: message[3] };\n  }\n  return { type: MessageType.Notification, method: message[1], params: message[2] };\n}\n\nexport function serializeMessage(message: Message): Uint8Array {\n  if (message.type === MessageType.Request) {\n    return encode([message.type, message.msgid, message.method, message.params]);\n  } else if (message.type === MessageType.Response) {\n    return encode([message.type, message.msgid, message.error ? message.error.toString() : undefined, message.result]);\n  }\n  return encode([message.type, message.method, message.params]);\n}\nexport async function* deserializeStream(stream: ReadableStream) {\n  // const ss = decodeArrayStream(stream);\n  const ss = decodeMultiStream(stream);\n  for await (const message of ss) {\n    if (!Array.isArray(message) || (message.length !== 4 && message.length !== 3)) {\n      throw new RPCError(`Invalid msgpack-rpc message: ${JSON.stringify(message)}, please reference ${errorRef}`);\n    }\n    const msgType = message[0];\n    if (msgType !== 0 && msgType !== 1 && msgType !== 2) {\n      throw new RPCError(`Invalid msgpack-rpc message: ${JSON.stringify(message)}, please reference ${errorRef}`);\n    }\n\n    if (msgType === MessageType.Request) {\n      yield { type: MessageType.Request, msgid: message[1], method: message[2], params: message[3] } as RequestMessage;\n    } else if (msgType === MessageType.Response) {\n      yield { type: MessageType.Response, msgid: message[1], error: message[2], result: message[3] } as ResponseMessage;\n    } else {\n      yield { type: MessageType.Notification, method: message[1], params: message[2] } as NotificationMessage;\n    }\n  }\n}\n","import { MessageType, NotificationMessage, RequestMessage, ResponseMessage } from './msgpackRpcProtocol';\nimport { BaseTransport } from './transport';\nimport { RPCError } from './error';\n\nexport type Dispatcher = { [key: string]: (...args: any[]) => unknown };\n\nexport class RpcServer {\n  transport?: BaseTransport;\n  constructor(private dispatcher: Dispatcher) {}\n\n  start<T extends BaseTransport, PT extends unknown[]>(\n    transportCtr: new (server: RpcServer, ...args: PT) => T,\n    ...params: PT\n  ) {\n    this.transport = new transportCtr(this, ...params);\n  }\n\n  async dispatchMethod(message: RequestMessage | NotificationMessage, responseFn?: (message: ResponseMessage) => void) {\n    if (!this.dispatcher[message.method]) {\n      const error = new RPCError(`Method not found ${message.method}`);\n      if (message.type === MessageType.Request && responseFn) {\n        responseFn({\n          type: MessageType.Response,\n          msgid: message.msgid,\n          error,\n          result: undefined\n        });\n      }\n      throw error;\n    }\n    try {\n      const result = await this.dispatcher[message.method](...message.params);\n      if (message.type === MessageType.Request && responseFn) {\n        responseFn({\n          type: MessageType.Response,\n          msgid: message.msgid,\n          result: result as unknown[]\n        });\n      }\n    } catch (error: unknown) {\n      console.error(error);\n      if (message.type === MessageType.Request && responseFn) {\n        responseFn({\n          type: MessageType.Response,\n          msgid: message.msgid,\n          error: error as Error\n        });\n      }\n    }\n  }\n}\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { SidePanel } from '@jupyterlab/ui-components';\nexport class StatusSidePanel extends SidePanel {\n  constructor() {\n    super();\n    this.id = 'neopyter-status-sidepanel';\n    const settings = ServerConnection.makeSettings();\n    const url = URLExt.join(settings.baseUrl, 'neopyter', 'tcp_server_info');\n    setTimeout(async () => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const p = document.createElement('p');\n        this.content.node.appendChild(p);\n        p.textContent = 'Access API failed';\n        return;\n      }\n      const { code, message, data } = await response.json();\n      if (code !== 0) {\n        const p = document.createElement('p');\n        this.content.node.appendChild(p);\n        p.textContent = message;\n        return;\n      }\n      for (const host of data.hosts) {\n        const p = document.createElement('p');\n        this.content.node.appendChild(p);\n        p.textContent = `${host}:${data.port}`;\n      }\n    }, 1000);\n  }\n}\n","import { RequestMessage, NotificationMessage, ResponseMessage, serializeMessage } from '../msgpackRpcProtocol';\nimport { RpcServer } from '../rpcServer';\n\nexport abstract class BaseTransport {\n  constructor(private server: RpcServer) {}\n\n  abstract sendData(data: Uint8Array): void;\n  async onRequest(message: RequestMessage) {\n    await this.server.dispatchMethod(message, (response: ResponseMessage) => {\n      this.sendData(serializeMessage(response));\n    });\n  }\n  async onNotify(message: NotificationMessage) {\n    this.server.dispatchMethod(message);\n  }\n}\n","import { RpcServer } from '../rpcServer';\nimport { BaseTransport } from './base';\nimport { Message, MessageType, deserializeStream } from '../msgpackRpcProtocol';\nimport { RPCError } from '../error';\n\nfunction base64ToBytes(str: string) {\n  const binString = atob(str);\n  return Uint8Array.from(binString, m => m.codePointAt(0)!);\n}\n\nfunction bytesToBase64(bytes: Uint8Array) {\n  const binString = String.fromCodePoint(...bytes);\n  return btoa(binString);\n}\n\nexport class WebsocketTransport extends BaseTransport {\n  private websocket: WebSocket;\n  private readableStream: ReadableStream;\n  constructor(\n    server: RpcServer,\n    private url: string\n  ) {\n    super(server);\n    this.websocket = new WebSocket(this.url);\n    this.websocket.binaryType = 'arraybuffer';\n    this.readableStream = new ReadableStream({\n      start: controller => {\n        // console.log('start');\n        this.websocket.addEventListener('open', event => {\n          this.onOpen(event);\n        });\n        this.websocket.addEventListener('message', event => {\n          const buf = base64ToBytes(event.data);\n          controller.enqueue(buf);\n        });\n\n        this.websocket.addEventListener('error', event => {\n          this.onError(event);\n          throw event;\n        });\n        this.websocket.addEventListener('close', event => {\n          this.onClose(event);\n          controller.close();\n        });\n      }\n    });\n    setTimeout(async () => {\n      for await (const message of deserializeStream(this.readableStream)) {\n        // console.log(message);\n        this.onRead(message);\n      }\n    }, 0);\n  }\n\n  async onRead(message: Message) {\n    switch (message.type) {\n      case MessageType.Request:\n        await this.onRequest(message);\n        break;\n      case MessageType.Notification:\n        await this.onNotify(message);\n        break;\n      default:\n        throw new RPCError(`Unknown message: ${message}`);\n    }\n  }\n\n  sendData(data: Uint8Array): void {\n    this.websocket.send(bytesToBase64(data));\n  }\n\n  protected onOpen(_event: Event) {\n    console.log(`Connection to neopyter jupyter server by websocket ${this.websocket.url}`);\n  }\n  protected onError(event: Event) {\n    console.error('Websocket error', event);\n  }\n  protected onClose(_event: Event) {\n    console.log(`DisConnection to neopyter jupyter server by websocket ${this.websocket.url}`);\n  }\n}\n"],"names":[],"sourceRoot":""}