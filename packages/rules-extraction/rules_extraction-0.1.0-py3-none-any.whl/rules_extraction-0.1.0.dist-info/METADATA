Metadata-Version: 2.1
Name: rules-extraction
Version: 0.1.0
Summary: Rules extraction for eXplainable AI
Author-email: Arthur Babey <arthur.babey@heig-vd.ch>
License: 3-Clause BSD License
License-File: LICENSE
Keywords: machine learning,xai
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.8.1
Requires-Dist: build>=1.0.3
Requires-Dist: matplotlib==3.7.3
Requires-Dist: numpy>=1.17.4
Requires-Dist: pandas==2.0.3
Requires-Dist: scikit-learn>=1.1.3
Requires-Dist: torch>=2.0.1
Requires-Dist: torchvision>=0.15.2
Description-Content-Type: text/markdown

# Rules extraction ![Python checks](https://github.com/HES-XPLAIN/rules-extraction/actions/workflows/build.yml/badge.svg)

Rules extraction for eXplainable AI

* [Documentation](https://hes-xplain.github.io/rules-extraction/docs/)
* [Coverage](https://hes-xplain.github.io/rules-extraction/cov/)

## Contribution

### Install dependencies

#### Using pip

```shell
python -m venv .venv
source .venv/bin/activate
pip install -r requirements.lock
```

#### Using Rye

- Install [Rye](https://rye-up.com/) and [add shims](https://rye-up.com/guide/installation/) to your PATH.

Ensure `rye` is accessible in the `$PATH` environment variable.
Rye will automatically download the suitable Python toolchain as needed.

To check the installation, check the following commands return an output:

```shell
rye --version
```

Install python dependencies and activate the virtualenv:

```shell
rye sync
rye shell
```

### Install Pre-commit hooks

Git hooks are used to ensure quality checks are run by all developers every time
before a commit.

```shell
pre-commit install
```

Pre-commit hooks can be run manually with:

```shell
pre-commit run --all-files
```

## Release

To publish the package on [PyPI](https://pypi.org/project/rules-extraction/), refer to [RELEASE](RELEASE.md).
