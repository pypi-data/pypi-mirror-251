Metadata-Version: 2.1
Name: otwrapy
Version: 0.12.1
Summary: General purpose OpenTURNS python wrapper tools
Author: Felipe Aguirre Martinez
Author-email: aguirre@phimeca.com
License-File: COPYING
License-File: COPYING.LESSER
Requires-Dist: tqdm >=4.0.0
Provides-Extra: dask
Requires-Dist: dask >=2021.01.0 ; extra == 'dask'
Requires-Dist: asyncssh ; extra == 'dask'
Provides-Extra: ipyparallel
Requires-Dist: ipyparallel >=5.0.1 ; extra == 'ipyparallel'
Provides-Extra: joblib
Requires-Dist: joblib >=0.9.3 ; extra == 'joblib'
Provides-Extra: pathos
Requires-Dist: pathos >=0.2.0 ; extra == 'pathos'

.. image:: https://github.com/openturns/otwrapy/actions/workflows/build.yml/badge.svg?branch=master
    :target: https://github.com/openturns/otwrapy/actions/workflows/build.yml

`otwrapy` is a collection of tools that simplify the task of wrapping
external codes in a Python environment as well as parallelizing it. It is built
on top of `OpenTURNS <http://www.openturns.org>`_, with its users as the target
audience. Documentation is available
`here <http://openturns.github.io/otwrapy/master>`_. The module provides :

- An integrated progress bar for unit evaluation of a sample without parallelization.
- A `Parallelizer` class that converts any
  `ot.Function <http://openturns.github.io/openturns/master/user_manual/_generated/openturns.Function.html>`_
  into  a parallel wrapper using either
  `multiprocessing <https://docs.python.org/2/library/multiprocessing.html>`_,
  `ipyparallel <http://ipyparallel.readthedocs.io/en/latest/>`_,
  `joblib <https://pythonhosted.org/joblib/>`_,
  `pathos <https://pypi.python.org/pypi/pathos>`_ or
  `dask SSHCluster <https://docs.dask.org/en/latest/deploying-ssh.html>`_.
- A set of useful tools that simply recurrent tasks when writing code
  wrappers:

  - `TempWorkDir`: Context manager that gracefully creates a temporary
    working directory. It handles errors and has the option to cleanup upon
    exit.
  - `Debug`: Decorator that protects the decorated function into a
    try/except structure so that errors are logged. It is specially useful
    when you launch your code in a non interactive environment.
  - `load_array` and `dump_array`: Used for efficiently create
    and load backups with the option to compress with gzip.
  - `safemakedirs`: Create a directory without raising an exception if
    it exits.
  - `create_logger`: Return a logger with a FileHandler at a given
    logging level.

`otwrapy` comes from the experience of wrapping a lot of
different external codes at `Phimeca engineering
<http://www.phimeca.com>`_. We are a company specialized in
uncertainty treatment and we assist our clients introducing the
probabilistic dimension in their so far deterministic studies.



.. warning::

    While fully usable, otwrapy is still pre-1.0 software and has **no**
    backwards compatibility guarantees until the 1.0 release occurs! Please
    make sure to be careful **anytime you upgrade**!


