import pyperclip as pc
from IPython.display import Image, display
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

def check(sentence1, sentence2):
    vectorizer = TfidfVectorizer()
    tfidf_matrix = vectorizer.fit_transform([sentence1, sentence2])
    cosine_similarities = cosine_similarity(tfidf_matrix)
    similarity_percentage = cosine_similarities[0, 1] * 100
    return similarity_percentage

def q(n):
    n = str(n)
    s = [['''–ì–ª–µ–± –∏ –ê–Ω–Ω–∞ –∏—Å—Å–ª–µ–¥—É—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞ –ê–í–°. –ì–ª–µ–±, –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–¥–µ–ª—å –ê–Ω–Ω—ã, —Å–æ–∑–¥–∞–ª –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –≤—ã—á–∏—Å–ª—è—é—â—É—é –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–º —Ñ–∞–∫—Ç–æ—Ä–∞–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö) —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ê–í–°. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ì–ª–µ–±–∞ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –≤ –∏—Ç–æ–≥–µ –≤—ã–¥–∞–µ—Ç –Ω–∞–±–æ—Ä —á–∞—Å—Ç–æ—Ç: –ø–æ, –ü., –ü100. –ù–∞–ø—Ä–∏–º–µ—Ä, 175 - —ç—Ç–æ —á–∏—Å–ª–æ —Å–ª—É—á–∞–µ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ì–ª–µ–±–∞ –ø–æ–ª—É—á–∏–ª–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å 75%. –û–±—Ä–∞–±–æ—Ç–∞–≤ 1000 –æ–±—Ä–∞–∑—Ü–æ–≤ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ê–Ω–Ω–∞ –Ω–∞—à–ª–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –∏ –≤–≤–µ–ª–∞ –∏—Ö –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –Ω–∞–±–æ—Ä —á–∞—Å—Ç–æ—Ç: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 1, 3, 4, 4, 5, 4, 6, 6, 11, 9, 19, 23, 25, 33, 36, 36, 46, 46, 49, 58, 90, 76, 66, 69, 75, 68, 44, 39, 21, 16, 5, 2, 1, 0, 0, 0. –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–∞–ø–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã–ª–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —á–∞—Å—Ç–æ—Ç–∞–º. –ê–Ω–Ω–∞ —Ä–µ—à–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ [0, 1] —Å –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é f(x) = f(x; a,b) = abza 1(1-2)6-1 –∏ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∞, 6 –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 20. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–∏—è (–ø—Ä–∏ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö) –ì–ª–µ–±–æ–º –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: 4 = –ê –∏ 6 = –í. –ó–∞–¥–∞—á–∞: –ø—É—Å—Ç—å –•- —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ [0, 1] —Å –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é f(x) = f(x;√ª, b), F(x) - –µ–µ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ E(X) –∏ –•–æ,2 = F-1 (0,2) –∫–≤–∞–Ω—Ç–∏–ª—å —É—Ä–æ–≤–Ω—è 0,2. –ö–∞–∫–æ–π —Å–º—ã—Å–ª –¥–ª—è –≤—Å–µ–π –ø–æ–ø—É–ª—è—Ü–∏–∏ –∏–º–µ—é—Ç –ï(–•) –∏ –•–æ,2? –í –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∂–∏—Ç–µ: 1) –∑–Ω–∞—á–µ–Ω–∏–µ –ê; 2) –∑–Ω–∞—á–µ–Ω–∏–µ –í; 3) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(–•); 4) –∫–≤–∞–Ω—Ç–∏–ª—å –•–æ,2-''', '1.png', '''import numpy as np
from scipy.optimize import minimize
data = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 1, 3, 4, 4, 5, 4, 6, 6, 11, 9, 19, 23, 25, 33, 36, 36, 46, 46, 49, 58, 90, 76, 66, 69, 75, 68, 44, 39, 21, 16, 5, 2, 1, 0, 0, 0])

sample = []
for i in range(0,101):
    if i != 0:
        sample += [i] * data[i]

sample = np.array(sample)
sample = sample / 100
 
data = sample
 
def custom_pdf(x, a, b):
    return a * b * x**(a-1) * (1 - x**a)**(b-1)
 
def likelihood(params):
    a, b = params
    end_values = custom_pdf(data, a, b)
    log_likelihood = np.log(end_values).sum()
    return -log_likelihood 

initial_guess = [1, 1] 
result = minimize(likelihood, initial_guess, method='BFGS')
 
a_estimated, b_estimated = result.x
 

print(f"Estimated a = {round(a_estimated,0)}")
print(f"Estimated b = {round(b_estimated,0)}")
from scipy import integrate
a,b = round(a_estimated,0), round(b_estimated,0)
def f(x):
    return x * (a * b * x**(a-1) * (1 - x**a)**(b-1))
 
From,To = 0,1
result, _ = integrate.quad(f, From, To)
print(f"E(x) = {result}")
from scipy.stats import rv_continuous
class CustomDistribution(rv_continuous):
            def _pdf(self, x):
                a, b = a_estimated, b_estimated
                return a * b * x**(a-1) * (1 - x**a)**(b-1)
            
cont = CustomDistribution(a = 0, b = 1)
q02 = cont.ppf(0.2)
print(f"–∫–≤–∞–Ω—Ç–∏–ª—å 0.2 = {q02}")'''],['''–ü—É—Å—Ç—å (21, 1);...; (231, –£31) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ (–•‚ÇÅ, “Æ‚ÇÅ);...; (–•31, “Æ31) –∏–∑ –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (;;;;). –ò—Å–ø–æ–ª—å–∑—É—è –≤–µ–∫—Ç–æ—Ä—ã 2 = (21;...; 231) –∏—û = (–£–ª—ñ; –£31), –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∞—Å–∏–º–ø—Ç–æ—Ç–∏—á–µ—Å–∫–∏–π 0,93-–¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (01;02) –¥–ª—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Ä. –í –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∂–∏—Ç–µ: 1)–≤—ã–±–æ—Ä–æ—á–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Ä; 2) –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É –≤‚ÇÇ –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è —Ä. –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 2 = (-0,616; -0,238; 0,173; -0,255; 0,531; 0,718; -0,161; 0,371; -1,014; -0,413; -1,571; 0,485; 0,486; 0,688; -0,944; 0,155; 0,003; 0,111; 0,752; 0,783; -0,102; -0,74; -2,097; 1,349; -0,044; -0,617; -0,782;-0,873;-0,995; -1,256; -0,596), y = (-1,34; -0,25; 0,101; -0,626; -0,088; 0,539; -0,451; 0,233; -1,186; -0,423; -1,329; 0,231; 0,209; 0,638; -0,274; -0,491; -0,319; 0,294; 0,895; 1,164; -0,57; -1,078; -1,526; 1,491; 0,182; -0,31; -1,001; -0,969; -0,918; -0,904;-0,595).''', '2.png', '''import pandas as pd
x = np.array([-0.616, -0.238, 0.173, -0.255, 0.531, 0.718, -0.161, 0.371, -1.014, -0.413, -1.571, 0.485, 0.486, 0.688, -0.944, 0.155, 0.003, 0.111, 0.752, 0.783, -0.102, -0.74, -2.097, 1.349, -0.044, -0.617, -0.782, -0.873, -0.995, -1.256, -0.596])

y = np.array([-1.34, -0.25, 0.101, -0.626, -0.088, 0.539, -0.451, 0.233, -1.186, -0.423, -1.329, 0.231, 0.209, 0.638, -0.274, -0.491, -0.319, 0.294, 0.895, 1.164, -0.57, -1.078, -1.526, 1.491, 0.182, -0.31, -1.001, -0.969, -0.918, -0.904, -0.595])

df = pd.DataFrame({'y':y,'x':x})
r = df.corr().iloc[0][1]
print(f" –≤—ã–±–æ—Ä–æ—á–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ ùúå = {r}")
import scipy.stats as stats
alpha = 1 - 0.93

z = np.arctanh(r)
z_critical = stats.norm.ppf(1 - alpha/2)
se = 1 / np.sqrt(len(x) - 3)

upper = np.tanh(z + z_critical*se)
print(f"upper bound: {upper}")'''],['''–ü—É—Å—Ç—å 2 = (1,230) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –• = (–•1,..., –•30) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N( 3,42).

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ = 0,01 –æ—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: –º = 1,29 –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã

–ù.: Œº‚â† 1,29 —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞ –ö‚ÇÅ = (-‚àû,-A) U (A,+00). 1) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è ZZ(2). 2) –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. 3) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã. 4) –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å W –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è –ù‚ÇÅ: ¬µ = 1,17.

–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 2 = (1,416; 0,624; 6,471; 6,256; 1,787; 2,546; -1,758; -5,475; 0,077; 1,792; 5,443; 5,348; -0,057; 0,232; -2,305; -3,568; -4,541; 7,893; -0,473; -0,229; 3,0; 3,903; 4,227; 0,537; -1,785; 2,575; -0,477; -2,754; 1,164; 2,716)''', '3.png', '''import numpy as np
import pandas as pd
from scipy.stats import *

Z = norm()
def Phi0(x):
    return Z.cdf(x) - 1 / 2


x = np.array([1.416, 0.624, 6.471, 6.256, 1.787, 2.546, -1.758, -5.475, 0.077, 1.792, 5.443, 5.348, -0.057, 0.232, -2.305, -3.568, -4.541, 7.893, -0.473, -0.229, -3.0, 3.903, -4.227, 0.537, -1.785, 2.575, -0.477, -2.754, 1.164, 2.716])
n = len(x)

s = 3.4
alpha = 0.01
mu0 = 1.29
mu1 = 1.17

z = np.sqrt(n) * (x.mean() - mu0) / s
print(f'1) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è Z–Ω–∞–±–ª. = {z}')

A = Z.isf(alpha / 2)
print(f'2) –ì—Ä–∞–Ω–∏—Ü–∞ –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ = {A}')

P = 2 * min(Z.cdf(z), Z.sf(z))
print(f'3) P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

beta = Phi0(A - np.sqrt(n) * (mu1 - mu0) / s) + Phi0(A + np.sqrt(n) * (mu1 - mu0) / s)
W = 1 - beta
print(f'4) –ú–æ—â–Ω–æ—Å—Ç—å W = {W}')'''],['''–ü—É—Å—Ç—å 2 = (1,230) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –• = (–•1,..., –•30) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N( 3,42).

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ = 0,01 –æ—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: –º = 1,29 –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã

–ù.: Œº‚â† 1,29 —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞ –ö‚ÇÅ = (-‚àû,-A) U (A,+00). 1) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è ZZ(2). 2) –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. 3) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã. 4) –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å W –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è –ù‚ÇÅ: ¬µ = 1,17.

–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 2 = (1,416; 0,624; 6,471; 6,256; 1,787; 2,546; -1,758; -5,475; 0,077; 1,792; 5,443; 5,348; -0,057; 0,232; -2,305; -3,568; -4,541; 7,893; -0,473; -0,229; 3,0; 3,903; 4,227; 0,537; -1,785; 2,575; -0,477; -2,754; 1,164; 2,716)''', '4.png', '''x = np.array([1.146, 2.958, -3.325, -0.534, 0.374, 5.293, 0.12, 1.185, 5.148, 5.351, 2.639, 1.47, -1.967, 4.96, 6.057, -0.542, 1.544, -0.243, -1.988, 2.844])
n = len(x)

alpha = 0.05
mu0 = 1.10
mu1 = 0.91



T = np.sqrt(n) * (x.mean() - mu0) / x.std(ddof=1)
print(f'1) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è T–Ω–∞–±–ª. = {T}')

A = t(n - 1).isf(alpha / 2)
print(f'2) –ì—Ä–∞–Ω–∏—Ü–∞ –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ = {A}')

P = 2 * min(t(n - 1).cdf(T), t(n - 1).sf(T))
print(f'3) –ó–Ω–∞—á–µ–Ω–∏–µ P-–∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

delta = np.sqrt(n - 1) * (mu1 - mu0) / x.std()
t2 = t(n - 1).isf(alpha / 2)
beta = nct(n - 1, delta).cdf(t2) - nct(n - 1, delta).cdf(-t2)
W = 1 - beta
print(f'4) –ú–æ—â–Ω–æ—Å—Ç—å W = {W}')'''],['''–ü—É—Å—Ç—å 2 = (21,..., 220) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –• = (–•1,..., –•20) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N(Œº; 02). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ = 0,05 –æ—Å–Ω–æ–≤–Ω–∞—è –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: —Ä = 1,10 –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã –ù‚ÇÅ: 4‚â† 1,10 —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞ –ö–∞ = (-0, A) U (–ê, +00). 1) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è t = –¢–∞–±–ª. = T(Z). 2) –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É –ê –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. 3) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã. 4) –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å W –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è –ù‚ÇÅ : ¬µ = 0,91. –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 2 = (1,146; 2,958; -3,325; -0,534; 0,374; 5,293; 0,12; 1,185; 5,148; 5,351; 2,639; 1,47; -1,967; 4,96; 6,057;-0,542; 1,544; -0,243; -1,988; 2,844).''', '5.png', '''x = np.array([0.889, 1.514, 2.846, 2.811, 0.84, 0.945, 0.02, -0.441, -0.796, 3.739, 0.688, 0.777, -0.233, 2.284, -0.681, 1.056, 0.21, 1.8, 0.687, -0.144, 1.285, 1.851, 1.402, 1.695, 0.533, 0.87, 0.486, 0.874, 0.312, -0.821])
n = len(x)

alpha = 0.02
mu = 1.18
s0 = 1.14
s1 = 1.24



s2 = np.sum((x - mu) ** 2) / n
CHI = n * s2 / s0 ** 2
print(f'1) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è –•–∏-–∫–≤–∞–¥—Ä–∞—Ç = {CHI}')

A = chi2(n).isf(1 - alpha / 2)
B = chi2(n).isf(alpha / 2)
print(f'2.1) A = {A}\n2.2) B = {B}')

P = 2 * min(chi2(n).cdf(CHI), chi2(n).sf(CHI))
print(f'3) P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

beta = chi2(n).cdf(s0 ** 2 / s1 ** 2 * B) - chi2(n).cdf(s0 ** 2 / s1 ** 2 * A)
print(f'4) –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Ä–æ–¥–∞ = {beta}')'''],['''–ü—É—Å—Ç—å 2 = (21,...,230) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –• = (–•1,..., –•30) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (1,18;02). –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ = 0,02 –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: –æ = 1,14 –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã –ù‚ÇÅ: œÉ‚â† 1,14‚Ç¨ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∏–¥–∞ –ö–∞ = (0; A) U (B; +‚àû). 1) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ö–≤. 2) –ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã –ê –∏ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∏–ø–æ—Ç–µ–∑—É –ù–æ. 3) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è. 4) –ù–∞–π–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Ä–æ–¥–∞ –≤ –¥–ª—è –æ‚ÇÅ = 1,24. –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: (0,889; 1,514; 2,846; 2,811; 0,84; 0,945; 0,02; -0,441; -0,796; 3,739; 0,688; 0,777; -0,233; 2,284; -0,681; 1,056; 0,21; 1,8; 0,687; -0,144; 1,285; 1,851; 1,402; 1,695; 0,533; 0,87; 0,486; 0,874; 0,312;-0,821''', '6.png', '''x = np.array([0.889, 1.514, 2.846, 2.811, 0.84, 0.945, 0.02, -0.441, -0.796, 3.739, 0.688, 0.777, -0.233, 2.284, -0.681, 1.056, 0.21, 1.8, 0.687, -0.144, 1.285, 1.851, 1.402, 1.695, 0.533, 0.87, 0.486, 0.874, 0.312, -0.821])
n = len(x)

alpha = 0.02
s0 = 1.14
s1 = 1.24



CHI = (n - 1) * x.var(ddof=1) / s0 ** 2
print(f'1) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è –•–∏-–∫–≤–∞–¥—Ä–∞—Ç = {CHI}')

A = chi2(n - 1).isf(1 - alpha / 2)
B = chi2(n - 1).isf(alpha / 2)
print(f'2.1) A = {A}\n2.2) B = {B}')

P = 2 * min(chi2(n - 1).cdf(CHI), chi2(n - 1).sf(CHI))
print(f'3) P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

beta = chi2(n - 1).cdf(s0 ** 2 / s1 ** 2 * B) - chi2(n - 1).cdf(s0 ** 2 / s1 ** 2 * A)
print(f'4) –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Ä–æ–¥–∞ = {beta}')'''],['''–ü—É—Å—Ç—å 2 = (21,..., 225) - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –• = (–•1,..., –•25) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è N(; 0,72), a y = (–£, –£–∑–æ) —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏ –£ = (–•1,..., “Æ30) –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (‚Ññ‚ÇÅ‚ÇÑ; 1,4¬≤). –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –• –∏ –£ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: ‚ÇÇ = —É –ø—Ä–æ—Ç–∏–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã –ù‚ÇÅ : ‚ÇÇ > –ù—É. –ü—Ä–∏ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫—Ä–∏—Ç–µ—Ä–∏–π —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ–±–ª–∞—Å—Ç—å—é {2 > –ê), –≥–¥–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—Ä–∏—Ç–µ—Ä–∏—è Z = Z(X, Y) - —ç—Ç–æ –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–∑–Ω–æ—Å—Ç—å –•–é, –ê = –ê–¥ - –∑–∞–≤–∏—Å—è—â–µ–µ –æ—Ç –∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–º–µ–µ—Ç –≤–∏–¥ –ö–∞ = (–ê–∞; 00). 1) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è Z –æ–±–ª. = Z(Z,—û). 2) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è. 3) –ù–∞–π–¥–∏—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ê, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ö–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∏–ø–æ—Ç–µ–∑—É –ù–æ –ø—Ä–∏ –∞ = 0,02. 4) –ù–∞–π–¥–∏—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏—è W –≤ —Å–ª—É—á–∞–µ -= 0,1 –∏ –∞ = 0,02. –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: (3,842; 3,374; 4,18; 4,5; 4,247; 4,412; 3,756; 3,946; 3,729; 3,948; 3,631; 2,992; 4,324; 3,919; 3,059, 4,524; 3,565; 4,236; 4,71; 4,29; 4,998; 3,336; 4,482; 3,721; 3,59); y = (3,19; 3,564; 4,079; 2,369; 5,261; 4,652; 1,849; 6,084; 6,654; 5,65; 3,748; 2,501; 5,476; 3,436; 5,711; 4,292; 5,367; 4,499; 4,989; 4,015; 6,5; 4,178; 4,563; 6,636; 2,113; 2,221; 5,357; 2,358; 6,721; 3,421).''', '7.png', '''x = np.array([3.842, 3.374, 4.18, 4.5, 4.247, 4.412, 3.756, 3.946, 3.729, 3.948, 3.631, 2.992, 4.324, 3.919, 3.059, 4.524, 3.565, 4.236, 4.71, 4.29, 4.998, 3.336, 4.482, 3.721, 3.59])
n = len(x)
 
y = np.array([3.19, 3.564, 4.079, 2.369, 5.261, 4.652, 1.849, 6.084, 6.654, 5.65, 3.748, 2.501, 5.476, 3.436, 5.711, 4.292, 5.367, 4.499, 4.989, 4.015, 6.5, 4.178, 4.563, 6.636, 2.113, 2.221, 5.357, 2.358, 6.721, 3.421])
m = len(y)
 
sx = 0.7
sy = 1.4
alpha = 0.02
delta = 0.1



z = (x.mean() - y.mean()) / np.sqrt(sx ** 2 / n + sy ** 2 / m)
print(f'1) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è Z–Ω–∞–±–ª. = {z}')

P = Z.sf(z)
print(f'2) –ó–Ω–∞—á–µ–Ω–∏–µ P-–∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

A = Z.isf(alpha)
print(f'3) –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —â–Ω–∞—á–µ–Ω–∏–µ A = {A}')

beta = 1 / 2 + Phi0(A - np.sqrt(m * n) / np.sqrt(m * sx ** 2 + n * sy ** 2) * delta)
W = 1 - beta
print(f'4) –ú–æ—â–Ω–æ—Å—Ç—å W = {W}')'''],['''–î–ª—è —Ç—Ä–µ—Ö –≥—Ä—É–ø–ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ê: (–•1;...; –•27), –í: (Y1;...; Y33), –°: (Z1;...; Z39), –∫–æ—Ç–æ—Ä—ã–µ –ø–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—é

–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –ø–æ —Ç—Ä–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–∞–º (Œº‚ÇÇ, œÉ¬≤), N(Œº, 02), (4, 2) ( –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–µ–π –æ¬≤) –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∞ = 0,01 —Å –ø–æ–º–æ—â—å—é F-–∫—Ä–∏—Ç–µ—Ä–∏—è (–§–∏—à–µ—Ä–∞) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≥–∏–ø–æ—Ç–µ–∑–∞ –ù–æ: z = y = 0 –°–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –æ–∂–∏–¥–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —É–∫–∞–∑–∞–Ω—ã –Ω–∏–∂–µ. 1) –ü–æ –¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞–π–¥–∏—Ç–µ –º–µ–∂–≥—Ä—É–ø–ø–æ–≤—É—é –¥–∏—Å–ø–µ—Ä—Å–∏—é. 2) –ü–æ —ç—Ç–∏–º –∂–µ –¥–∞–Ω–Ω—ã–º –Ω–∞–π–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –≥—Ä—É–ø–ø–æ–≤—É—é –¥–∏—Å–ø–µ—Ä—Å–∏—é. 3) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ F-–∫—Ä–∏—Ç–µ—Ä–∏—è, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ö–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∏–ø–æ—Ç–µ–∑—É –ù–æ. 4) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–≤–æ–¥—ã.

–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã –ê: (0,616; 1,046; 2,575;-0,344; 2,339; -0,68; 3,739; 2,251; -1,252; 3,536; -0,491; 5,556; 4,856; -1,68; 2,33; 1,345; 2,829; 2,539; 3,304; 3,497; 0,211; 3,563; 0,94; 3,642; 1,956; 3,919; 3,568). –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã –í: (2,834; 1,504; -0,678; 5,619; 0,97; 1,617; 3,768; -1,309; 3,343; -1,778; -0,854; 1,04; 2,83; -2,335; 4,853; 5,6; 4,341; 4,362; 3,52; 1,151; -0,621; -2,88; 1,697; 1,753; 0,211; 2,157; 1,989; 2,457; 1,399; 1,61; -0,558; 2,132; 2,293). –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã –°: (2,398; -2,77; 4,679; 1,924; 0,574; 5,329; 0,699; 4,457; -0,3; 1,682; -1,34; 0,046; -1,096; 1,935; 2,411; 4,134; 5,643; 3,071; 6,526; 4,941; 2,844; -0,43; -2,066; 0,22; 0,317; -1,923; 1,38; -2,485; 0,111; -0,542; 4,78; 1,93; 0,462; 5,487; -3,547; 2,933; -0,987; -0,21; 3,955).
''', '8.png', '''x = np.array([0.616, 1.046, 2.575, -0.344, 2.339, -0.68, 3.739, 2.251, -1.252, 3.536, -0.491, 5.556, 4.856, -1.68, 2.33, 1.345, 2.829, 2.539, 3.304, 3.497, 0.211, 3.563, 0.94, 3.642, 1.956, 3.919, 3.568])
n1 = len(x)
 
y = np.array([2.834, 1.504, -0.678, 5.619, 0.97, 1.617, 3.768, -1.309, 3.343, -1.778, -0.854, 1.04, 2.83, -2.335, 4.853, 5.6, 4.341, 4.362, 3.52, 1.151, -0.621, -2.88, 1.697, 1.753, 0.211, 2.157, 1.989, 2.457, 1.399, 1.61, -0.558, 2.132, 2.293])
n2 = len(y)
 
z = np.array([2.398, -2.77, 4.679, 1.924, 0.574, 5.329, 0.699, 4.457, -0.3, 1.682, -1.34, 0.046, -1.096, 1.935, 2.411, 4.134, 5.643, 3.071, 6.526, 4.941, 2.844, -0.43, -2.066, 0.22, 0.317, -1.923, 1.38, -2.485, 0.111, -0.542, 4.78, 1.93, 0.462, 5.487, -3.547, 2.933, -0.987, -0.21, 3.955])
n3 = len(z)
 
xyz = pd.DataFrame([x, y, z]).T
xyz_all = np.concatenate([x, y, z])
n = [n1, n2, n3]
N = sum(n)
k = 3
 
alpha = 0.01
 
d2 = np.sum((xyz.mean() - xyz_all.mean()) ** 2 * n) / N
print(f'1) –ú–µ–∂–≥—Ä—É–ø–ø–æ–≤–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è = {d2}')

meanvar = np.sum(xyz.var(ddof=0) * n) / N
print(f'2) –°—Ä–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–æ–≤–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è = {meanvar}')
#(d2 + meanvar), xyz_all.var(ddof=0)

SSE = N * meanvar
MSE = SSE / (N - k)
SSTR = N * d2
MSTR = SSTR / (k - 1)
F = MSTR / MSE
print(f'3) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ F-–∫—Ä–∏—Ç–µ—Ä–∏—è = {F}')

P = f(k - 1, N - k).sf(F)
print(f'4) P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')'''],['''4. (10) –í –≥—Ä—É–ø–ø–µ —É—á–∏—Ç—Å—è 22 —Å—Ç—É–¥–µ–Ω—Ç–∞. –ò–º–∏ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ 100-–±–∞–ª–ª—å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: 64, 41, 83, 41, 83, 53, 0, 63, 84, 98, 2, 42, 98, 57, 63, 53, 91, 28, 76, 63, 78, 83. –ù–∞–π–¥–∏—Ç–µ: 1) –ê - —Å—Ä–µ–¥–Ω—é—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –≤ –≥—Ä—É–ø–ø–µ; 2) –ú - –º–µ–¥–∏–∞–Ω—É –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ –≤ –≥—Ä—É–ø–ø–µ; 3) –ù - —Å—Ä–µ–¥–Ω–µ–µ –≥–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–æ–µ –∏ G —Å—Ä–µ–¥–Ω–µ–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –æ—Ü–µ–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –º–µ–Ω–µ–µ –ú; 4) Q - –º–µ–¥–∏–∞–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –≤ —Ç–æ–π —á–∞—Å—Ç–∏ –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç—É–¥–µ–Ω—Ç—ã –Ω–∞–±—Ä–∞–ª–∏ –Ω–µ –º–µ–Ω–µ–µ –ú –±–∞–ª–ª–æ–≤; 5) N - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –æ—Ü–µ–Ω–∫–∏ –∫–æ—Ç–æ—Ä—ã—Ö –æ–∫–∞–∑–∞–ª–∏—Å—å –º–µ–∂–¥—É –ù –∏ Q (–≤–∫–ª—é—á–∞—è –≥—Ä–∞–Ω–∏—Ü—ã).''', '9.png', '''grades = np.array(sorted([64, 41, 83, 41, 83, 53, 0,
63, 84, 98, 2, 42, 98, 57, 63, 53, 91, 28, 76, 63, 78, 83]))
grades_p = grades[grades > 0]
A = grades_p.mean()
print(A)

M = grades_p[len(grades_p)//2]
print(M)

M_grades = grades[grades >= M]

from scipy.stats import hmean, gmean
H = hmean(M_grades)
G = gmean(M_grades)
print(H, G)


Q = M_grades[len(M_grades)//2]
print(Q)

print(grades[(grades >= min(H,Q)) & (grades <= max(H,Q))])'''],['''4. (10) –≠–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –• –∏ –£ –Ω–∞ –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –ü = {1,2,..., 100) –∑–∞–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü–µ–π —á–∞—Å—Ç–æ—Ç


–ò–∑ 2 —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –±–µ–∑ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è 14 —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ü—É—Å—Ç—å –• –∏ –£ - —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(–•); 2) –¥–∏—Å–ø–µ—Ä—Å–∏—é Var(); 3) –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Ä(X, Y)''', '10.png', '''xs = np.array([200]*(18+13+17) + [400] *(13+16+23))
ys = np.array([1]*18 + [2]*13 + [4]*17 + [1] *13 + [2]*16 + [3]*23)
N = len(ys)
n = 7

print(f'1) E(x) = {xs.mean()}')

print(f'2) var(y) = {ys.var() / n * (N-n)/(N-1)}')


print(f'3) {np.corrcoef(xs, ys)}')
'''],[''' ''', '11.png', '''xs = np.array([200]*(18+13+17) + [400] *(13+16+23))
ys = np.array([1]*18 + [2]*13 + [4]*17 + [1] *13 + [2]*16 + [3]*23)
N = len(ys)
n = 7

print(f'1) E(y) = {ys.mean()}')

print(f'2) std(x) = {xs.std() / (n * (N-n)/(N-1))**0.5}')

print(f'3) cov(x,y) = {((xs*ys).mean() - xs.mean()*ys.mean()) / n * (N-n)/(N-1)}')'''],['''–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –• –∏ –£ –Ω–∞ –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ = {1,2,..., 100} –∑–∞–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü–µ–π —á–∞—Å—Ç–æ—Ç



–ò–∑ 2 —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –±–µ–∑ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ü—É—Å—Ç—å –• –∏ “Æ - —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(Y); 2) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (–•); 3) –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é Cov(X,Y).

–í–ê–®–ò –û–¢–í–ï–¢–´

1) –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ = –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ.

2) –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ.

3) –ö–æ–≤–∞—Ä–∏–∞—Ü–∏—è = –ö–æ–≤–∞—Ä–∏–∞—Ü–∏—è.''', '11.png', '''xs = np.array([200]*(18+13+17) + [400] *(13+16+23))
ys = np.array([1]*18 + [2]*13 + [4]*17 + [1] *13 + [2]*16 + [3]*23)
N = len(ys)
n = 7

print(f'1) E(y) = {ys.mean()}')

print(f'2) std(x) = {xs.std() / (n * (N-n)/(N-1))**0.5}')

print(f'3) cov(x,y) = {((xs*ys).mean() - xs.mean()*ys.mean()) / n * (N-n)/(N-1)}')'''],['''4. (10) –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ –¥–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü–µ–π

–û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã

–ß–∏—Å–ª–æ —Ä–∞–±–æ—Ç
–†–∞–±–æ—Ç—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è—Ç—å 7 –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª–∏–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç—ã –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ—Ä–æ–≤–Ω—É —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –ü—É—Å—Ç—å –• - —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª (–¥–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏) —Ä–∞–±–æ—Ç, –ø–æ–ø–∞–≤—à–∏—Ö –∫ –æ–¥–Ω–æ–º—É –∏–∑ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(–•); 2) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ(Œß).''', '12.png', '''gs = np.array([2,3,4,5])
ns = np.array([80,12,55,56])

total = []
for i in range(len(gs)):
    total += [*[gs[i]]*ns[i]]
total = np.array(total)
E = total.mean()

N = sum(ns)
n = N / 6

Var = (total.var() / n * (N-n)/(N-1))

print(E,Var)'''],['''4. (10) –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–µ –¥–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü–µ–π

–û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã

–ß–∏—Å–ª–æ —Ä–∞–±–æ—Ç
–†–∞–±–æ—Ç—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è—Ç—å 7 –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª–∏–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç—ã –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ—Ä–æ–≤–Ω—É —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –ü—É—Å—Ç—å –• - —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª (–¥–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏) —Ä–∞–±–æ—Ç, –ø–æ–ø–∞–≤—à–∏—Ö –∫ –æ–¥–Ω–æ–º—É –∏–∑ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(–•); 2) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ(Œß).''', '13.png', '''pd = np.array(sorted([-956, 744, 1024, -794, 17, -252, -1122, 
                      -853, 65, -200, 991, 277, 59, -105, -95, 
                      729, 20, 584, -832, -232, -490, -590, 197, 
                      -20, -278,-123, -275, -72, -416, -165]))

print('1)', pd.mean())
print('2)', pd.std())

X = stats.norm(pd.mean(), pd.std())

L, H = X.ppf(0.25), X.ppf(0.75)
print('3)', L, H)



print('4)',len(pd[(pd >= L) & (pd <= H)]))

print('5) ?')
#5–µ –Ω–µ –Ω–∞—à–µ–ª —É —Å–µ–±—è'''],['''4. (10) –°–ª–µ–¥—É—é—â–∏–µ 30 —á–∏—Å–µ–ª —ç—Ç–æ —É–º–Ω–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ 10000 –∏ –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ –¥–Ω–µ–≤–Ω—ã–µ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∞–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –ê–í–°: 956, 744, 1024,794, 17, -252, 1122, -853, 65, -200, 991, 277, 59, -105, -95, 729, 20, 584, -832, -232, -490, -590, 197, -20, -278, -123, -275, -72, 416, -165. –ë—É–¥–µ–º –Ω–∞–∑—ã–≤–∞—Ç—å –∏—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—è–º–∏ (–ü–î). –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –ì–ª–µ–± –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (–∫–∞–∫ –∏ –∏—Å—Ö–æ–¥–Ω—ã–µ) –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω—É. –ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ì–ª–µ–± –Ω–∞—à–µ–ª –Ω–∏–∂–Ω—é—é –∫–≤–∞—Ä—Ç–∏–ª—å 1 –∏ –≤–µ—Ä—Ö–Ω—é—é –∫–≤–∞—Ä—Ç–∏–ª—å –ù –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (–∏, –æ¬≤), –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏ —ç—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –ü–î, –∞ –æ - —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ü–î. –ó–∞—Ç–µ–º –ì–ª–µ–± –ø–æ–¥—Å—á–∏—Ç–∞–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–î, –ø–æ–ø–∞–≤—à–∏—Ö –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç 1 –¥–æ –ù (–Ω–∞–¥–µ—è—Å—å, —á—Ç–æ –≤ —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–ø–∞–¥–µ—Ç –ø–æ–ª–æ–≤–∏–Ω–∞ –ü–î). –†–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–æ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–ª—Å—è –µ–º—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º. –ß—Ç–æ–±—ã –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–µ—è—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ –ü–î. –ì–ª–µ–± –ø–æ—Å—Ç—Ä–æ–∏–ª –Ω–∞ –æ–¥–Ω–æ–º —Ä–∏—Å—É–Ω–∫–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π: F(x) –∏ F(–≥), –≥–¥–µ F(–≥) —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ü–î. –∞ F(z) - —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (—Ä, –æ¬≤). –í –∫–∞—á–µ—Å—Ç–≤–µ –º–µ—Ä—ã —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–≤—É—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ì–ª–µ–± —Ä–µ—à–∏–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏ F(z) –∏ F(2), –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –≤—ã—á–∏—Å–ª–∏–ª, –∏—Å—Ö–æ–¥—è –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: d = sup|F(z) F(z). –í –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –ì–ª–µ–±–∞: 1) —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –ü–î; 2) —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ü–î; 3) –∫–≤–∞—Ä—Ç–∏–ª–∏ 1 –∏ –ù; 4) –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–î, –ø–æ–ø–∞–≤—à–∏—Ö –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç 1 –¥–æ –ù; 5) —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏ F(2) –∏ F(x).
''', '14.png', '''vals = []
n = 11
N = 36
dice = np.arange(1,7)


for a in dice:
    for b in dice:
        vals += [15*a-7*b]
        
vals = np.array(vals)
print('1)', vals.mean())

print('2)',(vals.var() / n * (N-n)/(N-1))**0.5)'''],['''4. (10) –î–≤–µ –∏–≥—Ä–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏, –∫—Ä–∞—Å–Ω–∞—è –∏ —Å–∏–Ω—è—è, –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –≤—ã–ø–∞–¥–µ—Ç 11 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö (—Å —É—á–µ—Ç–æ–º —Ü–≤–µ—Ç–∞) –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –æ—á–∫–æ–≤. –ü—É—Å—Ç—å R; - —á–∏—Å–ª–æ –æ—á–∫–æ–≤ –Ω–∞ –∫—Ä–∞—Å–Ω–æ–π –∫–æ—Å—Ç–∏, –∞ –í; —á–∏—Å–ª–æ –æ—á–∫–æ–≤ –Ω–∞ —Å–∏–Ω–µ–π –∫–æ—Å—Ç–∏ –≤ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å –Ω–æ–º–µ—Ä–æ–º —ñ. –°–ª—É—á–∞–π–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã –•; –∑–∞–¥–∞—é—Ç—Å—è —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏: –•‚ÇÅ = 15R; - 7B;, —ñ = 1,..., 11. –°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —ç—Ç–∏—Ö –≤–µ–ª–∏—á–∏–Ω –æ–±–æ–∑–Ω–∞—á–∏–º –• = +2 –•.. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ E(X); 2) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–∏–≥–º–∞ X''', '15.png', '''grades = np.array([100, 86, 51, 100, 95, 100, 12, 
                   61, 0, 0, 12, 86, 0, 52, 62, 76, 
                   91, 91, 62, 91, 65, 91, 9, 83, 67, 58, 56])

N = 28
n = 6

Var = grades.var() / n
print('1)', Var)

#–∏–ª–∏ –ï—Å–ª–∏ 1) –ø—Ä–æ—Å—è—Ç –º–∞—Ç –æ–∂–∏–¥–∞–Ω–∏–µ
# E = grades.mean()
# print('1)', E)

mu3 = sum((grades - grades.mean())**3)/N/n**2 
print('2)', mu3)'''],['''4. (10) –í –≥—Ä—É–ø–ø–µ 2 —É—á–∞—Ç—Å—è 28 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, 2 = {1, 2,..., 28). –ü—É—Å—Ç—å –•(—ñ) - 100-–±–∞–ª–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ —ñ –Ñ –ü. –ò–∑ –≥—Ä—É–ø–ø—ã –Ø —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º 6 —Ä–∞–∑ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å—Ç—É–¥–µ–Ω—Ç —î –Ñ –ü. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è. –ü—É—Å—Ç—å —à; - —Å—Ç—É–¥–µ–Ω—Ç, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ j = 1,..., 6, X(wj) - –µ–≥–æ –æ—Ü–µ–Ω–∫–∞. –°—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –æ–±–æ–∑–Ω–∞—á–∏–º –• = Œß(œâ;).

–û—Ü–µ–Ω–∫–∏ –≤ –≥—Ä—É–ø–ø–µ –¥–∞–Ω—ã: 95, 12, 0, 3, 63, 64, 0, 63, 100, 96, 54, 79, 0, 98, 71, 68, 95, 97, 89, 78, 79, 89, 100, 67, 0, 63, 80, 64. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) –¥–∏—Å–ø–µ—Ä—Å–∏—é Var(X); 2) —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑(X).''', '16.png', '''#1–π —Å–ø–∏—Å–æ–∫ —Ö, 2–π - —É
nums = [[71,52,72,87,81,100,90,54,54,58,56,70,93,46,56,
                59,42,60,33,83,50,93,41,55,60,37,71,42,85,39],
               [71,58,81,92,81,94,96,46,60,62,49,60,86,48,61,
                52,40,60,37,92,57,93,42,64,59,30,71,44,82,39]]

xy = np.array([[nums[0][i],nums[1][i]] for i in range(len(nums[0]))])
clean = xy[(xy[:,0]>=50) & (xy[:,1]>=50)]

clean
x = clean[:, 0]
y = clean[:, 1]

cov = sum((x-x.mean())*(y-y.mean())) / len(x)
print('1)', cov)
corr = np.corrcoef(x,y)[0,1]
print('2)', corr)'''],['''4. (10) –í –≥—Ä—É–ø–ø–µ 2 —É—á–∞—Ç—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: 1,..., W30. –ü—É—Å—Ç—å –• –∏ –£ - 100-–±–∞–ª–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ

–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π. –û—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ —à; –æ–±–æ–∑–Ω–∞—á–∞—é—Ç—Å—è: 2; = X (W‚ÇÅ) –∏ —É = Y(wi), i = 1,..., 30. –í—Å–µ –æ—Ü–µ–Ω–∫–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã: —Ö‚ÇÅ = 73,169, 2239, 243, 23 = 87, —É–∑ 88, 24 = 60,441,

2579, 9595, 2686, 9698, 2747, 97 = 46, x8 = 42, y858, 2944, y943, 210= 66, 910 = 56,

21147,911 = 47,

21280, 912 = 85,

21744, 917 = 60,

21339, 913 = 35,

21856, 918 = 43,

21473, 914 = 65,

21562, 915=77,

21644, 916 = 55,

22140,921 = 39,

2284, Y22 = 82,

22374,923 = 56,

21939, 1944,

22086, 920 = 64,

22638, 92652, 22765, 92765, 22857,928

22473,924 = 68,

2551, 925 34,

53, 22933, 92950, 23072,930 = 94. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª–æ–≤–Ω—ã–µ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: 1) –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é –• –∏ –£ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –• > 50 –∏ –£ > 50; 2) –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –• –∏ –£ –ø—Ä–∏ —Ç–æ–º –∂–µ —É—Å–ª–æ–≤–∏–∏
''', '17.png', '''ns = np.array([22,29,28,25,20])
xs = np.array([74,73,72,79,80])
ds = np.array([9,4,7,3,8])

E = sum(xs * ns / sum(ns))
print('1)', E)


v1 = sum(((xs - X)**2)* ns) / sum(ns)
v2 = sum((ns * ds**2)) / sum(ns)
Var = np.sqrt(v1+v2)
print('2)', Var)'''],['''4. (10) –ü–æ—Ç–æ–∫ 2 —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫ –≥—Ä—É–ø–ø: 21,..., –∫., k = 5. –ù–∞ –ø–æ—Ç–æ–∫–µ —É—á–∞—Ç—Å—è –ø = –ø‚ÇÅ+... +–ø–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –≥–¥–µ –ø; - —á–∏—Å–ª–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ Œ©;, —ñ = 1,..., –∫. –ü—É—Å—Ç—å –•(—à) - 100-–±–∞–ª–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ —à–Ñ–ü. –î–∞–ª–µ–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è: 2; - —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ—Ç - (—ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∞ –• –Ω–∞ –≥—Ä—É–ø–ø–µ –ü. –î–∞–Ω–æ: –ø‚ÇÅ = 22, –ø‚ÇÇ = 29, –ø–∑ 28, 425, n5 = 20, 2174, 273, 372, 2479, 25 80, œÉ‚ÇÅ = 9, œÉ‚ÇÇ = 4, œÉ3 = 7, œÉ4 = 3, œÉ5 = 8. T—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏: 1) —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –• –Ω–∞ –ø–æ—Ç–æ–∫–µ 2; 2) (—ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –• –Ω–∞ –ø–æ—Ç–æ–∫–µ –ü.



–ò–º–µ–µ—Ç—Å—è 11 –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç. –ú–æ–Ω–µ—Ç—ã –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –≤—ã–ø–∞–¥–µ—Ç 257 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö (—Å —É—á–µ—Ç–æ–º –Ω–æ–º–µ—Ä–∞ –º–æ–Ω–µ—Ç—ã) –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –æ—Ä–µ–ª —Ä–µ—à–∫–∞. –ü—É—Å—Ç—å –•, - —á–∏—Å–ª–æ –æ—Ä–ª–æ–≤ –≤ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å –Ω–æ–º–µ—Ä–æ–º —ñ; –∞ X = X, —Å—Ä–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ –æ—Ä–ª–æ–≤ –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—è—Ö. –¢—Ä–µ–±—É–µ—Ç—Å—è

–Ω–∞–π—Ç–∏: 1) –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ï(–•); 2) –¥–∏—Å–ø–µ—Ä—Å–∏—é Var(X)''', '18.png', '''toss = [0,1]
t = []
for c1 in toss:
    for c2 in toss:
        for c3 in toss:
            for c4 in toss:
                for c5 in toss:
                    for c6 in toss:
                        for c7 in toss:
                            for c8 in toss:
                                for c9 in toss:
                                    for c10 in toss:
                                        for c11 in toss:
                                            t += [c1+c2+c3+c4+c5+c6+c7+c8+c9+c10+c11]
N = 2**11
n = 257
t = np.array(t)
E = t.mean()
print('1)', E)

Var = t.var() / n * (N-n)/(N-1)
print('2)', Var)'''],['''–î–ª—è —Ç—Ä–µ—Ö –≥—Ä—É–ø–ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ê, –í, –° –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≥–∏–ø–æ—Ç–µ–∑–∞ –æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –æ–∂–∏–¥–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –•., –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω—É ‚Ññ(¬µ‚ÇÉ, –æ¬≤) —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–µ–π Var(X) = 6¬≤, –ø—Ä–∏—á–µ–º –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –ï(–•;;) = –º—É, —ò = 1, 2, 3. 1) –ü–æ –¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–Ω—è–º (—Ñ–∞–π–ª ds5.9.8.csv) –Ω–∞–π–¥–∏—Ç–µ –º–µ–∂—Ç—Ä—É–ø–ø–æ–≤—É—é –∏ —Å—Ä–µ–¥–Ω—é—é –≥—Ä—É–ø–ø–æ–≤—É—é –¥–∏—Å–ø–µ—Ä—Å–∏–∏. 2) –ù–∞–π–¥–∏—Ç–µ 91% –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –æ–∂–∏–¥–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π Hj,j = 1, 2, 3. 3) –ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è fo –† –Ω–∞–±–ª., –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ö–∞ –∏ –Ω–∞ 3% —É—Ä–æ–≤–Ω–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ F –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∏–ø–æ—Ç–µ–∑—É –æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –æ–∂–∏–¥–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π, 41 = 42 = 43. 4) –ù–∞–π–¥–∏—Ç–µ –†-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –∏ —Å–¥–µ–ª–∞–π—Ç–µ –í—ã–≤–æ–¥—ã.''', '19.png', '''import pandas as pd
import numpy as np
from scipy.stats import *
def converting(string):
    return float(string.replace(',', '.'))
df = pd.read_csv('ds5.9.8.csv', header=None, sep=';')

alpha = 0.03

x = np.vectorize(converting)(np.array(df[0].dropna()))
n1 = len(x)
 
y = np.vectorize(converting)(np.array(df[1].dropna()))
n2 = len(y)
 
z = np.vectorize(converting)(np.array(df[2].dropna()))
n3 = len(z)
 
xyz = pd.DataFrame([x, y, z]).T
xyz_all = np.concatenate([x, y, z])
n = [n1, n2, n3]
N = sum(n)
k = 3
 

 
d2 = np.sum((xyz.mean() - xyz_all.mean()) ** 2 * n) / N
print(f'1) –ú–µ–∂–≥—Ä—É–ø–ø–æ–≤–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è = {d2}')

meanvar = np.sum(xyz.var(ddof=0) * n) / N
print(f'2) –°—Ä–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–æ–≤–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è = {meanvar}')
#(d2 + meanvar), xyz_all.var(ddof=0)

SSE = N * meanvar
MSE = SSE / (N - k)
SSTR = N * d2
MSTR = SSTR / (k - 1)
F = MSTR / MSE
print(f'3) –ó–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ F-–∫—Ä–∏—Ç–µ—Ä–∏—è = {F}')

P = f(k - 1, N - k).sf(F)
print(f'4) P-–∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è = {P}')

confidence_level = 0.91
t_critical = t.ppf((1 + confidence_level) / 2, N-k)
lower = z.mean() - t_critical * (MSE/len(z))**0.5
upper = z.mean() + t_critical * (MSE/len(z))**0.5
print(f'\n–î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: [{lower}; {upper}]')''']]
    if n.isdigit():
        n = int(n)
        if len(s[n]) == 2:
            return pc.copy(s[n][-1])
        else:
            display(Image(filename=s[n][1]))
            return pc.copy(s[n][-1])
    else:
        c = []
        for i, u in enumerate(s):
            c.append([i, check(n, u[0])])
        res = sorted(c, reverse=True, key=lambda x: x[1])[:5]
        return res
