Metadata-Version: 2.1
Name: e3x
Version: 1.0.0
Summary: JAX-Library for building E(3)-equivariant deep learning architectures based on Flax.
Keywords: equivariance,equivariant,invariance,invariant,E(3),SE(3),O(3),SO(3),Euclidean,Orthogonal,group,translation,translational,rotation,rotational,roto-translation,roto-translational,reflection,neural network,machine learning,deep learning
Author-email: The e3x Authors <qcml@google.com>
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Intended Audience :: Science/Research
Requires-Dist: absl-py
Requires-Dist: etils[epath]
Requires-Dist: flax
Requires-Dist: jax
Requires-Dist: jaxtyping
Requires-Dist: more_itertools
Requires-Dist: numpy
Requires-Dist: sympy
Requires-Dist: pytest ; extra == "dev"
Requires-Dist: pytest-xdist ; extra == "dev"
Requires-Dist: pylint>=2.6.0 ; extra == "dev"
Requires-Dist: yapf ; extra == "dev"
Requires-Dist: sphinx ; extra == "dev"
Requires-Dist: sphinx-autodoc-typehints ; extra == "dev"
Requires-Dist: sphinx-rtd-theme ; extra == "dev"
Requires-Dist: nbsphinx ; extra == "dev"
Requires-Dist: jupyter_sphinx ; extra == "dev"
Requires-Dist: matplotlib ; extra == "dev"
Project-URL: homepage, https://github.com/google-research/e3x
Project-URL: repository, https://github.com/google-research/e3x
Provides-Extra: dev

# e3x library

e3x is a JAX library for constructing efficient E(3)-equivariant deep learning
architectures built on top of [Flax](https://flax.readthedocs.io).

The goal is to provide common neural network building blocks for
E(3)-equivariant architectures to make the development of models operating on
three-dimensional data (point clouds, polygon meshes, etc.) easier.

This is not an officially supported Google product.

## Installation

Clone this repository, enter the directory and run
```console
> python -m pip install .
```
If you are a developer, you might want to also install the optional development
dependencies by running
```console
> python -m pip install .[dev]
```
instead.

### Running unit tests

Running unit tests requires installed development dependencies (see above).
```console
> pytest tests
```

### Building the documentation

Building the documentation requires installed development dependencies (see
above).
```console
> cd docs
> make html
```

