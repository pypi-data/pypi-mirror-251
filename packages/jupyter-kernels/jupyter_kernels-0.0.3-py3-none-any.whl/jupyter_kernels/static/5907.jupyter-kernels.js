"use strict";(self.webpackChunk_datalayer_jupyter_kernels=self.webpackChunk_datalayer_jupyter_kernels||[]).push([[5907],{55907:(e,t,n)=>{n.r(t),n.d(t,{ToolbarItems:()=>O,default:()=>N,downloadPlugin:()=>R,openBrowserTabPlugin:()=>j,pathStatusPlugin:()=>q,savingStatusPlugin:()=>V});var o,a=n(27990),r=n(43838),i=n(83243),d=n(2245),l=n(99190),c=n(71204),s=n(14693),u=n(55616),m=n(34160),p=n(48425),g=n(58722),v=n(79308),h=n(49486),f=n(50705),_=n(26855),w=n(35909),b=n(68471),y=n(18168),C=n(74882),x=n(46931),k=n(47963),W=n(98209),F=n(92279),S=n(56769);!function(e){e.clone="docmanager:clone",e.deleteFile="docmanager:delete-file",e.newUntitled="docmanager:new-untitled",e.open="docmanager:open",e.openBrowserTab="docmanager:open-browser-tab",e.reload="docmanager:reload",e.rename="docmanager:rename",e.del="docmanager:delete",e.duplicate="docmanager:duplicate",e.restoreCheckpoint="docmanager:restore-checkpoint",e.save="docmanager:save",e.saveAll="docmanager:save-all",e.saveAs="docmanager:save-as",e.download="docmanager:download",e.toggleAutosave="docmanager:toggle-autosave",e.showInFileBrowser="docmanager:show-in-file-browser"}(o||(o={}));const A="@jupyterlab/docmanager-extension:plugin",T={id:"@jupyterlab/docmanager-extension:opener",description:"Provides the widget opener.",autoStart:!0,provides:g.C,activate:e=>{const{shell:t}=e;return new class{constructor(){this._opened=new W.Signal(this)}open(e,n){e.id||(e.id="document-manager-"+ ++I.id),e.title.dataset={type:"document-title",...e.title.dataset},e.isAttached||t.add(e,"main",n||{}),t.activateById(e.id),this._opened.emit(e)}get opened(){return this._opened}}}},D={id:"@jupyterlab/docmanager-extension:contexts",description:"Adds the handling of opened documents dirty state.",autoStart:!0,requires:[g.T,g.C],optional:[a.yo],activate:(e,t,n,o)=>{const a=new WeakSet;n.opened.connect(((e,n)=>{const r=t.contextForWidget(n);r&&!a.has(r)&&(o&&function(e,t){let n=null;const o=(t,o)=>{"dirty"===o.name&&(!0===o.newValue?n||(n=e.setDirty()):n&&(n.dispose(),n=null))};t.ready.then((()=>{t.model.stateChanged.connect(o),t.model.dirty&&(n=e.setDirty())})),t.disposed.connect((()=>{n&&n.dispose()}))}(o,r),a.add(r))}))}},E={id:"@jupyterlab/docmanager-extension:manager",description:"Provides the document manager.",provides:g.T,requires:[g.C],optional:[y.gv,a.yo,d.oj,r.p.IInfo],activate:(e,t,n,o,a,r)=>{var i;const{serviceManager:d,docRegistry:c}=e,s=null!=n?n:y.Sr,u=null!=a?a:new l.H({translator:s}),m=e.restored.then((()=>{}));return new v.V({registry:c,manager:d,opener:t,when:m,setBusy:null!==(i=o&&(()=>o.setBusy()))&&void 0!==i?i:void 0,sessionDialogs:u,translator:null!=s?s:y.Sr,isConnectedCallback:()=>!r||r.isConnected})}},B={id:A,description:"Adds commands and settings to the document manager.",autoStart:!0,requires:[g.T,g.C,w.O],optional:[y.gv,d.WW,i.r],activate:(e,t,n,a,r,i,d)=>{const l=(r=null!=r?r:y.Sr).load("jupyterlab"),s=e.docRegistry;!function(e,t,n,a,r,i,d){const l=r.load("jupyterlab"),{commands:s,shell:u}=e,g=l.__("File Operations"),v=()=>{const{currentWidget:e}=u;return!(!e||!t.contextForWidget(e))};i&&function(e,t,n,a,r){const i=r.load("jupyterlab"),{commands:d}=e,l=()=>{var o;const a=/[Pp]ath:\s?(.*)\n?/,r=e.contextMenuHitTest((e=>{var t;return!!(null===(t=e.title)||void 0===t?void 0:t.match(a))})),i=null==r?void 0:r.title.match(a);return null!==(o=i&&t.findWidget(i[1],null))&&void 0!==o?o:n.currentWidget},s=()=>{const{currentWidget:e}=n;return!(!e||!t.contextForWidget(e))};d.addCommand(o.clone,{label:()=>i.__("New View for %1",M(l(),t)),isEnabled:s,execute:e=>{const n=l(),o=e.options||{mode:"split-right"};if(!n)return;const r=t.cloneWidget(n);r&&a.open(r,o)}}),d.addCommand(o.rename,{label:()=>{let e=M(l(),t);return e&&(e=" "+e),i.__("Rename%1…",e)},isEnabled:s,execute:()=>{if(s()){const e=t.contextForWidget(l());return(0,_.oQ)(t,e)}}}),d.addCommand(o.duplicate,{label:()=>i.__("Duplicate %1",M(l(),t)),isEnabled:s,execute:()=>{if(s()){const e=t.contextForWidget(l());if(!e)return;return t.duplicate(e.path)}}}),d.addCommand(o.del,{label:()=>i.__("Delete %1",M(l(),t)),isEnabled:s,execute:async()=>{if(s()){const n=t.contextForWidget(l());if(!n)return;(await(0,c.vC)({title:i.__("Delete"),body:i.__("Are you sure you want to delete %1",n.path),buttons:[c.Vq.cancelButton(),c.Vq.warnButton({label:i.__("Delete")})]})).button.accept&&await e.commands.execute("docmanager:delete-file",{path:n.path})}}}),d.addCommand(o.showInFileBrowser,{label:()=>i.__("Show in File Browser"),isEnabled:s,execute:async()=>{const e=l(),n=e&&t.contextForWidget(e);n&&(await d.execute("filebrowser:activate",{path:n.path}),await d.execute("filebrowser:go-to-path",{path:n.path}))}})}(e,t,i,n,r),s.addCommand(o.deleteFile,{label:()=>`Delete ${M(u.currentWidget,t)}`,execute:e=>{const n=void 0===e.path?"":e.path;if(!n){const e=o.deleteFile;throw new Error(`A non-empty path is required for ${e}.`)}return t.deleteFile(n)}}),s.addCommand(o.newUntitled,{execute:e=>{const n=e.error||l.__("Error"),o=void 0===e.path?"":e.path,a={type:e.type,path:o};return"file"===e.type&&(a.ext=e.ext||".txt"),t.services.contents.newUntitled(a).catch((e=>(0,c.UW)(n,e)))},label:e=>e.label||`New ${e.type}`}),s.addCommand(o.open,{execute:e=>{const n=void 0===e.path?"":e.path,o=e.factory||void 0,a=null==e?void 0:e.kernel,r=e.options||void 0;return t.services.contents.get(n,{content:!1}).then((()=>t.openOrReveal(n,o,a,r)))},iconClass:e=>e.icon||"",label:e=>{var t;return null!==(t=e.label||e.factory)&&void 0!==t?t:l.__("Open the provided `path`.")},mnemonic:e=>e.mnemonic||-1}),s.addCommand(o.reload,{label:()=>l.__("Reload %1 from Disk",M(u.currentWidget,t)),caption:l.__("Reload contents from disk"),isEnabled:v,execute:()=>{if(!v())return;const e=t.contextForWidget(u.currentWidget),n=M(u.currentWidget,t);return e?e.model.dirty?(0,c.vC)({title:l.__("Reload %1 from Disk",n),body:l.__("Are you sure you want to reload the %1 from the disk?",n),buttons:[c.Vq.cancelButton(),c.Vq.warnButton({label:l.__("Reload")})]}).then((t=>{if(t.button.accept&&!e.isDisposed)return e.revert()})):e.isDisposed?void 0:e.revert():(0,c.vC)({title:l.__("Cannot Reload"),body:l.__("No context found for current widget!"),buttons:[c.Vq.okButton()]})}}),s.addCommand(o.restoreCheckpoint,{label:()=>l.__("Revert %1 to Checkpoint…",M(u.currentWidget,t)),caption:l.__("Revert contents to previous checkpoint"),isEnabled:v,execute:()=>{if(!v())return;const e=t.contextForWidget(u.currentWidget);return e?e.listCheckpoints().then((async n=>{const o=M(u.currentWidget,t);if(n.length<1)return void await(0,c.UW)(l.__("No checkpoints"),l.__("No checkpoints are available for this %1.",o));const a=1===n.length?n[0]:await I.getTargetCheckpoint(n.reverse(),l);return a?(0,c.vC)({title:l.__("Revert %1 to checkpoint",o),body:new $(a,l,o),buttons:[c.Vq.cancelButton(),c.Vq.warnButton({label:l.__("Revert"),ariaLabel:l.__("Revert to Checkpoint")})]}).then((t=>{if(!e.isDisposed)return t.button.accept?e.model.readOnly?e.revert():e.restoreCheckpoint(a.id).then((()=>e.revert())):void 0})):void 0})):(0,c.vC)({title:l.__("Cannot Revert"),body:l.__("No context found for current widget!"),buttons:[c.Vq.okButton()]})}});const h=new WeakSet;s.addCommand(o.save,{label:()=>l.__("Save %1",M(u.currentWidget,t)),caption:()=>{if(u.currentWidget){const e=t.contextForWidget(u.currentWidget);if(null==e?void 0:e.model.collaborative)return l.__("In collaborative mode, the document is saved automatically after every change")}return l.__("Save and create checkpoint")},icon:e=>e.toolbar?C.Nd:void 0,isEnabled:()=>{var e;const{currentWidget:n}=u;if(!n)return!1;const o=t.contextForWidget(n);return!!(null===(e=null==o?void 0:o.contentsModel)||void 0===e?void 0:e.writable)},execute:async()=>{var e,n,o;if(v()){const r=u.currentWidget,i=t.contextForWidget(r);if(!i)return(0,c.vC)({title:l.__("Cannot Save"),body:l.__("No context found for current widget!"),buttons:[c.Vq.okButton()]});{if(h.has(i))return;if(i.model.readOnly)return(0,c.vC)({title:l.__("Cannot Save"),body:l.__("Document is read-only"),buttons:[c.Vq.okButton()]});h.add(i);const d=p.PathExt.basename(null!==(n=null===(e=i.contentsModel)||void 0===e?void 0:e.path)&&void 0!==n?n:"");let s=d;if(t.renameUntitledFileOnSave&&!0===r.isUntitled){const e=await m.m.getText({title:l.__("Rename file"),okLabel:l.__("Rename"),placeholder:l.__("File name"),text:d,selectionRange:d.length-p.PathExt.extname(d).length,checkbox:{label:l.__("Do not ask me again."),caption:l.__("If checked, you will not be asked to rename future untitled files when saving them.")}});if(e.button.accept&&(s=null!==(o=e.value)&&void 0!==o?o:d,r.isUntitled=!1,"boolean"==typeof e.isChecked)){const t=(await a.get(A,"renameUntitledFileOnSave")).composite;e.isChecked===t&&a.set(A,"renameUntitledFileOnSave",!e.isChecked).catch((e=>{console.error(`Fail to set 'renameUntitledFileOnSave:\n${e}`)}))}}try{if(await i.save(),!(null==r?void 0:r.isDisposed))return i.createCheckpoint()}catch(e){if("ModalCancelError"===e.name)return;throw e}finally{h.delete(i),s!==d&&await i.rename(s)}}}}}),s.addCommand(o.saveAll,{label:()=>l.__("Save All"),caption:l.__("Save all open documents"),isEnabled:()=>(0,x.G)(u.widgets("main"),(e=>{var n,o,a;return null!==(a=null===(o=null===(n=t.contextForWidget(e))||void 0===n?void 0:n.contentsModel)||void 0===o?void 0:o.writable)&&void 0!==a&&a})),execute:()=>{const e=[],n=new Set;for(const o of u.widgets("main")){const a=t.contextForWidget(o);!a||a.model.readOnly||n.has(a.path)||(n.add(a.path),e.push(a.save()))}return Promise.all(e)}}),s.addCommand(o.saveAs,{label:()=>l.__("Save %1 As…",M(u.currentWidget,t)),caption:l.__("Save with new path"),isEnabled:v,execute:()=>{if(v()){const e=t.contextForWidget(u.currentWidget);if(!e)return(0,c.vC)({title:l.__("Cannot Save"),body:l.__("No context found for current widget!"),buttons:[c.Vq.okButton()]});const n=(n,a)=>{"save"===a.type&&a.newValue&&a.newValue.path!==e.path&&(t.closeFile(e.path),s.execute(o.open,{path:a.newValue.path}))};t.services.contents.fileChanged.connect(n),e.saveAs().finally((()=>t.services.contents.fileChanged.disconnect(n)))}}}),s.addCommand(o.toggleAutosave,{label:l.__("Autosave Documents"),isToggled:()=>t.autosave,execute:()=>{const e=!t.autosave,n="autosave";return a.set(A,n,e).catch((e=>{console.error(`Failed to set ${A}:${n} - ${e.message}`)}))}}),d&&[o.reload,o.restoreCheckpoint,o.save,o.saveAs,o.toggleAutosave,o.duplicate].forEach((e=>{d.addItem({command:e,category:g})}))}(e,t,n,a,r,d,i);const u=n=>{const a=n.get("autosave").composite;t.autosave=!0!==a&&!1!==a||a,e.commands.notifyCommandChanged(o.toggleAutosave);const r=n.get("confirmClosingDocument").composite;t.confirmClosingDocument=null==r||r;const i=n.get("autosaveInterval").composite;t.autosaveInterval=i||120;const d=n.get("lastModifiedCheckMargin").composite;t.lastModifiedCheckMargin=d||500;const l=n.get("renameUntitledFileOnSave").composite;t.renameUntitledFileOnSave=null==l||l;const c=n.get("defaultViewers").composite,u={};Object.keys(c).forEach((e=>{s.getFileType(e)?(s.getWidgetFactory(c[e])||console.warn(`Document viewer ${c[e]} not found`),u[e]=c[e]):console.warn(`File Type ${e} not found`)}));for(const e of s.fileTypes())try{s.setDefaultWidgetFactory(e.name,u[e.name])}catch(t){console.warn(`Failed to set default viewer ${u[e.name]} for file type ${e.name}`)}};Promise.all([a.load(A),e.restored]).then((([e])=>{e.changed.connect(u),u(e),t.stateChanged.connect(((t,n)=>{["autosave","autosaveInterval","confirmClosingDocument","lastModifiedCheckMargin","renameUntitledFileOnSave"].includes(n.name)&&e.get(n.name).composite!==n.newValue&&e.set(n.name,n.newValue).catch((e=>{console.error(`Failed to set the setting '${n.name}':\n${e}`)}))}))})).catch((e=>{console.error(e.message)})),a.transform(A,{fetch:e=>{const t=Array.from(s.fileTypes()).map((e=>e.name)).join("    \n"),n=Array.from(s.widgetFactories()).map((e=>e.name)).join("    \n"),o=l.__('Overrides for the default viewers for file types.\nSpecify a mapping from file type name to document viewer name, for example:\n\ndefaultViewers: {\n  markdown: "Markdown Preview"\n}\n\nIf you specify non-existent file types or viewers, or if a viewer cannot\nopen a given file type, the override will not function.\n\nAvailable viewers:\n%1\n\nAvailable file types:\n%2',n,t),a=k.JSONExt.deepCopy(e.schema);return a.properties.defaultViewers.description=o,{...e,schema:a}}}),s.changed.connect((()=>a.load(A,!0)))}},V={id:"@jupyterlab/docmanager-extension:saving-status",description:"Adds a saving status indicator.",autoStart:!0,requires:[g.T,i.r],optional:[y.gv,b.WQ],activate:(e,t,n,o,a)=>{if(!a)return;const r=new h.N({docManager:t,translator:null!=o?o:y.Sr});r.model.widget=n.currentWidget,n.currentChanged.connect((()=>{r.model.widget=n.currentWidget})),a.registerStatusItem(V.id,{item:r,align:"middle",isActive:()=>null!==r.model&&null!==r.model.status,activeStateChanged:r.model.stateChanged})}},q={id:"@jupyterlab/docmanager-extension:path-status",description:"Adds a file path indicator in the status bar.",autoStart:!0,requires:[g.T,i.r],optional:[b.WQ],activate:(e,t,n,o)=>{if(!o)return;const a=new f.q({docManager:t});a.model.widget=n.currentWidget,n.currentChanged.connect((()=>{a.model.widget=n.currentWidget})),o.registerStatusItem(q.id,{item:a,align:"right",rank:0})}},R={id:"@jupyterlab/docmanager-extension:download",description:"Adds command to download files.",autoStart:!0,requires:[g.T],optional:[y.gv,d.WW],activate:(e,t,n,a)=>{const r=(null!=n?n:y.Sr).load("jupyterlab"),{commands:i,shell:d}=e,l=()=>{const{currentWidget:e}=d;return!(!e||!t.contextForWidget(e))};i.addCommand(o.download,{label:r.__("Download"),caption:r.__("Download the file to your computer"),isEnabled:l,execute:()=>{if(l()){const e=t.contextForWidget(d.currentWidget);return e?e.download():(0,c.vC)({title:r.__("Cannot Download"),body:r.__("No context found for current widget!"),buttons:[c.Vq.okButton()]})}}});const s=r.__("File Operations");a&&a.addItem({command:o.download,category:s})}},j={id:"@jupyterlab/docmanager-extension:open-browser-tab",description:"Adds command to open a browser tab.",autoStart:!0,requires:[g.T],optional:[y.gv],activate:(e,t,n)=>{const a=(null!=n?n:y.Sr).load("jupyterlab"),{commands:r}=e;r.addCommand(o.openBrowserTab,{execute:e=>{const n=void 0===e.path?"":e.path;if(n)return t.services.contents.getDownloadUrl(n).then((e=>{const t=window.open();if(!t)throw new Error("Failed to open new browser tab.");t.opener=null,t.location.href=e}))},iconClass:e=>e.icon||"",label:()=>a.__("Open in New Browser Tab")})}},N=[E,B,D,q,V,R,j,T];var O,I;!function(e){e.createSaveButton=function(e,t){return(0,s.sg)(u.zz.create(S.createElement(u.lA,{signal:t},(()=>S.createElement(s.lv,{commands:e,id:o.save,label:"",args:{toolbar:!0}})))))}}(O||(O={}));class $ extends F.$L{constructor(e,t,n="notebook"){super({node:I.createRevertConfirmNode(e,n,t)})}}function M(e,t){if(!e)return"File";const n=t.contextForWidget(e);if(!n)return"";const o=t.registry.getFileTypesForPath(n.path);return o.length&&o[0].displayName?o[0].displayName:"File"}!function(e){e.id=0,e.createRevertConfirmNode=function(e,t,n){const o=document.createElement("div"),a=document.createElement("p"),r=document.createTextNode(n.__("Are you sure you want to revert the %1 to checkpoint? ",t)),i=document.createElement("strong");i.textContent=n.__("This cannot be undone."),a.appendChild(r),a.appendChild(i);const d=document.createElement("p"),l=document.createTextNode(n.__("The checkpoint was last updated at: ")),c=document.createElement("p"),s=new Date(e.last_modified);return c.style.textAlign="center",c.textContent=p.Time.format(s)+" ("+p.Time.formatHuman(s)+")",d.appendChild(l),d.appendChild(c),o.appendChild(a),o.appendChild(d),o},e.getTargetCheckpoint=async function(e,t){const n=e.map(((e,t)=>`${t}. ${p.Time.format(e.last_modified)} (${p.Time.formatHuman(e.last_modified)})`)),o=(await m.m.getItem({items:n,title:t.__("Choose a checkpoint")})).value;if(!o)return;const a=o.split(".",1)[0];return e[parseInt(a,10)]}}(I||(I={}))}}]);