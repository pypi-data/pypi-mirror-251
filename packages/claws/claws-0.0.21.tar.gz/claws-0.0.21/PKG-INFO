Metadata-Version: 2.1
Name: claws
Version: 0.0.21
Summary: The Crossref Labs AWS tooling system.
Home-page: https://gitlab.com/crossref/labs/distrunner
Author: Martin Paul Eve
Author-email: meve@crossref.org
Maintainer-email: Martin Paul Eve <meve@crossref.org>
License: Copyright &copy; 2023 Crossref
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Project-URL: homepage, https://labs.crossref.org
Project-URL: documentation, https://labs.crossref.org
Project-URL: repository, https://gitlab.com/crossref/labs/claws
Project-URL: changelog, https://gitlab.com/crossref/labs/claws/-/blob/main/CHANGELOG.md
Keywords: distributed computing
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: botocore==1.27.59
Requires-Dist: boto3==1.24.59
Requires-Dist: aiohttp==3.8.4
Requires-Dist: yarl==1.8.2
Requires-Dist: moto==4.1.6
Requires-Dist: pytest==6.2.5
Requires-Dist: pytest-asyncio==0.20.3
Requires-Dist: pytest-localstack==0.6.0
Requires-Dist: pytest-mock==3.10.0
Requires-Dist: coverage==7.2.2
Requires-Dist: smart-open==6.3.0

# Claws: Crossref Labs AWS Tools
Claws is a Python module that provides a simple and convenient way to interact with AWS services, such as S3 and CloudWatch. It utilizes the boto3 library and aiohttp for asynchronous operations, making it ideal for applications that require high-performance and efficient resource utilization.

![license](https://img.shields.io/gitlab/license/crossref/labs/claws) ![activity](https://img.shields.io/gitlab/last-commit/crossref/labs/claws)

![AWS](https://img.shields.io/badge/AWS-%23FF9900.svg?style=for-the-badge&logo=amazon-aws&logoColor=white) ![Linux](https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black) ![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)

This is a prototype Crossref Labs system. It is not guaranteed to be stable and the metadata schema and behaviour may be subject to change at any time.

## Features
* S3 client and resource management with automatic deferred initialization
* Presigned URL generation for S3 objects
* Asynchronous downloading of multiple S3 objects
* Retrieval of S3 objects as strings
* Custom exception handling for S3 object retrieval errors
* Easy integration with monitoring and instrumentation tools
* Streaming upload to S3 to handle large JSON files

## Requirements
* Python 3.6 or higher
* boto3
* aiohttp
* smart-open

## Installation

To install the Claws module, simply use the following pip command:

    pip install claws

## Usage
Here is a basic example of how to use the Claws module to interact with AWS S3:

    from claws.aws_utils import AWSConnector


    # Initialize the AWSConnector with a specific S3 bucket
    connector = AWSConnector(bucket="my-bucket", unsigned=False)
    
    # Download an S3 object as a string
    result = connector.s3_obj_to_str(bucket="my-bucket", s3_path="path/to/object.txt")
    
    # Download multiple S3 objects asynchronously in parallel
    s3_objects = ["path/to/object1.txt", "path/to/object2.txt", "path/to/object3.txt"]
    results = connector.get_multiple_s3_objs(bucket="my-bucket", s3_objs=s3_objects)
    
    for result in results:
        print(result)

## Contributing
Contributions to the Claws module are welcome. Please feel free to submit pull requests or report issues on the GitHub repository.

## License
Claws is released under the [MIT License](https://opensource.org/licenses/MIT).

# Credits
* [.gitignore](https://github.com/github/gitignore) from Github.
* [AWS Lambda Powertools](https://awslabs.github.io/aws-lambda-powertools-python/2.10.0/) by Amazon.

&copy; Crossref 2023
