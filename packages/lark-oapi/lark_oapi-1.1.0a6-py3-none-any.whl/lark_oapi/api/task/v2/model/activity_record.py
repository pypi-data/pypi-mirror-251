# Code generated by Lark OpenAPI.

from typing import Optional

from lark_oapi.core.construct import init


class ActivityRecord(object):
    _types = {
        "key": int,
        "content": str,
        "created_at": str,
    }

    def __init__(self, d=None):
        self.key: Optional[int] = None
        self.content: Optional[str] = None
        self.created_at: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ActivityRecordBuilder":
        return ActivityRecordBuilder()


class ActivityRecordBuilder(object):
    def __init__(self) -> None:
        self._activity_record = ActivityRecord()

    def key(self, key: int) -> "ActivityRecordBuilder":
        self._activity_record.key = key
        return self

    def content(self, content: str) -> "ActivityRecordBuilder":
        self._activity_record.content = content
        return self

    def created_at(self, created_at: str) -> "ActivityRecordBuilder":
        self._activity_record.created_at = created_at
        return self

    def build(self) -> "ActivityRecord":
        return self._activity_record
