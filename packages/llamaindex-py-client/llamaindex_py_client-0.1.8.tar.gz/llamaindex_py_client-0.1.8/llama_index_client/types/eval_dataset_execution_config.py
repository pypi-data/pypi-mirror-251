# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class EvalDatasetExecutionConfig(pydantic.BaseModel):
    """
    Dagster op configuration for eval_dataset_execution job.
    """

    pipeline_id: str
    eval_dataset_id: str
    eval_question_ids: typing.List[str] = pydantic.Field(description="List of eval question ids")
    eval_exec_params_json: str = pydantic.Field(description="JSON serialized EvalExecutionParams object")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
