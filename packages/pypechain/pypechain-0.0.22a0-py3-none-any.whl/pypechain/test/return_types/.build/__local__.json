{"contractTypes":{"ReturnTypes":{"abi":[{"inputs":[],"name":"mixStructsAndPrimitives","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"simpleStruct","type":"tuple"},{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"},{"components":[{"internalType":"bool","name":"boolVal","type":"bool"}],"internalType":"struct ReturnTypes.InnerStruct","name":"innerStruct","type":"tuple"}],"internalType":"struct ReturnTypes.NestedStruct","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"YesOrNo","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"namedSingleStruct","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"struct1","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"name":"namedSingleValue","outputs":[{"internalType":"uint256","name":"added","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"namedTwoMixedStructs","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"simpleStruct","type":"tuple"},{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"},{"components":[{"internalType":"bool","name":"boolVal","type":"bool"}],"internalType":"struct ReturnTypes.InnerStruct","name":"innerStruct","type":"tuple"}],"internalType":"struct ReturnTypes.NestedStruct","name":"nestedStruct","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"name":"namedTwoValues","outputs":[{"internalType":"uint256","name":"flip","type":"uint256"},{"internalType":"uint256","name":"flop","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"}],"name":"noNameSingleValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"s","type":"string"}],"name":"noNameTwoValues","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"singleNestedStruct","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"},{"components":[{"internalType":"bool","name":"boolVal","type":"bool"}],"internalType":"struct ReturnTypes.InnerStruct","name":"innerStruct","type":"tuple"}],"internalType":"struct ReturnTypes.NestedStruct","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"singleSimpleStruct","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"twoMixedStructs","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"","type":"tuple"},{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"},{"components":[{"internalType":"bool","name":"boolVal","type":"bool"}],"internalType":"struct ReturnTypes.InnerStruct","name":"innerStruct","type":"tuple"}],"internalType":"struct ReturnTypes.NestedStruct","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"twoSimpleStructs","outputs":[{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"","type":"tuple"},{"components":[{"internalType":"uint256","name":"intVal","type":"uint256"},{"internalType":"string","name":"strVal","type":"string"}],"internalType":"struct ReturnTypes.SimpleStruct","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"}],"contractName":"ReturnTypes","deploymentBytecode":{"bytecode":"0x608060405234801561000f575f80fd5b5061080e8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806373b10c0f1161006e57806373b10c0f146101e5578063811d9aa31461017d578063879896af146101fe578063c567c2f314610220578063d6c1a03e14610235578063e0f7c6041461025b575f80fd5b8063389e9102146100aa57806340e27b10146100ce57806353fd1043146101675780636456bc791461017d578063730fe90e146101d2575b5f80fd5b6100bb6100b836600461053c565b90565b6040519081526020015b60405180910390f35b6040805180820182525f80825260606020928301819052835180850185529182529082015281518083018352600181528251808401845260108082526f596f7520617265206e756d626572203160801b82850152828401919091528351808501855260028152845180860186529182526f2cb7ba9030b93290373ab6b132b9101960811b828501529283015291516100c59291906105bc565b61016f610263565b6040516100c592919061061e565b6040805180820182525f81526060602091820152815180830183526001815282518084018452601081526f596f7520617265206e756d626572203160801b818401529181019190915290516100c59190610642565b6100bb6101e0366004610654565b610308565b6101ed61031c565b6040516100c5959493929190610674565b61021261020c3660046106db565b90600290565b6040516100c5929190610786565b6102286103ef565b6040516100c591906107a7565b610246610243366004610654565b91565b604080519283526020830191909152016100c5565b61016f610451565b604080518082019091525f81526060602082015261027f610508565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b8284015280830191909152845191820185529181529281019290925291565b5f61031382846107b9565b90505b92915050565b604080518082019091525f815260606020820152610338610508565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b828401528083019190915284518083018652838152818601528451808601909552601385527214995d1d5c9b951e5c195cd0dbdb9d1c9858dd606a1b9185019190915291925f9091929394565b6103f7610508565b6040518060600160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b8152508152602001604051806020016040528060011515815250815250905090565b604080518082019091525f81526060602082015261046d610508565b6040518060400160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b81525081525091506040518060600160405280600281526020016040518060400160405280601081526020016f2cb7ba9030b93290373ab6b132b9101960811b815250815260200160405180602001604052806001151581525081525090509091565b60405180606001604052805f81526020016060815260200161053760405180602001604052805f151581525090565b905290565b5f6020828403121561054c575f80fd5b5035919050565b5f81518084525f5b818110156105775760208185018101518683018201520161055b565b505f602082860101526020601f19601f83011685010191505092915050565b805182525f6020820151604060208501526105b46040850182610553565b949350505050565b604081525f6105ce6040830185610596565b82810360208401526105e08185610596565b95945050505050565b805182525f6020820151606060208501526106076060850182610553565b604093840151511515949093019390935250919050565b604081525f6106306040830185610596565b82810360208401526105e081856105e9565b602081525f6103136020830184610596565b5f8060408385031215610665575f80fd5b50508035926020909101359150565b60a081525f61068660a0830188610596565b828103602084015261069881886105e9565b905085604084015282810360608401526106b28186610553565b91505082151560808301529695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156106eb575f80fd5b813567ffffffffffffffff80821115610702575f80fd5b818401915084601f830112610715575f80fd5b813581811115610727576107276106c7565b604051601f8201601f19908116603f0116810190838211818310171561074f5761074f6106c7565b81604052828152876020848701011115610767575f80fd5b826020860160208301375f928101602001929092525095945050505050565b604081525f6107986040830185610553565b90508260208301529392505050565b602081525f61031360208301846105e9565b8082018082111561031657634e487b7160e01b5f52601160045260245ffdfea2646970667358221220966c455010a1fd1178b4cb6dc2020803e06fa513772fb0fc89aa92970fee60fc64736f6c63430008170033"},"devdoc":{"kind":"dev","methods":{},"version":1},"runtimeBytecode":{"bytecode":"0x608060405234801561000f575f80fd5b5061080e8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806373b10c0f1161006e57806373b10c0f146101e5578063811d9aa31461017d578063879896af146101fe578063c567c2f314610220578063d6c1a03e14610235578063e0f7c6041461025b575f80fd5b8063389e9102146100aa57806340e27b10146100ce57806353fd1043146101675780636456bc791461017d578063730fe90e146101d2575b5f80fd5b6100bb6100b836600461053c565b90565b6040519081526020015b60405180910390f35b6040805180820182525f80825260606020928301819052835180850185529182529082015281518083018352600181528251808401845260108082526f596f7520617265206e756d626572203160801b82850152828401919091528351808501855260028152845180860186529182526f2cb7ba9030b93290373ab6b132b9101960811b828501529283015291516100c59291906105bc565b61016f610263565b6040516100c592919061061e565b6040805180820182525f81526060602091820152815180830183526001815282518084018452601081526f596f7520617265206e756d626572203160801b818401529181019190915290516100c59190610642565b6100bb6101e0366004610654565b610308565b6101ed61031c565b6040516100c5959493929190610674565b61021261020c3660046106db565b90600290565b6040516100c5929190610786565b6102286103ef565b6040516100c591906107a7565b610246610243366004610654565b91565b604080519283526020830191909152016100c5565b61016f610451565b604080518082019091525f81526060602082015261027f610508565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b8284015280830191909152845191820185529181529281019290925291565b5f61031382846107b9565b90505b92915050565b604080518082019091525f815260606020820152610338610508565b505060408051808201825260018082528251808401845260108082526f596f7520617265206e756d626572203160801b60208381019190915280850192909252845160608101865260028152855180870187529182526f2cb7ba9030b93290373ab6b132b9101960811b828401528083019190915284518083018652838152818601528451808601909552601385527214995d1d5c9b951e5c195cd0dbdb9d1c9858dd606a1b9185019190915291925f9091929394565b6103f7610508565b6040518060600160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b8152508152602001604051806020016040528060011515815250815250905090565b604080518082019091525f81526060602082015261046d610508565b6040518060400160405280600181526020016040518060400160405280601081526020016f596f7520617265206e756d626572203160801b81525081525091506040518060600160405280600281526020016040518060400160405280601081526020016f2cb7ba9030b93290373ab6b132b9101960811b815250815260200160405180602001604052806001151581525081525090509091565b60405180606001604052805f81526020016060815260200161053760405180602001604052805f151581525090565b905290565b5f6020828403121561054c575f80fd5b5035919050565b5f81518084525f5b818110156105775760208185018101518683018201520161055b565b505f602082860101526020601f19601f83011685010191505092915050565b805182525f6020820151604060208501526105b46040850182610553565b949350505050565b604081525f6105ce6040830185610596565b82810360208401526105e08185610596565b95945050505050565b805182525f6020820151606060208501526106076060850182610553565b604093840151511515949093019390935250919050565b604081525f6106306040830185610596565b82810360208401526105e081856105e9565b602081525f6103136020830184610596565b5f8060408385031215610665575f80fd5b50508035926020909101359150565b60a081525f61068660a0830188610596565b828103602084015261069881886105e9565b905085604084015282810360608401526106b28186610553565b91505082151560808301529695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156106eb575f80fd5b813567ffffffffffffffff80821115610702575f80fd5b818401915084601f830112610715575f80fd5b813581811115610727576107276106c7565b604051601f8201601f19908116603f0116810190838211818310171561074f5761074f6106c7565b81604052828152876020848701011115610767575f80fd5b826020860160208301375f928101602001929092525095945050505050565b604081525f6107986040830185610553565b90508260208301529392505050565b602081525f61031360208301846105e9565b8082018082111561031657634e487b7160e01b5f52601160045260245ffdfea2646970667358221220966c455010a1fd1178b4cb6dc2020803e06fa513772fb0fc89aa92970fee60fc64736f6c63430008170033"},"sourceId":"ReturnTypes.sol","sourcemap":"57:3179:0:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}}},"manifest":"ethpm/3","sources":{"ReturnTypes.sol":{"checksum":{"algorithm":"md5","hash":"0x4df2ee46ad10bf42755b93d56783336e"},"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ReturnTypes {\n\n    struct SimpleStruct {\n        uint intVal;\n        string strVal;\n    }\n\n    struct InnerStruct {\n        bool boolVal;\n    }\n\n    struct NestedStruct {\n        uint intVal;\n        string strVal;\n        InnerStruct innerStruct;\n    }\n\n    function noNameSingleValue(uint x) public pure returns (uint) {\n        return x;\n    }\n\n    function noNameTwoValues(string memory s) public pure returns (string memory, uint) {\n        return (s, 2);\n    }\n\n    function namedSingleValue(uint x, uint y) public pure returns (uint added) {\n        return x + y;\n    }\n\n    function namedTwoValues(uint x, uint y) public pure returns (uint flip, uint flop) {\n        return (y,x);\n    }\n\n    function singleSimpleStruct() public pure returns (SimpleStruct memory) {\n        return SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n    }\n\n    function singleNestedStruct() public pure returns (NestedStruct memory) {\n        return NestedStruct({\n            intVal: 1,\n            strVal: \"You are number 1\",\n            innerStruct: InnerStruct({boolVal: true})\n        });\n    }\n\n    function twoSimpleStructs() public pure returns (SimpleStruct memory, SimpleStruct memory) {\n        SimpleStruct memory simpleStruct1 = SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n\n        SimpleStruct memory simpleStruct2 = SimpleStruct({\n            intVal: 2,\n            strVal: \"You are number 2\"\n        });\n\n        return (simpleStruct1, simpleStruct2);\n    }\n\n    function twoMixedStructs() public pure returns (SimpleStruct memory, NestedStruct memory) {\n        SimpleStruct memory simpleStruct = SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n        NestedStruct memory nestedtStruct = NestedStruct({\n            intVal: 2,\n            strVal: \"You are number 2\",\n            innerStruct: InnerStruct({boolVal: true})\n        });\n\n        return (simpleStruct, nestedtStruct);\n    }\n\n    function namedSingleStruct() public pure returns (SimpleStruct memory struct1) {\n        return SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n    }\n\n    function namedTwoMixedStructs() public pure returns (SimpleStruct memory simpleStruct, NestedStruct memory nestedStruct) {\n        simpleStruct = SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n        nestedStruct = NestedStruct({\n            intVal: 2,\n            strVal: \"You are number 2\",\n            innerStruct: InnerStruct({boolVal: true})\n        });\n    }\n\n    function mixStructsAndPrimitives() public pure returns (SimpleStruct memory simpleStruct, NestedStruct memory, uint, string memory name, bool YesOrNo) {\n        simpleStruct = SimpleStruct({\n            intVal: 1,\n            strVal: \"You are number 1\"\n        });\n        NestedStruct memory nestedStruct = NestedStruct({\n            intVal: 2,\n            strVal: \"You are number 2\",\n            innerStruct: InnerStruct({boolVal: true})\n        });\n\n        return (simpleStruct, nestedStruct, 1, \"ReturnTypesContract\", false);\n    }\n}\n","imports":[],"references":[],"urls":[]}}}